<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gganimate | Tao Yan</title>
    <link>https://taoyan.netlify.app/tags/gganimate/</link>
      <atom:link href="https://taoyan.netlify.app/tags/gganimate/index.xml" rel="self" type="application/rss+xml" />
    <description>gganimate</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Tao Yan, 2018-2020</copyright><lastBuildDate>Wed, 14 Aug 2019 16:19:05 +0000</lastBuildDate>
    <image>
      <url>https://taoyan.netlify.app/img/pom-card.png</url>
      <title>gganimate</title>
      <link>https://taoyan.netlify.app/tags/gganimate/</link>
    </image>
    
    <item>
      <title>gganimate:数据跳动</title>
      <link>https://taoyan.netlify.app/post/2019-08-14.gganimate%E4%B9%8B%E6%95%B0%E6%8D%AE%E8%B7%B3%E5%8A%A8/</link>
      <pubDate>Wed, 14 Aug 2019 16:19:05 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2019-08-14.gganimate%E4%B9%8B%E6%95%B0%E6%8D%AE%E8%B7%B3%E5%8A%A8/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815155922.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;前面已经粗略学了一下&lt;code&gt;gganimate&lt;/code&gt;的部分语法，下面继续。&lt;/p&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;使用数据集如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;head(gapminder)
# A tibble: 6 x 6
  country     continent  year lifeExp      pop gdpPercap
  &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
1 Afghanistan Asia       1952    28.8  8425333      779.
2 Afghanistan Asia       1957    30.3  9240934      821.
3 Afghanistan Asia       1962    32.0 10267083      853.
4 Afghanistan Asia       1967    34.0 11537966      836.
5 Afghanistan Asia       1972    36.1 13079460      740.
6 Afghanistan Asia       1977    38.4 14880372      786.
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;static-plot&#34;&gt;Static plot&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = country)) +
  geom_point(show.legend = FALSE, alpha = 0.7) +
  scale_color_manual(values = country_colors) +
  scale_x_log10() +
  scale_size(range = c(5, 15)) +
  labs(x = &amp;quot;GDP Per Captita&amp;quot;, y = &amp;quot;Life Expectancy&amp;quot;)
p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815152713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个&lt;code&gt;country_color&lt;/code&gt;调色版不错&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;随时间变化&#34;&gt;随时间变化&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;p + transition_time(year) +
  labs(title = &amp;quot;Year:{frame_time}&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815153144.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;固定坐标轴&#34;&gt;固定坐标轴&lt;/h4&gt;
&lt;p&gt;由&lt;code&gt;view_follow&lt;/code&gt;实现&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p + transition_time(year) +
  labs(title = &amp;quot;Year: {frame_time}&amp;quot;) +
  view_follow(fixed_y = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815153421.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里指固定y轴，可以看到x轴还是在变化，这个实际上用处不大&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;shadows_&#34;&gt;shadows_*&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;shadows: you want the animation to have memory.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这个很有意思，使你的动画具有记忆，看看是如何实现的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;shadow_wake&#34;&gt;shadow_wake()&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;This shadow is meant to draw a small wake after data by showing the latest frames up to the current. You can choose to gradually diminish the size and/or opacity of the shadow. The length of the wake is not given in absolute frames as that would make the animation susceptible to changes in the framerate. Instead it is given as a proportion of the total length of the animation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看出，&lt;code&gt;shadow_wake()&lt;/code&gt;在&lt;code&gt;transition_time()&lt;/code&gt;的基础上进行了运动轨迹的记录。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p + transition_time(year) +
  labs(title = &amp;quot;Year: {frame_time}&amp;quot;) +
  shadow_wake(wake_length = 0.1, alpha = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815154313.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;默认情况下，动画会从前一帧中留下轨迹阴影，&lt;code&gt;gganimate&lt;/code&gt;默认的是100帧动画，所以我们这里设置&lt;code&gt;wake_length=0.1&lt;/code&gt;,这样每个点后面会留下此动画前10个动画点阴影，并且大小、透明度都会下降。从上图我们可以看到这10个点之间有着明显的间隙，要修改这种间隙的话，最简单的方法就是通过&lt;code&gt;animate()&lt;/code&gt;中的&lt;code&gt;detail&lt;/code&gt;参数设置,另外我们可以看到这种动画不是很清晰漂亮，主要是我是在&lt;code&gt;Windows&lt;/code&gt;上实现的，&lt;code&gt;Windows&lt;/code&gt;默认使用&lt;code&gt;Windows GDI&lt;/code&gt;作为图形设备，以及&lt;code&gt;png()&lt;/code&gt;图形设备进行渲染。可以更改为&lt;code&gt;cairo&lt;/code&gt;进行渲染。如果你是&lt;code&gt;Mac&lt;/code&gt;用户的话，默认的渲染效果就非常棒了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;p_wake &amp;lt;- p + transition_time(year) +
  labs(title = &amp;quot;Year: {frame_time}&amp;quot;) +
  shadow_wake(wake_length = 0.1, alpha = FALSE)

p_wake%&amp;gt;%animate(detail=5, type=&amp;quot;cairo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815155400.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以看到渲染效果非常棒！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;shadow_&lt;/code&gt;类函数十分好玩，通过修改各种参数，美感十足&lt;/p&gt;
&lt;h5 id=&#34;修改长度wake_length&#34;&gt;修改长度&lt;code&gt;wake_length&lt;/code&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;p_wake &amp;lt;- p + transition_time(year) +
  labs(title = &amp;quot;Year: {frame_time}&amp;quot;) +
  shadow_wake(wake_length = 0.2, alpha = FALSE)

p_wake%&amp;gt;%animate(detail=5, type=&amp;quot;cairo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815155922.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;修改大小size&#34;&gt;修改大小&lt;code&gt;size&lt;/code&gt;&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;shadow_wake()&lt;/code&gt;默认留下尺寸减小并透明的尾迹，这里我们生成尾迹透明但不收缩的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;p_wake &amp;lt;- p + transition_time(year) +
  labs(title = &amp;quot;Year: {frame_time}&amp;quot;) +
  shadow_wake(wake_length = 0.1, size = NULL)

p_wake%&amp;gt;%animate(detail=5, type=&amp;quot;cairo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815160306.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;多参数控制&#34;&gt;多参数控制&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;如果同时控制多参数，会如何呢?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;p_wake &amp;lt;- p + transition_time(year) +
  labs(title = &amp;quot;Year: {frame_time}&amp;quot;) +
  shadow_wake(wake_length = 0.2,
              size=15,
              alpha=NULL,
              #尾迹颜色为白色
              colour=&amp;quot;white&amp;quot;,
              #切换模式
              falloff = &amp;quot;quintic-in&amp;quot;
              )
p_wake%&amp;gt;%animate(detail=5, type=&amp;quot;cairo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815161507.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有点诡异。。。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;shadow_mark&#34;&gt;&lt;code&gt;shadow_mark()&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;This shadow lets you show the raw data behind the current frame. Both past and/or future raw data can be shown and styled as you want.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;很简单，就是将每次出现的轨迹都留下来不消失&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;p_mark &amp;lt;- p + transition_time(year) +
  labs(title = &amp;quot;Year: {frame_time}&amp;quot;) +
  shadow_mark(alpha = 0.3, size = 0.5)
p_mark%&amp;gt;%animate(detail=5, type=&amp;quot;cairo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815161920.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;transition_reveal&#34;&gt;&lt;code&gt;transition_reveal()&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;transition_reveal() allows you to let data gradually appear, based on a given time dimension.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这对于时间序列非常有用，顺着年-月-日进行动画，这也是为什么对于时间序列&lt;code&gt;transition_time()&lt;/code&gt;不好使。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;head(airquality)
  Ozone Solar.R Wind Temp Month Day
1    41     190  7.4   67     5   1
2    36     118  8.0   72     5   2
3    12     149 12.6   74     5   3
4    18     313 11.5   62     5   4
5    NA      NA 14.3   56     5   5
6    28      NA 14.9   66     5   6
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;airquality$month_name &amp;lt;- rep(c(&amp;quot;May&amp;quot;, &amp;quot;June&amp;quot;, &amp;quot;July&amp;quot;, &amp;quot;August&amp;quot;, &amp;quot;September&amp;quot;), c(31, 30, 31, 31, 30))

p_reveal &amp;lt;- ggplot(airquality, aes(Day, Temp, group = Month, color = month_name)) +
  geom_line() +
  geom_point(size=5) +
  geom_text(aes(label = month_name)) +
  transition_reveal(along = Day, range = , keep_last = F)
animate(p_reveal, nframes = 50, type=&amp;quot;cairo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190815163452.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;devtools::session_info()
- Session info ------------------------------------------------------------------
 setting  value                         
 version  R version 3.6.1 (2019-07-05)  
 os       Windows 10 x64                
 system   x86_64, mingw32               
 ui       RStudio                       
 language (EN)                          
 collate  Chinese (Simplified)_China.936
 ctype    Chinese (Simplified)_China.936
 tz       Asia/Taipei                   
 date     2019-08-15                    

- Packages ----------------------------------------------------------------------
 package     * version date       lib source                             
 assertthat    0.2.1   2019-03-21 [1] CRAN (R 3.6.0)                     
 backports     1.1.4   2019-04-10 [1] CRAN (R 3.6.0)                     
 broom         0.5.2   2019-04-07 [1] CRAN (R 3.6.0)                     
 callr         3.3.1   2019-07-18 [1] CRAN (R 3.6.1)                     
 cellranger    1.1.0   2016-07-27 [1] CRAN (R 3.6.0)                     
 cli           1.1.0   2019-03-19 [1] CRAN (R 3.6.0)                     
 colorspace    1.4-1   2019-03-18 [1] CRAN (R 3.6.0)                     
 crayon        1.3.4   2017-09-16 [1] CRAN (R 3.6.0)                     
 desc          1.2.0   2018-05-01 [1] CRAN (R 3.6.0)                     
 devtools      2.1.0   2019-07-06 [1] CRAN (R 3.6.1)                     
 digest        0.6.20  2019-07-04 [1] CRAN (R 3.6.1)                     
 dplyr       * 0.8.3   2019-07-04 [1] CRAN (R 3.6.1)                     
 fansi         0.4.0   2018-10-05 [1] CRAN (R 3.6.0)                     
 farver        1.1.0   2018-11-20 [2] CRAN (R 3.6.0)                     
 forcats     * 0.4.0   2019-02-17 [1] CRAN (R 3.6.0)                     
 fs            1.3.1   2019-05-06 [1] CRAN (R 3.6.0)                     
 gapminder   * 0.3.0   2017-10-31 [2] CRAN (R 3.6.0)                     
 generics      0.0.2   2018-11-29 [2] CRAN (R 3.6.0)                     
 gganimate   * 1.0.3   2019-04-02 [2] CRAN (R 3.6.0)                     
 ggplot2     * 3.2.1   2019-08-10 [1] CRAN (R 3.6.1)                     
 gifski        0.8.6   2018-09-28 [1] CRAN (R 3.6.0)                     
 glue          1.3.1   2019-03-12 [1] CRAN (R 3.6.0)                     
 grkstyle      0.0.1   2019-08-13 [1] Github (gadenbuie/grkstyle@a141d39)
 gtable        0.3.0   2019-03-25 [1] CRAN (R 3.6.0)                     
 haven         2.1.1   2019-07-04 [1] CRAN (R 3.6.1)                     
 hms           0.5.0   2019-07-09 [1] CRAN (R 3.6.1)                     
 httr          1.4.1   2019-08-05 [1] CRAN (R 3.6.1)                     
 jsonlite      1.6     2018-12-07 [1] CRAN (R 3.6.0)                     
 labeling      0.3     2014-08-23 [1] CRAN (R 3.6.0)                     
 lattice       0.20-38 2018-11-04 [2] CRAN (R 3.6.1)                     
 lazyeval      0.2.2   2019-03-15 [1] CRAN (R 3.6.0)                     
 lubridate     1.7.4   2018-04-11 [1] CRAN (R 3.6.0)                     
 magrittr      1.5     2014-11-22 [1] CRAN (R 3.6.0)                     
 memoise       1.1.0   2017-04-21 [1] CRAN (R 3.6.0)                     
 modelr        0.1.5   2019-08-08 [1] CRAN (R 3.6.1)                     
 munsell       0.5.0   2018-06-12 [1] CRAN (R 3.6.0)                     
 nlme          3.1-141 2019-08-01 [2] CRAN (R 3.6.1)                     
 pillar        1.4.2   2019-06-29 [1] CRAN (R 3.6.0)                     
 pkgbuild      1.0.4   2019-08-05 [1] CRAN (R 3.6.1)                     
 pkgconfig     2.0.2   2018-08-16 [1] CRAN (R 3.6.0)                     
 pkgload       1.0.2   2018-10-29 [2] CRAN (R 3.6.0)                     
 plyr          1.8.4   2016-06-08 [1] CRAN (R 3.6.0)                     
 png           0.1-7   2013-12-03 [1] CRAN (R 3.6.0)                     
 prettyunits   1.0.2   2015-07-13 [1] CRAN (R 3.6.0)                     
 processx      3.4.1   2019-07-18 [1] CRAN (R 3.6.1)                     
 progress      1.2.2   2019-05-16 [1] CRAN (R 3.6.0)                     
 ps            1.3.0   2018-12-21 [2] CRAN (R 3.6.0)                     
 purrr       * 0.3.2   2019-03-15 [1] CRAN (R 3.6.0)                     
 R6            2.4.0   2019-02-14 [1] CRAN (R 3.6.0)                     
 Rcpp          1.0.2   2019-07-25 [1] CRAN (R 3.6.1)                     
 readr       * 1.3.1   2018-12-21 [1] CRAN (R 3.6.0)                     
 readxl        1.3.1   2019-03-13 [1] CRAN (R 3.6.0)                     
 remotes       2.1.0   2019-06-24 [2] CRAN (R 3.6.0)                     
 rlang         0.4.0   2019-06-25 [1] CRAN (R 3.6.0)                     
 rprojroot     1.3-2   2018-01-03 [1] CRAN (R 3.6.0)                     
 rstudioapi    0.10    2019-03-19 [1] CRAN (R 3.6.0)                     
 rvest         0.3.4   2019-05-15 [1] CRAN (R 3.6.0)                     
 scales        1.0.0   2018-08-09 [1] CRAN (R 3.6.0)                     
 sessioninfo   1.1.1   2018-11-05 [2] CRAN (R 3.6.0)                     
 stringi       1.4.3   2019-03-12 [1] CRAN (R 3.6.0)                     
 stringr     * 1.4.0   2019-02-10 [1] CRAN (R 3.6.0)                     
 styler        1.1.1   2019-05-06 [1] CRAN (R 3.6.0)                     
 testthat      2.2.1   2019-07-25 [1] CRAN (R 3.6.1)                     
 tibble      * 2.1.3   2019-06-06 [1] CRAN (R 3.6.0)                     
 tidyr       * 0.8.3   2019-03-01 [1] CRAN (R 3.6.0)                     
 tidyselect    0.2.5   2018-10-11 [1] CRAN (R 3.6.0)                     
 tidyverse   * 1.2.1   2017-11-14 [1] CRAN (R 3.6.0)                     
 tweenr        1.0.1   2018-12-14 [2] CRAN (R 3.6.0)                     
 usethis       1.5.1   2019-07-04 [1] CRAN (R 3.6.1)                     
 utf8          1.1.4   2018-05-24 [1] CRAN (R 3.6.0)                     
 vctrs         0.2.0   2019-07-05 [1] CRAN (R 3.6.1)                     
 withr         2.1.2   2018-03-15 [1] CRAN (R 3.6.0)                     
 xml2          1.2.2   2019-08-09 [1] CRAN (R 3.6.1)                     
 zeallot       0.1.0   2018-01-28 [1] CRAN (R 3.6.0)                     

[1] C:/Tools/R/R_Library
[2] C:/Tools/R-3.6.1/library
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>gganimate:让数据动起来</title>
      <link>https://taoyan.netlify.app/post/2019-08-13.gganimate%E4%BD%BF%E6%95%B0%E6%8D%AE%E5%8A%A8%E8%B5%B7%E6%9D%A5/</link>
      <pubDate>Tue, 13 Aug 2019 16:19:05 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2019-08-13.gganimate%E4%BD%BF%E6%95%B0%E6%8D%AE%E5%8A%A8%E8%B5%B7%E6%9D%A5/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/firework.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;一年多以前我就写了篇R语言动画的博客:
&lt;a href=&#34;https://taoyan.netlify.com/post/2018-02-06.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bgganimate%E5%8C%85/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R语言可视化学习笔记之gganimate包&lt;/a&gt;。当时使用的是由
&lt;a href=&#34;https://github.com/dgrtwo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;David Robinson&lt;/a&gt;开发的&lt;code&gt;gganimate&lt;/code&gt;。后面由
&lt;a href=&#34;https://github.com/thomasp85&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Thomas Lin Pedersen&lt;/a&gt;接手，推倒重来，拓展了很多动画语法。具体的可参考
&lt;a href=&#34;https://github.com/thomasp85&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Thomas Lin Pedersen&lt;/a&gt;的
&lt;a href=&#34;https://github.com/thomasp85/gganimate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gganimate的Github主页&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;gganimate语法&#34;&gt;gganimate语法&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gganimate&lt;/code&gt;在&lt;code&gt;ggplot2&lt;/code&gt;的基础上进行了动画的拓展，所以可以完美兼容&lt;code&gt;ggplot2&lt;/code&gt;语法。主要有以下几类动画实现：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;transition_*()&lt;/code&gt;:定义数据如何伸展变化以及随时间关联&lt;/li&gt;
&lt;li&gt;&lt;code&gt;view_*()&lt;/code&gt;:定义位置比例如何随动画变化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shadow_*()&lt;/code&gt;:定义如何在给定时间点的基础上呈现来自其它时间点的数据&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enter_*()/ exit_*()&lt;/code&gt;:定义新数据如何显示，旧数据如何消失&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ease_aes()&lt;/code&gt;:定义了动画期间不同的美学映射如何过渡切换等&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;p&gt;安装该包的话可以直接从CRAN安装或者从Github上安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (!require(gganimate)) {
  install.packages(&amp;quot;gganimate&amp;quot;)
}
# or install.packages（&#39;devtools&#39;）
# devtools :: install_github（ &#39; thomasp85 / gganimate &#39;）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面我们通过例子来理解各个语法&lt;/p&gt;
&lt;p&gt;先来看一下作者提供的一个小例子：&lt;/p&gt;
&lt;h4 id=&#34;example-1&#34;&gt;Example 1&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;if (!require(gapminder)) {
  install.packages(&amp;quot;gapminder&amp;quot;)
}
require(gapminder)
require(gganimate)
require(tidyverse)

ggplot(mtcars, aes(factor(cyl), mpg)) +
  geom_boxplot() +
  # 接下来就是gganimate实现动画的语法
  transition_states(
    gear,
    transition_length = 2,
    state_length = 1
  ) +
  enter_fade() +
  exit_shrink() +
  ease_aes(&amp;quot;sine-in-out&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/1.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里&lt;code&gt;gear&lt;/code&gt;是分类数据类型，所以使用&lt;code&gt;transition_states&lt;/code&gt;，并提供了用于转换和状态的相对时间长度，这里我的理解是transition也就是变化的相对时间长短以及transition后保持这个状态(view)的相对时间长短。&lt;code&gt;enter_fade()&lt;/code&gt;的作用是出现的时候有个过程，慢慢浮现，不是突然之间出现。&lt;code&gt;exit_shrink()&lt;/code&gt;我理解是消失的时候是慢慢萎缩消失的，不是突然之间就没了，中间有个过程。&lt;code&gt;ease_aes(&amp;quot;sine-in-out&amp;quot;)&lt;/code&gt;的作用是使动画之间的切换按照正弦曲线的方式变化，这里x轴是没变化的，只有y轴变化。&lt;/p&gt;
&lt;h4 id=&#34;example-2&#34;&gt;Example 2&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;head(gapminder)
# A tibble: 6 x 6
  country     continent  year lifeExp      pop gdpPercap
  &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
1 Afghanistan Asia       1952    28.8  8425333      779.
2 Afghanistan Asia       1957    30.3  9240934      821.
3 Afghanistan Asia       1962    32.0 10267083      853.
4 Afghanistan Asia       1967    34.0 11537966      836.
5 Afghanistan Asia       1972    36.1 13079460      740.
6 Afghanistan Asia       1977    38.4 14880372      786.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, color = country)) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_color_manual(values = country_colors) +
  scale_x_log10() +
  scale_size(range = c(2, 12)) +
  facet_wrap(~continent) +
  # 接下来就是gganimate实现动画的语法
  labs(title = &amp;quot;Year:{frame_time}&amp;quot;, x = &amp;quot;GDP per capita&amp;quot;, y = &amp;quot;life expectancy&amp;quot;) +
  transition_time(year) +
  ease_aes(&amp;quot;linear&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/2.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里是按照时间(Year)变化的，具有连续性，所以无需指定transition 和 state length，比如1980~1990十年的变化时间自然就是2000~2005五年的2倍。&lt;/p&gt;
&lt;h4 id=&#34;example-3&#34;&gt;Example 3&lt;/h4&gt;
&lt;p&gt;最后提供一个用R语言放烟花的
&lt;a href=&#34;https://www.data-imaginist.com/2019/gganimate-has-transitioned-to-a-state-of-release/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;例子&lt;/a&gt;，真正的烟花。。。。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Firework colours
colours &amp;lt;- c(
  &amp;quot;lawngreen&amp;quot;,
  &amp;quot;gold&amp;quot;,
  &amp;quot;white&amp;quot;,
  &amp;quot;orchid&amp;quot;,
  &amp;quot;royalblue&amp;quot;,
  &amp;quot;yellow&amp;quot;,
  &amp;quot;orange&amp;quot;
)
# Produce data for a single blast
blast &amp;lt;- function(n, radius, x0, y0, time) {
  u &amp;lt;- runif(n, -1, 1)
  rho &amp;lt;- runif(n, 0, 2 * pi)
  x &amp;lt;- radius * sqrt(1 - u^2) * cos(rho) + x0
  y &amp;lt;- radius * sqrt(1 - u^2) * sin(rho) + y0
  id &amp;lt;- sample(.Machine$integer.max, n + 1)
  data.frame(
    x = c(x0, rep(x0, n), x0, x),
    y = c(0, rep(y0, n), y0, y),
    id = rep(id, 2),
    time = c((time - y0) * runif(1), rep(time, n), time, time + radius + rnorm(n)),
    colour = c(&amp;quot;white&amp;quot;, rep(sample(colours, 1), n), &amp;quot;white&amp;quot;, rep(sample(colours, 1), n)),
    stringsAsFactors = FALSE
  )
}
# Make 20 blasts
n &amp;lt;- round(rnorm(20, 30, 4))
radius &amp;lt;- round(n + sqrt(n))
x0 &amp;lt;- runif(20, -30, 30)
y0 &amp;lt;- runif(20, 40, 80)
time &amp;lt;- runif(20, max = 100)
fireworks &amp;lt;- Map(blast, n = n, radius = radius, x0 = x0, y0 = y0, time = time)
fireworks &amp;lt;- dplyr::bind_rows(fireworks)

p &amp;lt;- ggplot(fireworks) +
  geom_point(aes(x, y, colour = colour, group = id), size = 0.5, shape = 20) +
  scale_colour_identity() +
  coord_fixed(xlim = c(-65, 65), expand = FALSE, clip = &amp;quot;off&amp;quot;) +
  theme_void() +
  theme(
    plot.background = element_rect(fill = &amp;quot;black&amp;quot;, colour = NA),
    panel.border = element_blank()
  ) +
  # Here comes the gganimate code
  transition_components(time, exit_length = 20) +
  ease_aes(x = &amp;quot;sine-out&amp;quot;, y = &amp;quot;sine-out&amp;quot;) +
  shadow_wake(
    0.05,
    size = 3,
    alpha = TRUE,
    wrap = FALSE,
    falloff = &amp;quot;sine-in&amp;quot;,
    exclude_phase = &amp;quot;enter&amp;quot;
  ) +
  exit_recolour(colour = &amp;quot;black&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/firework.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用gganimate可视化R-Ladies发展情况</title>
      <link>https://taoyan.netlify.app/post/2018-02-08.%E5%88%A9%E7%94%A8gganimate%E5%8F%AF%E8%A7%86%E5%8C%96r-ladies%E5%8F%91%E5%B1%95%E6%83%85%E5%86%B5/</link>
      <pubDate>Thu, 08 Feb 2018 12:19:05 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2018-02-08.%E5%88%A9%E7%94%A8gganimate%E5%8F%AF%E8%A7%86%E5%8C%96r-ladies%E5%8F%91%E5%B1%95%E6%83%85%E5%86%B5/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/raw/master/g0hLljaEb9.gif&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;这篇博客主要基于
&lt;a href=&#34;https://d4tagirl.com/2017/05/how-to-plot-animated-maps-with-gganimate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;d4tagirl&lt;/strong&gt;&lt;/a&gt;,稍微有所修改。&lt;/p&gt;
&lt;h2 id=&#34;数据加载&#34;&gt;数据加载&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(pacman)
p_load(tidyverse, gganomate, maps, ggthemes)
rladies &amp;lt;- read_csv(url(&amp;quot;https://raw.githubusercontent.com/d4tagirl/R-Ladies-growth-maps/master/rladies.csv&amp;quot;))%&amp;gt;%
  select(-1)
head(rladies)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 7
##   screen_name     location     created_at followers age_days     lon   lat
##   &amp;lt;chr&amp;gt;           &amp;lt;chr&amp;gt;        &amp;lt;date&amp;gt;         &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 RLadiesSF       San Francis~ 2012-10-15       916     1673 -122     37.8
## 2 RLadiesNYC      New York     2016-09-01       309      256 - 74.0   40.7
## 3 RLadiesIstanbul &amp;lt;U+0130&amp;gt;stanbul, T~ 2016-09-06       436      251   29.0   41.0
## 4 RLadiesBCN      Barcelona, ~ 2016-10-11       377      216    2.17  41.4
## 5 RLadiesColumbus Columbus, OH 2016-10-04       179      223 - 83.0   40.0
## 6 RLadiesBoston   Boston, MA   2016-09-06       259      251 - 71.1   42.4
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;可视化&#34;&gt;可视化&lt;/h2&gt;
&lt;p&gt;主要是根据地理位置信息映射到地图上&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r,fig.width=24,&#34;&gt;ggplot()+
  borders(&amp;quot;world&amp;quot;, color=&amp;quot;gray85&amp;quot;, fill=&amp;quot;grey80&amp;quot;)+
  geom_point(data = rladies, aes(lon, lat, size=followers), color=&amp;quot;purple&amp;quot;, alpha=0.5)+
  scale_size_continuous(range = c(8, 24), breaks = c(250, 500, 750, 1000))+
  labs(size=&amp;quot;Followers&amp;quot;, title=&amp;quot;                                             The development of R-Ladies’ Twitter accounts&amp;quot;,x=NULL,y=NULL)+
  theme(text = element_text(family = &amp;quot;Times New Roman&amp;quot;, color = &amp;quot;#EEEEEE&amp;quot;),
        plot.title = element_text(size=40,color = &amp;quot;#f9ba00&amp;quot;),
        plot.subtitle = element_text(size=14),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_rect(fill=&amp;quot;#333333&amp;quot;),
        plot.background = element_rect(fill = &amp;quot;#333333&amp;quot;),
        legend.position = c(0.18,0.36),
        legend.background = element_blank(),
        legend.key = element_blank(),
        legend.text = element_text(size = 28),
        legend.title = element_text(size=28, color = &amp;quot;#f9ba00&amp;quot;))+
  annotate(geom = &amp;quot;text&amp;quot;,
           label=&amp;quot;Made by Logos ytlogos.github.io\nOriginally from d4tagirl https://d4tagirl.com&amp;quot;,
           x=70, y=-55, size=10, family=&amp;quot;Helvetica Black&amp;quot;, color=&amp;quot;#f9ba00&amp;quot;, hjust=&amp;quot;left&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/emDGG7e91G.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;动画展示&#34;&gt;动画展示&lt;/h2&gt;
&lt;p&gt;为了利用&lt;strong&gt;gganimate&lt;/strong&gt;进行动态展示，需要构建一个映射变量：时间。同时为了使得可视化开始和结尾呈现的是空白，又构建了两个空白图层&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ghost_points_ini &amp;lt;- tibble(created_at=as.Date(&amp;quot;2011-09-01&amp;quot;), followers=0, lon=0, lat=0)
ghost_points_fin &amp;lt;- tibble(created_at=seq(as.Date(&amp;quot;2017-05-16&amp;quot;), as.Date(&amp;quot;2017-05-30&amp;quot;),by=&amp;quot;days&amp;quot;), followers=0, lon=0,lat=0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加frame映射&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map &amp;lt;- ggplot()+
  borders(&amp;quot;world&amp;quot;, color=&amp;quot;gray85&amp;quot;, fill=&amp;quot;grey80&amp;quot;)+
  geom_point(data = rladies, aes(lon, lat, size=followers, frame=created_at, cumulative=TRUE), color=&amp;quot;purple&amp;quot;, alpha=0.5)+
  scale_size_continuous(range = c(4, 16), breaks = c(250, 500, 750, 1000))+
  geom_point(data = ghost_points_ini, aes(lon, lat, size=followers, frame=created_at, cumulative=TRUE), alpha=0)+
  geom_point(data = ghost_points_fin, aes(lon, lat, size=followers, frame=created_at, cumulative=TRUE), alpha=0)+
  labs(size=&amp;quot;Followers&amp;quot;, title=&amp;quot;The development of R-Ladies’ Twitter accounts&amp;quot;,x=NULL,y=NULL)+
  theme(text = element_text(family = &amp;quot;Times New Roman&amp;quot;, color = &amp;quot;#EEEEEE&amp;quot;),
        plot.title = element_text(size=28, color = &amp;quot;#f9ba00&amp;quot;),
        plot.subtitle = element_text(size=14),
        axis.ticks = element_blank(),
        axis.text = element_blank(),
        panel.grid = element_blank(),
        panel.background = element_rect(fill=&amp;quot;#333333&amp;quot;),
        plot.background = element_rect(fill = &amp;quot;#333333&amp;quot;),
        legend.position = c(0.18,0.36),
        legend.background = element_blank(),
        legend.key = element_blank(),
        legend.text = element_text(size = 18),
        legend.title = element_text(size=24, color = &amp;quot;#f9ba00&amp;quot;))+
  annotate(geom = &amp;quot;text&amp;quot;,
           label=&amp;quot;Made by Logos ytlogos.github.io\nOriginally from d4tagirl https://d4tagirl.com&amp;quot;,
           x=70, y=-55, size=6, family=&amp;quot;Helvetica Black&amp;quot;, color=&amp;quot;#f9ba00&amp;quot;, hjust=&amp;quot;left&amp;quot;)
animation::ani.options(interval=0.15, ani.width=1500, ani.height=800, units=&amp;quot;in&amp;quot;)
gganimate::gganimate(map, filename = &amp;quot;d4tagirlmap.gif&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/raw/master/g0hLljaEb9.gif&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.4.3 (2017-11-30)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 16299)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936   
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C                              
## [5] LC_TIME=Chinese (Simplified)_China.936    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] ggthemes_3.4.0       maps_3.2.0           BiocInstaller_1.28.0
##  [4] forcats_0.2.0        stringr_1.2.0        dplyr_0.7.4         
##  [7] purrr_0.2.4          readr_1.1.1          tidyr_0.8.0         
## [10] tibble_1.4.2         ggplot2_2.2.1.9000   tidyverse_1.2.1     
## [13] pacman_0.4.6        
## 
## loaded via a namespace (and not attached):
##  [1] reshape2_1.4.3    haven_1.1.1       lattice_0.20-35  
##  [4] colorspace_1.3-2  htmltools_0.3.6   yaml_2.1.16      
##  [7] utf8_1.1.3        rlang_0.1.6       pillar_1.1.0     
## [10] foreign_0.8-69    glue_1.2.0        modelr_0.1.1     
## [13] readxl_1.0.0      bindrcpp_0.2      bindr_0.1        
## [16] plyr_1.8.4        munsell_0.4.3     gtable_0.2.0     
## [19] cellranger_1.1.0  rvest_0.3.2       psych_1.7.8      
## [22] evaluate_0.10.1   labeling_0.3      knitr_1.19       
## [25] parallel_3.4.3    broom_0.4.3       Rcpp_0.12.15     
## [28] scales_0.5.0.9000 backports_1.1.2   jsonlite_1.5     
## [31] mnormt_1.5-5      hms_0.4.1         digest_0.6.15    
## [34] stringi_1.1.6     grid_3.4.3        rprojroot_1.3-2  
## [37] cli_1.0.0         tools_3.4.3       magrittr_1.5     
## [40] lazyeval_0.2.1    crayon_1.3.4      pkgconfig_2.0.1  
## [43] xml2_1.2.0        lubridate_1.7.1   assertthat_0.2.0 
## [46] rmarkdown_1.8     httr_1.3.1        rstudioapi_0.7   
## [49] R6_2.2.2          nlme_3.1-131      compiler_3.4.3
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>R语言可视化学习笔记之gganimate包</title>
      <link>https://taoyan.netlify.app/post/2018-02-06.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bgganimate%E5%8C%85/</link>
      <pubDate>Tue, 06 Feb 2018 14:19:05 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2018-02-06.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bgganimate%E5%8C%85/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/kHCkkicfkh.gif?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/dgrtwo/gganimate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;gganimate&lt;/strong&gt;&lt;/a&gt;包是&lt;strong&gt;ggplot2&lt;/strong&gt;的扩展包，主要用于绘制动画。它在&lt;strong&gt;ggplot2&lt;/strong&gt;的基础上了补充了一个美学映射&lt;code&gt;frame&lt;/code&gt;，就像x,y,size,color,fill一样进行映射。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;if(!require(devtools)) install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;dgrtwo/gganimate&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是这个包依赖于&lt;strong&gt;ImageMagick&lt;/strong&gt;来产生动画，如果自行安装的话在调用&lt;strong&gt;ImageMagick&lt;/strong&gt;很容易出错，所以推荐在&lt;strong&gt;RStudio&lt;/strong&gt;里面安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;installr&amp;quot;)
installr::install.ImageMagick(&amp;quot;http://www.imagemagick.org/script/download.php&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装好之后以管理员身份运行&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;可视化&#34;&gt;可视化&lt;/h2&gt;
&lt;p&gt;这里我们使用&lt;strong&gt;gapminder&lt;/strong&gt;包里的数据集&lt;code&gt;gapminder&lt;/code&gt;进行可视化&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(gapminder)
library(ggplot2)
library(gganimate)
theme_set(theme_bw())
head(gapminder)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# A tibble: 6 x 6
  country     continent  year lifeExp      pop gdpPercap
  &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
1 Afghanistan Asia       1952    28.8  8425333       779
2 Afghanistan Asia       1957    30.3  9240934       821
3 Afghanistan Asia       1962    32.0 10267083       853
4 Afghanistan Asia       1967    34.0 11537966       836
5 Afghanistan Asia       1972    36.1 13079460       740
6 Afghanistan Asia       1977    38.4 14880372       786
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(gapminder, aes(gdpPercap, lifeExp, size=pop, color=continent,frame=year))+
  geom_point()+
  scale_x_log10()
 gganimate(p)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/cIEhbkd1CE.gif?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;不管动画中的图形如何移动，坐标轴、图例等都是固定的。&lt;/p&gt;
&lt;h2 id=&#34;定制化&#34;&gt;定制化&lt;/h2&gt;
&lt;p&gt;将&lt;strong&gt;gganimate&lt;/strong&gt;与&lt;strong&gt;ggplot2&lt;/strong&gt;结合起来可以定制化很多复杂的动画&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p2 &amp;lt;- ggplot(gapminder, aes(gdpPercap, lifeExp, size=pop))+
  geom_point()+
  geom_point(aes(frame=year), color=&amp;quot;red&amp;quot;)+
  scale_x_log10()
gganimate(p2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/lcD6kdcA73.gif?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果要绘制累积效果图，&lt;strong&gt;gganimate&lt;/strong&gt;提供了&lt;code&gt;cumalative&lt;/code&gt;参数，这对于路径图来说十分是有效的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p3 &amp;lt;- ggplot(gapminder, aes(gdpPercap, lifeExp, frame=year, color=continent))+
  geom_path(aes(cumulative=TRUE, group=country))+
  scale_x_log10()+
  facet_wrap(~continent)
gganimate(p3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/D2g6l8d18K.gif?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般来说我们都是将时间映射给&lt;code&gt;frame&lt;/code&gt;，这也符合我们的直觉，但是这并不意味着我们只能将时间映射给&lt;code&gt;frame&lt;/code&gt;，我们可以将任何想要的变量映射给&lt;code&gt;frame&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p4 &amp;lt;- ggplot(gapminder, aes(gdpPercap, lifeExp, size=pop, frame=continent))+
  geom_point(color=&amp;quot;blue&amp;quot;)+
  scale_x_log10()
gganimate(p4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jcbklhff47.gif?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是如何我们绘制的图形涉及到统计汇总比如geom_smooth()，那么在geom_smooth()图层中需要添加group映射。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;p5 &amp;lt;- ggplot(gapminder,aes(gdpPercap, lifeExp, size=pop, frame=year))+
  geom_point()+
  geom_smooth(aes(group=year),method = &amp;quot;lm&amp;quot;, show.legend = FALSE)+
  facet_wrap(~continent, scales = &amp;quot;free&amp;quot;)+
  scale_x_log10()
gganimate(p5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Hb2aac620H.gif?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后如果需要控制动画播放速度，使用&lt;code&gt;interval&lt;/code&gt;参数控制&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gganimate(p, interval = .2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/kHCkkicfkh.gif?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;R version 3.4.3 (2017-11-30)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows &amp;gt;= 8 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=Chinese (Simplified)_China.936 
[2] LC_CTYPE=Chinese (Simplified)_China.936   
[3] LC_MONETARY=Chinese (Simplified)_China.936
[4] LC_NUMERIC=C                              
[5] LC_TIME=Chinese (Simplified)_China.936    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     

other attached packages:
[1] gganimate_0.1.0.9000 ggplot2_2.2.1.9000  
[3] gapminder_0.3.0     

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.15      rstudioapi_0.7    magrittr_1.5     
 [4] munsell_0.4.3     colorspace_1.3-2  rlang_0.1.6      
 [7] stringr_1.2.0     plyr_1.8.4        tools_3.4.3      
[10] grid_3.4.3        gtable_0.2.0      utf8_1.1.3       
[13] cli_1.0.0         withr_2.1.1.9000  htmltools_0.3.6  
[16] yaml_2.1.16       lazyeval_0.2.1    assertthat_0.2.0 
[19] digest_0.6.15     tibble_1.4.2      crayon_1.3.4     
[22] base64enc_0.1-3   animation_2.5     labeling_0.3     
[25] stringi_1.1.6     compiler_3.4.3    pillar_1.1.0     
[28] installr_0.19.0   scales_0.5.0.9000
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
