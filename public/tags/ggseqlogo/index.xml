<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggseqlogo | Tao Yan</title>
    <link>https://taoyan.netlify.app/tags/ggseqlogo/</link>
      <atom:link href="https://taoyan.netlify.app/tags/ggseqlogo/index.xml" rel="self" type="application/rss+xml" />
    <description>ggseqlogo</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Tao Yan, 2018-2020</copyright><lastBuildDate>Mon, 19 Feb 2018 12:19:05 +0000</lastBuildDate>
    <image>
      <url>https://taoyan.netlify.app/img/pom-card.png</url>
      <title>ggseqlogo</title>
      <link>https://taoyan.netlify.app/tags/ggseqlogo/</link>
    </image>
    
    <item>
      <title>利用ggseqlogo绘制seqlogo图</title>
      <link>https://taoyan.netlify.app/post/2018-02-19.%E5%88%A9%E7%94%A8ggseqlogo%E7%BB%98%E5%88%B6seqlogo%E5%9B%BE/</link>
      <pubDate>Mon, 19 Feb 2018 12:19:05 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2018-02-19.%E5%88%A9%E7%94%A8ggseqlogo%E7%BB%98%E5%88%B6seqlogo%E5%9B%BE/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq9.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;sequence logo&lt;/strong&gt;图用来可视化一段序列某个位点的保守性，据根提供的序列组展示位点信息。这方面有很多在线小工具可以完成，这里使用R包
&lt;a href=&#34;https://github.com/omarwagih/ggseqlogo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggseqlogo&lt;/strong&gt;&lt;/a&gt;进行可视化。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;安装方式有两种&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#直接从CRAN中安装
install.packages(&amp;quot;ggseqlogo&amp;quot;)
#从GitHub中安装
devtools::install.github(&amp;quot;omarwagih/ggseqlogo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;数据加载&#34;&gt;数据加载&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggseqlogo&lt;/strong&gt;提供了测试数据&lt;code&gt;ggseqlogo_sample&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#加载包
library(ggplot2)
library(ggseqlogo)
#加载数据
data(ggseqlogo_sample)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;ggseqlogo_sample&lt;/code&gt;数据集是一个列表，里面包含了三个数据集：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;seqs_dna:12种转录因子的结合位点序列&lt;/li&gt;
&lt;li&gt;pfms_dna:四种转录因子的位置频率矩阵&lt;/li&gt;
&lt;li&gt;seqs_aa:一组激动酶底物磷酸化位点序列&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#seqs_dna
head(seqs_dna)[1]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $MA0001.1
##  [1] &amp;quot;CCATATATAG&amp;quot; &amp;quot;CCATATATAG&amp;quot; &amp;quot;CCATAAATAG&amp;quot; &amp;quot;CCATAAATAG&amp;quot; &amp;quot;CCATAAATAG&amp;quot;
##  [6] &amp;quot;CCATAAATAG&amp;quot; &amp;quot;CCATAAATAG&amp;quot; &amp;quot;CCATATATGG&amp;quot; &amp;quot;CCATATATGG&amp;quot; &amp;quot;CCAAATATAG&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;#pfms_dna
head(pfms_dna)[1]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $MA0018.2
##   [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8]
## A    0    0   11    0    1    0    2    8
## C    1    1    0    9    0    3    7    0
## G    1   10    0    2   10    0    1    1
## T    9    0    0    0    0    8    1    2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;#seqs_aa
head(seqs_aa)[1]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $AKT1
##   [1] &amp;quot;VVGARRSSWRVVSSI&amp;quot; &amp;quot;GPRSRSRSRDRRRKE&amp;quot; &amp;quot;LLCLRRSSLKAYGNG&amp;quot;
##   [4] &amp;quot;TERPRPNTFIIRCLQ&amp;quot; &amp;quot;LSRERVFSEDRARFY&amp;quot; &amp;quot;PSTSRRFSPPSSSLQ&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;可视化&#34;&gt;可视化&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot()+geom_logo(seqs_dna$MA0001.1)+theme_logo()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq1.png?raw=true&#34; alt=&#34;&#34;&gt;
&lt;strong&gt;ggseqlogo&lt;/strong&gt;提供了一个直接绘图的函数&lt;code&gt;ggseqlogo()&lt;/code&gt;,这是一个包装函数。下面命令结果同上面的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggseqlogo(seqs_dna$MA0001.1)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;输入格式&#34;&gt;输入格式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggseqlogo&lt;/strong&gt;支持以下几种类型数据输入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;序列&lt;/li&gt;
&lt;li&gt;矩阵&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是使用数据中的位置频率矩阵生成的seqlogo&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggseqlogo(pfms_dna$MA0018.2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;方法&#34;&gt;方法&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggseqlogo&lt;/strong&gt;通过&lt;code&gt;method&lt;/code&gt;选项支持两种序列标志生成方法：&lt;code&gt;bits&lt;/code&gt;和&lt;code&gt;probability&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p1 &amp;lt;- ggseqlogo(seqs_dna$MA0001.1, method=&amp;quot;bits&amp;quot;)
p2 &amp;lt;- ggseqlogo(seqs_dna$MA0001.1, method=&amp;quot;prob&amp;quot;)
gridExtra::grid.arrange(p1,p2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq3.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;序列类型&#34;&gt;序列类型&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggseqlogo&lt;/strong&gt;支持氨基酸、DNA和RNA序列类型，默认情况下&lt;strong&gt;ggseqlogo&lt;/strong&gt;会自动识别数据提供的序列类型，也可以通过&lt;code&gt;seq_type&lt;/code&gt;选项直接指定序列类型。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggseqlogo(seqs_aa$AKT1, seq_type=&amp;quot;aa&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq4.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;自定义字母&#34;&gt;自定义字母&lt;/h2&gt;
&lt;p&gt;通过&lt;code&gt;namespace&lt;/code&gt;选项来定义自己想要的字母类型&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#用数字来代替碱基
seqs_numeric &amp;lt;- chartr(&amp;quot;ATGC&amp;quot;, &amp;quot;1234&amp;quot;, seqs_dna$MA0001.1)
ggseqlogo(seqs_numeric, method=&amp;quot;prob&amp;quot;, namespace=1:4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq5.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;配色&#34;&gt;配色&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggseqlogo&lt;/strong&gt;可以使用&lt;code&gt;col_scheme&lt;/code&gt;参数来设置配色方案，具体可参考&lt;code&gt;?list_col_schemes&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggseqlogo(seqs_dna$MA0001.1, col_scheme=&amp;quot;base_pairing&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq6.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;自定义配色&#34;&gt;自定义配色&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggseqlogo&lt;/strong&gt;提供函数&lt;code&gt;make_col_scheme&lt;/code&gt;来自定义离散或者连续配色方案&lt;/p&gt;
&lt;h3 id=&#34;离散配色&#34;&gt;离散配色&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;csl &amp;lt;- make_col_scheme(chars = c(&amp;quot;A&amp;quot;,&amp;quot;T&amp;quot;, &amp;quot;C&amp;quot;, &amp;quot;G&amp;quot;), groups = c(&amp;quot;gr1&amp;quot;,&amp;quot;gr1&amp;quot;, &amp;quot;gr2&amp;quot;,&amp;quot;gr2&amp;quot;), cols = c(&amp;quot;purple&amp;quot;,&amp;quot;purple&amp;quot;,&amp;quot;blue&amp;quot;,&amp;quot;blue&amp;quot;))
ggseqlogo(seqs_dna$MA0001.1,col_scheme=csl)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq7.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;连续配色&#34;&gt;连续配色&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;cs2 &amp;lt;- make_col_scheme(chars = c(&amp;quot;A&amp;quot;, &amp;quot;T&amp;quot;, &amp;quot;C&amp;quot;, &amp;quot;G&amp;quot;), values = 1:4)
ggseqlogo(seqs_dna$MA0001.1, col_scheme=cs2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;同时绘制多个序列标志&#34;&gt;同时绘制多个序列标志&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggseqlogo(seqs_dna, ncol = 4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq9.png?raw=true&#34; alt=&#34;&#34;&gt;
上述命令实际上等同于&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot()+geom_logo(seqs_dna)+theme_logo()+
  facet_wrap(~seq_group,ncol = 4,scales = &amp;quot;free_x&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;自定义高度&#34;&gt;自定义高度&lt;/h2&gt;
&lt;p&gt;通过创建矩阵可以生成每个标志的高度，还可以有负值高度&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;set.seed(1234)
custom_mat &amp;lt;- matrix(rnorm(20), nrow = 4, dimnames = list(c(&amp;quot;A&amp;quot;,&amp;quot;T&amp;quot;,&amp;quot;C&amp;quot;, &amp;quot;G&amp;quot;)))
ggseqlogo(custom_mat,method=&amp;quot;custom&amp;quot;,seq_type=&amp;quot;dna&amp;quot;)+
  ylab(&amp;quot;my custom height&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq10.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;字体&#34;&gt;字体&lt;/h2&gt;
&lt;p&gt;可以通过&lt;code&gt;font&lt;/code&gt;参数来设置字体，具体可参考&lt;code&gt;?list_fonts&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;fonts &amp;lt;- list_fonts(F)
p_list &amp;lt;- lapply(fonts, function(f){
  ggseqlogo(seqs_dna$MA0001.1,font=f)+ggtitle(f)
})
do.call(gridExtra::grid.arrange,c(p_list, ncol=4))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq11.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;
&lt;p&gt;注释的话跟&lt;strong&gt;ggplot2&lt;/strong&gt;是一样的&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot()+
  annotate(&amp;quot;rect&amp;quot;, xmin = 0.5, xmax = 3.5, ymin = -0.05, ymax = 1.9, alpha=0.1, col=&amp;quot;black&amp;quot;, fill=&amp;quot;yellow&amp;quot;)+
  geom_logo(seqs_dna$MA0001.1, stack_width = 0.9)+
  annotate(&amp;quot;segment&amp;quot;, x=4, xend = 8, y=1.2, yend = 1.2, size=2)+
  annotate(&amp;quot;text&amp;quot;, x=6, y=1.3, label=&amp;quot;Text annotation&amp;quot;)+
  theme_logo()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq12.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;图形组合&#34;&gt;图形组合&lt;/h2&gt;
&lt;p&gt;将&lt;strong&gt;ggseqlogo&lt;/strong&gt;生成的图形与&lt;strong&gt;ggplot2&lt;/strong&gt;生成的图形组合在一起。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p1 &amp;lt;- ggseqlogo(seqs_dna$MA0008.1)+theme(axis.text.x = element_blank())
aln &amp;lt;- data.frame(
  letter=strsplit(&amp;quot;AGATAAGATGATAAAAAGATAAGA&amp;quot;, &amp;quot;&amp;quot;)[[1]],
  species=rep(c(&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;,&amp;quot;c&amp;quot;), each=8),
  x=rep(1:8,3)
)
aln$mut &amp;lt;- &amp;quot;no&amp;quot;
aln$mut[c(2,15,20,23)]=&amp;quot;yes&amp;quot;
p2 &amp;lt;- ggplot(aln, aes(x, species)) +
  geom_text(aes(label=letter, color=mut, size=mut)) + 
  scale_x_continuous(breaks=1:10, expand = c(0.105, 0)) + xlab(&#39;&#39;) + 
  scale_color_manual(values=c(&#39;black&#39;, &#39;red&#39;)) + 
  scale_size_manual(values=c(5, 6)) + 
  theme_logo() + 
  theme(legend.position = &#39;none&#39;, axis.text.x = element_blank()) 
bp_data &amp;lt;- data.frame(
  x=1:8, 
  conservation=sample(1:100, 8)
)
p3 &amp;lt;- ggplot(bp_data, aes(x, conservation))+
  geom_bar(stat = &amp;quot;identity&amp;quot;, fill=&amp;quot;grey&amp;quot;)+
  theme_logo()+
  scale_x_continuous(breaks = 1:10, expand = c(0.105, 0))+
  xlab(&amp;quot;&amp;quot;)
suppressMessages(require(cowplot))
plot_grid(p1,p2,p3,ncol = 1, align = &amp;quot;v&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ggseq13.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.4.3 (2017-11-30)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 17.10
## 
## Matrix products: default
## BLAS: /usr/lib/x86_64-linux-gnu/atlas/libblas.so.3.10.3
## LAPACK: /usr/lib/x86_64-linux-gnu/atlas/liblapack.so.3.10.3
## 
## locale:
##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    
##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   
##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] cowplot_0.9.2 ggseqlogo_0.1 ggplot2_2.2.1
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.15     knitr_1.20       magrittr_1.5     munsell_0.4.3   
##  [5] colorspace_1.3-2 rlang_0.2.0      stringr_1.3.0    plyr_1.8.4      
##  [9] tools_3.4.3      grid_3.4.3       gtable_0.2.0     htmltools_0.3.6 
## [13] yaml_2.1.16      lazyeval_0.2.1   rprojroot_1.3-2  digest_0.6.15   
## [17] tibble_1.4.2     gridExtra_2.3    evaluate_0.10.1  rmarkdown_1.8   
## [21] labeling_0.3     stringi_1.1.6    compiler_3.4.3   pillar_1.1.0    
## [25] scales_0.5.0     backports_1.1.2
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
