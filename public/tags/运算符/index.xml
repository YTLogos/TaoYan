<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运算符 | Tao Yan</title>
    <link>https://taoyan.netlify.app/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <atom:link href="https://taoyan.netlify.app/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/index.xml" rel="self" type="application/rss+xml" />
    <description>运算符</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Tao Yan, 2018-2020</copyright><lastBuildDate>Fri, 09 Feb 2018 21:19:05 +0000</lastBuildDate>
    <image>
      <url>https://taoyan.netlify.app/img/pom-card.png</url>
      <title>运算符</title>
      <link>https://taoyan.netlify.app/tags/%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    </image>
    
    <item>
      <title>Shell编程：运算符</title>
      <link>https://taoyan.netlify.app/post/2018-02-09.shell%E7%BC%96%E7%A8%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Fri, 09 Feb 2018 21:19:05 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2018-02-09.shell%E7%BC%96%E7%A8%8B%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/yunsuanfu.jpeg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;Shell支持多种运算符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;算术运算符&lt;/li&gt;
&lt;li&gt;布尔运算符&lt;/li&gt;
&lt;li&gt;关系运算符&lt;/li&gt;
&lt;li&gt;字符串运算符&lt;/li&gt;
&lt;li&gt;文件测试运算符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原生bash不支持简单的数学运算，但是可以通过expr等来实现。例如两个数相加：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意的是使用的是反引号`，而不是单引号&#39;。另外表达式与运算符之间要有空格。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
#创建测试脚本test.sh

add=`expr 3 + 5`
echo &amp;quot;两数之和为：$add&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行脚本之后结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./test.sh        
两数之和为：4
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;算术运算符&#34;&gt;算术运算符&lt;/h2&gt;
&lt;p&gt;算术运算符主要如下：假设a=10,b=20&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;加法&lt;/td&gt;
&lt;td&gt;`expr $a + $b`结果为30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;减法&lt;/td&gt;
&lt;td&gt;`expr $a + $b`结果为-10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;乘法&lt;/td&gt;
&lt;td&gt;`expr $a*$b`结果为200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;除法&lt;/td&gt;
&lt;td&gt;`expr $b/$a`结果为2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%&lt;/td&gt;
&lt;td&gt;取余&lt;/td&gt;
&lt;td&gt;`expr $b%$a`结果为0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;赋值&lt;/td&gt;
&lt;td&gt;a=$b将变量b的值赋值给a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;相等，用于比较两个数字是否相等，是则返回TRUE，否则返回FALSE&lt;/td&gt;
&lt;td&gt;[ $a==$b ]结果返回FALSE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;不相等&lt;/td&gt;
&lt;td&gt;[ $a!=$b ]结果返回TRUE&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;注意的是表达式要放在括号之间，并且要有空格。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;举个例子说明&#34;&gt;举个例子说明&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
#创建测试脚本test.sh
m=12
n=5
#加法
val=`expr $m + $n`
echo &amp;quot;m+n= $val&amp;quot;
#减法
val=`expr $m - $n`
echo &amp;quot;m-n= $val&amp;quot;
#乘法
val=`expr $m \* $n`
echo &amp;quot;m*n= $val&amp;quot;
#乘法
val=`expr $m / $n`
echo &amp;quot;m/n= $val&amp;quot;
#乘法
val=`expr $m % $n`
echo &amp;quot;m%n= $val&amp;quot;

#相等
if [ $m == $n ]
then
        echo &amp;quot;m=n&amp;quot;
fi
#不相等
if [ $m != $n ]
then
        echo &amp;quot;m!=n&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行脚本结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./test.sh 
m+n= 17
m-n= 7
m*n= 60
m/n= 2
m%n= 2
m!=n
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;关系运算符&#34;&gt;关系运算符&lt;/h2&gt;
&lt;p&gt;关系运算符只支持数字，假设a=10,b=20:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-eq&lt;/td&gt;
&lt;td&gt;是否相等&lt;/td&gt;
&lt;td&gt;[ $a -eq $b ]结果返回FALSE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ne&lt;/td&gt;
&lt;td&gt;是否不相等&lt;/td&gt;
&lt;td&gt;[ $a -ne $b ]结果返回TRUE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-gt&lt;/td&gt;
&lt;td&gt;左边是否大于右边&lt;/td&gt;
&lt;td&gt;[ $a -gt $b ]结果返回FALSE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-lt&lt;/td&gt;
&lt;td&gt;左边是否小于是否右边&lt;/td&gt;
&lt;td&gt;[ $a -lt $b ]结果返回TRUE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ge&lt;/td&gt;
&lt;td&gt;左边是否大于等于右边&lt;/td&gt;
&lt;td&gt;[ $a -ge $b ]结果返回FALSE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-eq&lt;/td&gt;
&lt;td&gt;左边是否小于等于右边&lt;/td&gt;
&lt;td&gt;[ $a -le $b ]结果返回TRUE&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;举个例子说明-1&#34;&gt;举个例子说明&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
# 创建测试脚本test.sh

a=10
b=20

if [ $a -eq $b ]
then
   echo &amp;quot;$a -eq $b : a 等于 b&amp;quot;
else
   echo &amp;quot;$a -eq $b: a 不等于 b&amp;quot;
fi
if [ $a -ne $b ]
then
   echo &amp;quot;$a -ne $b: a 不等于 b&amp;quot;
else
   echo &amp;quot;$a -ne $b : a 等于 b&amp;quot;
fi
if [ $a -gt $b ]
then
   echo &amp;quot;$a -gt $b: a 大于 b&amp;quot;
else
   echo &amp;quot;$a -gt $b: a 不大于 b&amp;quot;
fi
if [ $a -lt $b ]
then
   echo &amp;quot;$a -lt $b: a 小于 b&amp;quot;
else
   echo &amp;quot;$a -lt $b: a 不小于 b&amp;quot;
fi
if [ $a -ge $b ]
then
   echo &amp;quot;$a -ge $b: a 大于或等于 b&amp;quot;
else
   echo &amp;quot;$a -ge $b: a 小于 b&amp;quot;
fi
if [ $a -le $b ]
then
   echo &amp;quot;$a -le $b: a 小于或等于 b&amp;quot;
else
   echo &amp;quot;$a -le $b: a 大于 b&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行脚本结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./test.sh 
10 -eq 20: a 不等于 b
10 -ne 20: a 不等于 b
10 -gt 20: a 不大于 b
10 -lt 20: a 小于 b
10 -ge 20: a 小于 b
10 -le 20: a 小于或等于 b
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;布尔运算符&#34;&gt;布尔运算符&lt;/h2&gt;
&lt;p&gt;假设a=10,b=20&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;！&lt;/td&gt;
&lt;td&gt;非运算&lt;/td&gt;
&lt;td&gt;[ !false ]返回TRUE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-o&lt;/td&gt;
&lt;td&gt;或运算&lt;/td&gt;
&lt;td&gt;[ $a -lt 20 -o $b -gt 100 ] 返回true。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-a&lt;/td&gt;
&lt;td&gt;与运算&lt;/td&gt;
&lt;td&gt;[ $a -lt 20 -a $b -gt 100 ] 返回false&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;举例说明&#34;&gt;举例说明&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
# 创建测试脚本test.sh

a=10
b=20

if [ $a != $b ]
then
   echo &amp;quot;$a != $b : a 不等于 b&amp;quot;
else
   echo &amp;quot;$a != $b: a 等于 b&amp;quot;
fi
if [ $a -lt 100 -a $b -gt 15 ]
then
   echo &amp;quot;$a 小于 100 且 $b 大于 15 : 返回 true&amp;quot;
else
   echo &amp;quot;$a 小于 100 且 $b 大于 15 : 返回 false&amp;quot;
fi
if [ $a -lt 100 -o $b -gt 100 ]
then
   echo &amp;quot;$a 小于 100 或 $b 大于 100 : 返回 true&amp;quot;
else
   echo &amp;quot;$a 小于 100 或 $b 大于 100 : 返回 false&amp;quot;
fi
if [ $a -lt 5 -o $b -gt 100 ]
then
   echo &amp;quot;$a 小于 5 或 $b 大于 100 : 返回 true&amp;quot;
else
   echo &amp;quot;$a 小于 5 或 $b 大于 100 : 返回 false&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行脚本结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./test.sh 
10 != 20 : a 不等于 b
10 小于 100 且 20 大于 15 : 返回 true
10 小于 100 或 20 大于 100 : 返回 true
10 小于 5 或 20 大于 100 : 返回 false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;逻辑运算符&#34;&gt;逻辑运算符&lt;/h2&gt;
&lt;p&gt;假设a=10,b=20&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;逻辑的AND&lt;/td&gt;
&lt;td&gt;[[ $a -lt 100 &amp;amp;&amp;amp; $b -gt 100 ]] 返回 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;||&lt;/td&gt;
&lt;td&gt;逻辑的OR&lt;/td&gt;
&lt;td&gt;[[ $a -lt 100 || $b -gt 100 ]] 返回 true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;举例说明-1&#34;&gt;举例说明&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
# 创建测试脚本test.sh

a=10
b=20

if [[ $a -lt 100 &amp;amp;&amp;amp; $b -gt 100 ]]
then
   echo &amp;quot;返回 true&amp;quot;
else
   echo &amp;quot;返回 false&amp;quot;
fi

if [[ $a -lt 100 || $b -gt 100 ]]
then
   echo &amp;quot;返回 true&amp;quot;
else
   echo &amp;quot;返回 false&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行脚本结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./test.sh 
返回 false
返回 true
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;字符串运算符&#34;&gt;字符串运算符&lt;/h2&gt;
&lt;p&gt;下表列出了常用的字符串运算符，假定变量 a 为 &amp;ldquo;abc&amp;rdquo;，变量 b 为 &amp;ldquo;efg&amp;rdquo;：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;相等&lt;/td&gt;
&lt;td&gt;[ $a = $b ] 返回 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;不相等&lt;/td&gt;
&lt;td&gt;[ $a != $b ] 返回 true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-z&lt;/td&gt;
&lt;td&gt;字符串长度是否为0&lt;/td&gt;
&lt;td&gt;[ -z $a ] 返回 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td&gt;字符串长度是否不为0&lt;/td&gt;
&lt;td&gt;[ -n $a ] 返回 true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;str&lt;/td&gt;
&lt;td&gt;字符串是否不为空&lt;/td&gt;
&lt;td&gt;[ $a ] 返回 true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;举例说明-2&#34;&gt;举例说明&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
# 创建测试脚本test.sh

a=&amp;quot;abc&amp;quot;
b=&amp;quot;efg&amp;quot;

if [ $a = $b ]
then
   echo &amp;quot;$a = $b : a 等于 b&amp;quot;
else
   echo &amp;quot;$a = $b: a 不等于 b&amp;quot;
fi
if [ $a != $b ]
then
   echo &amp;quot;$a != $b : a 不等于 b&amp;quot;
else
   echo &amp;quot;$a != $b: a 等于 b&amp;quot;
fi
if [ -z $a ]
then
   echo &amp;quot;-z $a : 字符串长度为 0&amp;quot;
else
   echo &amp;quot;-z $a : 字符串长度不为 0&amp;quot;
fi
if [ -n $a ]
then
   echo &amp;quot;-n $a : 字符串长度不为 0&amp;quot;
else
   echo &amp;quot;-n $a : 字符串长度为 0&amp;quot;
fi
if [ $a ]
then
   echo &amp;quot;$a : 字符串不为空&amp;quot;
else
   echo &amp;quot;$a : 字符串为空&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行脚本结果如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./test.sh 
abc = efg: a 不等于 b
abc != efg : a 不等于 b
-z abc : 字符串长度不为 0
-n abc : 字符串长度不为 0
abc : 字符串不为空
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;文件运算符&#34;&gt;文件运算符&lt;/h2&gt;
&lt;p&gt;文件运算符主要用于检测文件属性。这里就不讲解了。&lt;/p&gt;
&lt;p&gt;本文主要参考
&lt;a href=&#34;http://www.runoob.com/linux/linux-shell-basic-operators.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;菜鸟教程&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
