<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggflags | Tao Yan</title>
    <link>https://taoyan.netlify.app/tags/ggflags/</link>
      <atom:link href="https://taoyan.netlify.app/tags/ggflags/index.xml" rel="self" type="application/rss+xml" />
    <description>ggflags</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© Tao Yan, 2018-2020</copyright><lastBuildDate>Tue, 12 Sep 2017 12:34:08 -0500</lastBuildDate>
    <image>
      <url>https://taoyan.netlify.app/img/pom-card.png</url>
      <title>ggflags</title>
      <link>https://taoyan.netlify.app/tags/ggflags/</link>
    </image>
    
    <item>
      <title>一篇关于国旗与奥运会奖牌的可视化笔记</title>
      <link>https://taoyan.netlify.app/post/2017-09-12.%E4%B8%80%E7%AF%87%E5%85%B3%E4%BA%8E%E5%9B%BD%E6%97%97%E4%B8%8E%E5%A5%A5%E8%BF%90%E4%BC%9A%E5%A5%96%E7%89%8C%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 12 Sep 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-09-12.%E4%B8%80%E7%AF%87%E5%85%B3%E4%BA%8E%E5%9B%BD%E6%97%97%E4%B8%8E%E5%A5%A5%E8%BF%90%E4%BC%9A%E5%A5%96%E7%89%8C%E7%9A%84%E5%8F%AF%E8%A7%86%E5%8C%96%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/k58bFmLk2c.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;本文主要介绍一个R包&lt;strong&gt;ggflags&lt;/strong&gt;，可以用于绘制国旗。安装的话从
&lt;a href=&#34;https://github.com/baptiste/ggflags&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github&lt;/a&gt;上利用包&lt;strong&gt;devtools&lt;/strong&gt;安装。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;devtools::install_github(&amp;quot;baptiste/ggflags&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面看个小例子来介绍一下&lt;/p&gt;
&lt;h2 id=&#34;数据集&#34;&gt;数据集&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;library(ggflags)#load package
set.seed(1111)
#create the dataset
data &amp;lt;- data.frame(x=rnorm(50), y=rnorm(50),
                   country=sample(c(&amp;quot;ar&amp;quot;, &amp;quot;us&amp;quot;, &amp;quot;cn&amp;quot;, &amp;quot;fr&amp;quot;, &amp;quot;gb&amp;quot;, &amp;quot;es&amp;quot;), 50 ,replace = TRUE),
                   stringsAsFactors=FALSE)
head(data)
    x	             y	     country
-0.0865801	-0.7055274	gb
1.3225244	-0.5910791	fr
0.6397020	-0.2796410	us
1.1747866	-1.3209782	cn
0.1162903	0.5851085	gb
-2.9308464	0.0198323	ar
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;绘图&#34;&gt;绘图&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;library(ggplot2)
ggplot(data, aes(x=x, y=y, country=country, size=x))+
  geom_flag()+
  scale_country()+
  scale_size(range = c(0, 10))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/KB9E0de5H5.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;国旗的图片是来自于
&lt;a href=&#34;https://github.com/eosrei/emojione-color-font&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EmojiOne数据集&lt;/a&gt;,有兴趣的可以去看看了解一下。
题目有奥运会奖牌，所以接下来就可视化一下索契冬奥运会各国奖牌，本次用国旗与国家联系起来。&lt;/p&gt;
&lt;h2 id=&#34;爬取数据&#34;&gt;爬取数据&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;library(dplyr)
library(rvest)
url &amp;lt;- &amp;quot;http://www.nbcolympics.com/medals&amp;quot;
medals &amp;lt;- read_html(url)%&amp;gt;%
  html_nodes(&amp;quot;table&amp;quot;)%&amp;gt;%
  .[[1]]%&amp;gt;%
  html_table()
knitr::kable(head(medals))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Country	      Gold	Silver	Bronze	Total
Russia	       13	11	9	33
United States	9	7	12	28
Norway	       11	5	10	26
Canada	       10	10	5	25
Netherlands	8	7	9	24
Germany	        8	6	5	19
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;爬取完数据之后进行清洗&lt;/p&gt;
&lt;h2 id=&#34;数据清洗&#34;&gt;数据清洗&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;本文重要的一环是将国家与国旗联系起来，因此首先要将国家名缩写弄出来，这就要用到
&lt;a href=&#34;https://github.com/vincentarelbundock/countrycode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;countrycode&lt;/strong&gt;&lt;/a&gt;这个包了。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#install the package
install.packages(&amp;quot;countrycode&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;数据清洗&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(countrycode)
library(tidyr)
medals &amp;lt;- medals%&amp;gt;%
  mutate(code=countrycode(Country, &amp;quot;country.name&amp;quot;, &amp;quot;iso2c&amp;quot;))%&amp;gt;%
  mutate(code=tolower(code))%&amp;gt;%
  gather(medal_color, count, Gold, Silver, Bronze)%&amp;gt;%
  mutate(medal_color=factor(medal_color, levels = c(&amp;quot;Gold&amp;quot;, &amp;quot;Silver&amp;quot;, &amp;quot;Bronze&amp;quot;)))%&amp;gt;%
  drop_na(Country, code)
knitr::kable(head(medals))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Country	      Total	code	medal_color count
Russia	       33	 ru	   Gold	      13
United States  28	 us	   Gold	       9
Norway	       26	 no	   Gold	      11
Canada	       25	 ca	   Gold       10
Netherlands    24	 nl	   Gold	       8
Germany	       19	 de	   Gold	       8
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;绘图-1&#34;&gt;绘图&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;由于国家数量太多，并且好多国家奖牌数基本为零，因此我们筛选一下：只绘制总奖牌数不小于5的国家。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;medals%&amp;gt;%filter(Total&amp;gt;=5)%&amp;gt;%
  ggplot(aes(x=reorder(Country, Total), y=count))+
  geom_bar(stat = &amp;quot;identity&amp;quot;, aes(fill=medal_color))+
  geom_flag(aes(y=-2,country=code), size=10)+
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 7, vjust = 0.5))+
  scale_fill_manual(values = c(
    &amp;quot;Gold&amp;quot;=&amp;quot;gold&amp;quot;,
    &amp;quot;Bronze&amp;quot; = &amp;quot;#cd7f32&amp;quot;,
    &amp;quot;Silver&amp;quot; = &amp;quot;#C0C0C0&amp;quot;
  ))+
  scale_y_continuous(expand = c(0.1, 1))+
  xlab(&amp;quot;Country&amp;quot;)+
  ylab(&amp;quot;Number of medals&amp;quot;)+
  theme_bw()+
  theme(panel.grid = element_blank())+
  theme(legend.justification = c(1, 0), legend.position = c(1, 0))+
  theme(legend.title = element_blank())+
  coord_flip()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/k58bFmLk2c.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sessionInfo()
## R version 3.4.1 (2017-06-30)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 16.04.3 LTS
## 
## Matrix products: default
## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0
## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0
## 
## locale:
##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    
##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   
##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] bindrcpp_0.2     tidyr_0.7.1      countrycode_0.19 rvest_0.3.2     
## [5] xml2_1.1.1       dplyr_0.7.3      ggflags_0.0.1    ggplot2_2.2.1   
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.12     compiler_3.4.1   plyr_1.8.4       highr_0.6       
##  [5] bindr_0.1        tools_3.4.1      digest_0.6.12    evaluate_0.10.1 
##  [9] tibble_1.3.4     gtable_0.2.0     pkgconfig_2.0.1  rlang_0.1.2     
## [13] curl_2.8.1       yaml_2.1.14      stringr_1.2.0    httr_1.3.1      
## [17] knitr_1.17       tidyselect_0.2.0 rprojroot_1.2    grid_3.4.1      
## [21] glue_1.1.1       R6_2.2.2         XML_3.98-1.9     rmarkdown_1.6   
## [25] purrr_0.2.3      selectr_0.3-1    magrittr_1.5     backports_1.1.0 
## [29] scales_0.5.0     htmltools_0.3.6  assertthat_0.2.0 colorspace_1.3-2
## [33] labeling_0.3     stringi_1.1.5    lazyeval_0.2.0   munsell_0.4.3
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>
