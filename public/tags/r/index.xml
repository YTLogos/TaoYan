<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Tao Yan</title>
    <link>https://taoyan.netlify.app/tags/r/</link>
      <atom:link href="https://taoyan.netlify.app/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© Tao Yan, 2018-2020</copyright><lastBuildDate>Mon, 14 Sep 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://taoyan.netlify.app/img/pom-card.png</url>
      <title>R</title>
      <link>https://taoyan.netlify.app/tags/r/</link>
    </image>
    
    <item>
      <title>BnaGWAS:GWAS platform of rapeseed</title>
      <link>https://taoyan.netlify.app/project/bnagwas/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://taoyan.netlify.app/project/bnagwas/</guid>
      <description>&lt;h1 id=&#34;bnagwas&#34;&gt;BnaGWAS&lt;/h1&gt;
&lt;h1 id=&#34;font-facetime-colorgreen-size6introductionfont&#34;&gt;&lt;font face=&#34;Time&#34; color=green size=6&gt;Introduction&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&lt;font face=&#34;Time&#34; size=4&gt;Rapeseed (&lt;em&gt;&lt;strong&gt;Brassica napus&lt;/strong&gt;&lt;/em&gt; L.) is an important source of edible oil and protein-rich livestock feed in the world. &lt;em&gt;&lt;strong&gt;B. napus&lt;/strong&gt;&lt;/em&gt; (AACC) was ancestrally originated from an interspecific hybridization between two diploid progenitors, &lt;em&gt;&lt;strong&gt;B. rapa&lt;/strong&gt;&lt;/em&gt; (AA) (n = 10) and &lt;em&gt;&lt;strong&gt;B. oleracea&lt;/strong&gt;&lt;/em&gt; (CC) (n = 9), less than 7500 years ago. In our previous study, we resequenced a world-wide collection of &lt;code&gt;1007&lt;/code&gt; &lt;em&gt;&lt;strong&gt;B. napus&lt;/strong&gt;&lt;/em&gt; gerplasm accessions, including 658 winter types, 145 semi-winter types and 188 spring types, from 39 countries (&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S1674205218303435?via%3Dihub&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;Wu et al., 2019&lt;/strong&gt;&lt;/a&gt;). This app is deployed at &lt;a href=&#34;https://bnapus-zju.com/gwas&#34;&gt;https://bnapus-zju.com/gwas&lt;/a&gt; for online use.&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://taoyan.netlify.app/project/bnagwas/Bna_map_hub3f6a0ac4e0aeeefc0734ce61f10a172_344228_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://taoyan.netlify.app/project/bnagwas/Bna_map_hub3f6a0ac4e0aeeefc0734ce61f10a172_344228_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;3172&#34; height=&#34;1296&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;In genetics, a genome-wide association study (&lt;strong&gt;GWAS&lt;/strong&gt;), also known as whole genome association study (WGAS), is an observational study of a genome-wide set of genetic variants in different individuals to see if any variant is associated with a trait. &lt;strong&gt;GWAS&lt;/strong&gt; typically focus on associations between single-nucleotide polymorphisms (&lt;strong&gt;SNPs&lt;/strong&gt;) and traits like major agronomic traits.&lt;/p&gt;
&lt;p&gt;In order to make better use of this huge &lt;em&gt;&lt;strong&gt;B. napus&lt;/strong&gt;&lt;/em&gt; gerplasm accessions, we develop this interactive application (
&lt;a href=&#34;https://bnapus-zju.com/gwas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;BnaGWAS&lt;/strong&gt;&lt;/a&gt;) in &lt;a href=&#34;https://www.r-project.org/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/a&gt; with &lt;a href=&#34;https://shiny.rstudio.com/&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;&lt;code&gt;Shiny&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;. This aaplication can conduct &lt;strong&gt;GWAS&lt;/strong&gt;, visualization of &lt;strong&gt;GWAS&lt;/strong&gt; results (Manhattan plot and QQ plot), extraction of significant genes and annotation of genes&lt;/font&gt;.&lt;/p&gt;
&lt;h1 id=&#34;font-facetime-colorgreen-size6data-inputfont&#34;&gt;&lt;font face=&#34;Time&#34; color=green size=6&gt;Data input&lt;/font&gt;&lt;/h1&gt;
&lt;h2 id=&#34;font-colorgreen-size5-facetimephenotype-data-txtfont&#34;&gt;&lt;font color=green size=5 face=&#34;Time&#34;&gt;phenotype data (.txt)&lt;/font&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;font color=red size=4 face=&#34;Time&#34;&gt; Noted: Your Samples Uploaded MUST Be The 300 Core Collection Samples Used Here ! So If Some Samples Are Not In Your LIST, You Need Add Them In Your List, And Set The Value NA. If Some Samples In Your List Are Not In The 300 Core Collection Samples Here, JUST REMOVE THEM!&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font color=green size=4 face=&#34;Time&#34;&gt;I highly recommended first download the example of the expected input phenotype dataset below, and then replace the phenotype values with you own data&lt;/font&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font size=4 face=&#34;Time&#34;&gt;You just need upload your phenotype data to run &lt;strong&gt;GWAS&lt;/strong&gt;. Here we just use the &lt;strong&gt;&lt;code&gt;300&lt;/code&gt;&lt;/strong&gt; core collection gerplasm which represent the most of genetic resources of 1000 &lt;em&gt;&lt;strong&gt;B. napus&lt;/strong&gt;&lt;/em&gt; gerplasm accessions. an example of the expected input data format is present as below:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;R4157&lt;/td&gt;
&lt;td&gt;0.859791123&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4158&lt;/td&gt;
&lt;td&gt;0.87369142&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4163&lt;/td&gt;
&lt;td&gt;0.842593709&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4168&lt;/td&gt;
&lt;td&gt;0.884782609&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4171&lt;/td&gt;
&lt;td&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4176&lt;/td&gt;
&lt;td&gt;0.885619807&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4177&lt;/td&gt;
&lt;td&gt;0.885884455&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4179&lt;/td&gt;
&lt;td&gt;0.879374612&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4180&lt;/td&gt;
&lt;td&gt;0.878567797&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;R4182&lt;/td&gt;
&lt;td&gt;0.868825911&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;td&gt;&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Where, column one correspond to samples, column two correspond to phenotype values.&lt;/p&gt;
&lt;p&gt;An example of the expected input phenotype dataset can be accessible &lt;a href=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/sample_phenotype.txt&#34; target=&#34;_blank&#34;&gt; &lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;font-colorgreen-szie5-facetimeother-parametersfont&#34;&gt;&lt;font color=green szie=5 face=&#34;Time&#34;&gt;Other parameters&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font size=4 face=&#34;Time&#34;&gt;Next you need enter your trait name (&lt;code&gt;recommended&lt;/code&gt;) (default: Bna_trait). Now just support the &lt;a href=&#34;https://genome.sph.umich.edu/wiki/EMMAX&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;EMMAX&lt;/strong&gt;&lt;/a&gt; model. After all the prepared works are ready, then clink &lt;strong&gt;Run Analysis&lt;/strong&gt; to start GWAS.&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-colorgreen-size6-facetimevisualizationfont&#34;&gt;&lt;font color=green size=6 face=&#34;Time&#34;&gt;Visualization&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&lt;font size=4 face=&#34;Time&#34;&gt;For the &lt;code&gt;Visualization&lt;/code&gt; section in this App, it is aiming to visualize the Manhattan plot and QQ plot. You can choose the alternate colors for alternate chromosomes and p-value threshold (default: p-value=5).&lt;/font&gt;&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://taoyan.netlify.app/project/bnagwas/manhattan_hude9f1049ed713f989ef3867571ae7565_369957_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://taoyan.netlify.app/project/bnagwas/manhattan_hude9f1049ed713f989ef3867571ae7565_369957_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;4500&#34; height=&#34;2100&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;






  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://taoyan.netlify.app/project/bnagwas/QQ_hu7e99ad80c35574ded681b9ec03196361_43799_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://taoyan.netlify.app/project/bnagwas/QQ_hu7e99ad80c35574ded681b9ec03196361_43799_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;2100&#34; height=&#34;2100&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;h1 id=&#34;font-colorgreen-size6-facetimeextractionfont&#34;&gt;&lt;font color=green size=6 face=&#34;Time&#34;&gt;Extraction&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&lt;font size=4 face=&#34;Time&#34;&gt;The extraction of significant genes is based on the significant p-value of SNPs. So here you need choose the p-value threshold and the distance up/down-stream of SNPs (&lt;code&gt;recommended&lt;/code&gt;) (default: 75kb).&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-colorgreen-size6-facetimeannotationfont&#34;&gt;&lt;font color=green size=6 face=&#34;Time&#34;&gt;Annotation&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&lt;font size=4 face=&#34;Time&#34;&gt;This section is designed for gene annotation based on different databases (&lt;code&gt;eggNOG&lt;/code&gt;, &lt;code&gt;GO&lt;/code&gt;, &lt;code&gt;KEGG&lt;/code&gt;, &lt;code&gt;NR&lt;/code&gt;, etc.).&lt;/font&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BnaSNPDB:SNP Database of Brassica napus L.</title>
      <link>https://taoyan.netlify.app/project/bnasnpdb/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://taoyan.netlify.app/project/bnasnpdb/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;The SNP database of &lt;em&gt;Brassica napus&lt;/em&gt; (&lt;strong&gt;BnaSNPDB&lt;/strong&gt;) is an interactive web portal that provides multiple analysis modules to visualize and explore SNPs among 1007 rapeseed germplasm accessions based on the data reported by previous research (
&lt;a href=&#34;http://rapeseed.zju.edu.cn/pdf/mp.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wu et al., 2019&lt;/a&gt;). The app is deployed at &lt;a href=&#34;https://bnapus-zju.com/bnasnpdb&#34;&gt;https://bnapus-zju.com/bnasnpdb&lt;/a&gt; and &lt;a href=&#34;http://rapeseed.zju.edu.cn&#34;&gt;http://rapeseed.zju.edu.cn&lt;/a&gt;:3838/bnasnpdb for online use.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BnaSNPDB&lt;/strong&gt; is idle until you activate it by accessing the 
&lt;a href=&#34;https://bnapus-zju.com/bnasnpdb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;URL&lt;/a&gt;. So it may take some time to load for the first time. Once it was activated, &lt;strong&gt;BnaSNPDB&lt;/strong&gt; could be used smoothly and easily.&lt;/p&gt;
&lt;p&gt;The portal is built entirely in &lt;strong&gt;R&lt;/strong&gt; and &lt;strong&gt;Shiny&lt;/strong&gt; using the &lt;strong&gt;RStudio&lt;/strong&gt; development environment.&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;R: &lt;a href=&#34;https://www.r-project.org/&#34;&gt;https://www.r-project.org/&lt;/a&gt; v4.0.0+&lt;/li&gt;
&lt;li&gt;RStudio: &lt;a href=&#34;https://rstudio.com/products/rstudio/download&#34;&gt;https://rstudio.com/products/rstudio/download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shiny Server: &lt;a href=&#34;https://rstudio.com/products/shiny/download-server&#34;&gt;https://rstudio.com/products/shiny/download-server&lt;/a&gt; (only required for deploying &lt;strong&gt;BnaSNPDB&lt;/strong&gt; on web linux server)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;initialize-app&#34;&gt;Initialize app&lt;/h3&gt;
&lt;h4 id=&#34;to-run-the-app-locally&#34;&gt;To run the app locally:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Clone this repository&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/YTLogos/BnaSNPDB.git
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;The repository is large so it may need some time to finish it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;code&gt;BnaSNPDB.Rproj&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install packages. In the RStudio console, run:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# try an http CRAN (Bioc) mirror if https CRAN (Bioc) mirror doesn&#39;t work
# First install Bioconductor
if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE))
    install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(version = &amp;quot;3.11&amp;quot;)

BiocManager::install(&amp;quot;shiny&amp;quot;)
BiocManager::install(&amp;quot;ggplot2&amp;quot;)
BiocManager::install(&amp;quot;stringr&amp;quot;)
BiocManager::install(&amp;quot;dplyr&amp;quot;)
BiocManager::install(&amp;quot;tidyr&amp;quot;)
BiocManager::install(&amp;quot;forcats&amp;quot;)
BiocManager::install(&amp;quot;patchwork&amp;quot;)
BiocManager::install(&amp;quot;glue&amp;quot;)
BiocManager::install(&amp;quot;ggpubr&amp;quot;)
BiocManager::install(&amp;quot;writexl&amp;quot;)
BiocManager::install(&amp;quot;snpStats&amp;quot;)
BiocManager::install(&amp;quot;IRanges&amp;quot;)
BiocManager::install(&amp;quot;LDheatmap&amp;quot;)
BiocManager::install(&amp;quot;ape&amp;quot;)
BiocManager::install(&amp;quot;pegas&amp;quot;)
BiocManager::install(&amp;quot;gridExtra&amp;quot;)
BiocManager::install(&amp;quot;grid&amp;quot;)
BiocManager::install(&amp;quot;ggtree&amp;quot;)
BiocManager::install(&amp;quot;shinycssloaders&amp;quot;)
BiocManager::install(&amp;quot;shinydashboard&amp;quot;)
BiocManager::install(&amp;quot;shinydisconnect&amp;quot;)
BiocManager::install(&amp;quot;shinyWidgets&amp;quot;)
BiocManager::install(&amp;quot;gggenes&amp;quot;)
BiocManager::install(&amp;quot;DT&amp;quot;)
BiocManager::install(&amp;quot;shinythemes&amp;quot;)
BiocManager::install(&amp;quot;NAM&amp;quot;)
BiocManager::install(&amp;quot;adegenet&amp;quot;)

if (require(devtools)) install.packages(&amp;quot;devtools&amp;quot;)#if not already installed
devtools::install_github(&amp;quot;AnalytixWare/ShinySky&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;This may take some time to complete - walk away from your computer, rest your eyes, and catch up on those stretching exercises you are meant to be doing :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Start tha app by running&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;shiny::runApp(launch.browser = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;deploy-bnasnpdb-on-web-linux-server&#34;&gt;Deploy BnaSNPDB on web Linux server&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Clone/Upload this repository into /srv/shiny-server&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ cd /srv/shiny-server
git clone https://github.com/YTLogos/BnaSNPDB.git
# Or clone it locally and upload the directory to /srv/shiny-server using scp or other tools 
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Configure Shiny Server (/etc/shiny-server/shiny-server.conf)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# Instruct Shiny Server to run applications as the user &amp;quot;shiny&amp;quot;
preserve_logs true;
sanitize_errors false;
run_as shiny;

# Define a server that listens on port 3838
server {
  listen 3838;

  # Define a location at the base URL
  location / {

    # Host the directory of Shiny Apps stored in this directory
    site_dir /srv/shiny-server;

    # Log all Shiny output to files in this directory
    log_dir /var/log/shiny-server;

    # When a user visits the base URL rather than a particular application,
    # an index of the applications available in this directory will be shown.
    directory_index on;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Change the owner of the &lt;strong&gt;BnaSNPDB&lt;/strong&gt; directory&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ chown -R shiny /srv/shiny-server/BnaSNPDB  
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Start Shiny-Server&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ start shiny-server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can access the &lt;strong&gt;BnaSNPDB&lt;/strong&gt; app at http://IPAddressOfYourServer:3838/BnaSNPDB.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ttplot:Tao Yan&#39;s Plot Toolkit</title>
      <link>https://taoyan.netlify.app/project/ttplot/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://taoyan.netlify.app/project/ttplot/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;This package is just developed to finish my project. So most of scripts are &lt;strong&gt;NOT stable&lt;/strong&gt; enough. By wrapping some functions from other useful packages, it&amp;rsquo;s easy for us to finish our jobs.&lt;/p&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;This package dependents on some other packages:
&lt;a href=&#34;https://github.com/knausb/vcfR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;vcfR&lt;/strong&gt;&lt;/a&gt;,
&lt;a href=&#34;https://github.com/tidyverse/dplyr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dplyr&lt;/strong&gt;&lt;/a&gt;,
&lt;a href=&#34;https://cran.r-project.org/web/packages/genetics/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;genetics&lt;/strong&gt;&lt;/a&gt;,
&lt;a href=&#34;https://github.com/SFUStatgen/LDheatmap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;LDheatmap&lt;/strong&gt;&lt;/a&gt;, &amp;hellip;&lt;/p&gt;
&lt;p&gt;The dependent packages will be installed at the time you install the package 
&lt;a href=&#34;https://github.com/YTLogos/ttplot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ttplot&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#install the ttplot package from Github
if(!require(devtools)) {
  install.packages(&amp;quot;devtools&amp;quot;); 
  require(devtools)
} 
devtools::install_github(&amp;quot;YTLogos/ttplot&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Until now there are just several functions&lt;/p&gt;
&lt;h3 id=&#34;draw-the-ldheatmap-from-the-vcfhttpsenwikipediaorgwikivariant_call_format-format-file-plinkhttpswwwcog-genomicsorgplink2-format&#34;&gt;Draw the LDheatmap from the 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Variant_Call_Format&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;VCF&lt;/strong&gt;&lt;/a&gt; format file (
&lt;a href=&#34;https://www.cog-genomics.org/plink2/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;plink&lt;/strong&gt;&lt;/a&gt; format)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;VCF&lt;/strong&gt; (Variant Call Format) is a text file format. It contains meta-information lines, a header line, and then data lines each containing information about a position in the genome. There is an example how to draw LDheatmap from data in VCF file(&lt;strong&gt;plink&lt;/strong&gt; format). The &lt;strong&gt;VCF&lt;/strong&gt; file looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#This is a test vcf file (test.vcf) 

##fileformat=VCFv4.3
##fileDate=20090805
##source=myImputationProgramV3.1
##reference=file:///seq/references/1000GenomesPilot-NCBI36.fasta
##contig=&amp;lt;ID=20,length=62435964,assembly=B36,md5=f126cdf8a6e0c7f379d618ff66beb2da,species=&amp;quot;Homo sapiens&amp;quot;,taxonomy=x&amp;gt;
##phasing=partial
##INFO=&amp;lt;ID=NS,Number=1,Type=Integer,Description=&amp;quot;Number of Samples With Data&amp;quot;&amp;gt;
##INFO=&amp;lt;ID=DP,Number=1,Type=Integer,Description=&amp;quot;Total Depth&amp;quot;&amp;gt;
##INFO=&amp;lt;ID=AF,Number=A,Type=Float,Description=&amp;quot;Allele Frequency&amp;quot;&amp;gt;
##INFO=&amp;lt;ID=AA,Number=1,Type=String,Description=&amp;quot;Ancestral Allele&amp;quot;&amp;gt;
##INFO=&amp;lt;ID=DB,Number=0,Type=Flag,Description=&amp;quot;dbSNP membership, build 129&amp;quot;&amp;gt;
##INFO=&amp;lt;ID=H2,Number=0,Type=Flag,Description=&amp;quot;HapMap2 membership&amp;quot;&amp;gt;
##FILTER=&amp;lt;ID=q10,Description=&amp;quot;Quality below 10&amp;quot;&amp;gt;
##FILTER=&amp;lt;ID=s50,Description=&amp;quot;Less than 50% of samples have data&amp;quot;&amp;gt;
##FORMAT=&amp;lt;ID=GT,Number=1,Type=String,Description=&amp;quot;Genotype&amp;quot;&amp;gt;
##FORMAT=&amp;lt;ID=GQ,Number=1,Type=Integer,Description=&amp;quot;Genotype Quality&amp;quot;&amp;gt;
##FORMAT=&amp;lt;ID=DP,Number=1,Type=Integer,Description=&amp;quot;Read Depth&amp;quot;&amp;gt;
##FORMAT=&amp;lt;ID=HQ,Number=2,Type=Integer,Description=&amp;quot;Haplotype Quality&amp;quot;&amp;gt;
#CHROM POS      ID         REF   ALT    QUAL  FILTER   INFO                             FORMAT       NA00001         NA00002          NA00003
20     14370    rs6054257  G     A      29    PASS    NS=3;DP=14;AF=0.5;DB;H2           GT:GQ:DP:HQ  0|0:48:1:51,51  1|0:48:8:51,51   1/1:43:5:.,.
20     17330    .          T     A      3     q10     NS=3;DP=11;AF=0.017               GT:GQ:DP:HQ  0|0:49:3:58,50  0|1:3:5:65,3     0/0:41:3
20     1110696  rs6040355  A     G,T    67    PASS    NS=2;DP=10;AF=0.333,0.667;AA=T;DB GT:GQ:DP:HQ  1|2:21:6:23,27  2|1:2:0:18,2     2/2:35:4
20     1230237  .          T     .      47    PASS    NS=3;DP=13;AA=T                   GT:GQ:DP:HQ  0|0:54:7:56,60  0|0:48:4:51,51   0/0:61:2
20     1234567  microsat1  GTC   G,GTCT 50    PASS    NS=3;DP=9;AA=G                    GT:GQ:DP     0/1:35:4        0/2:17:2         1/1:40:3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This kind of &lt;strong&gt;VCF&lt;/strong&gt; is very large, so first we can use &lt;strong&gt;plink&lt;/strong&gt; to recode the &lt;strong&gt;VCF&lt;/strong&gt; file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ plink --vcf test.vcf --recode vcf-iid --out Test -allow-extra-chr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So the final &lt;strong&gt;VCF&lt;/strong&gt; file we will use looks likeï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##fileformat=VCFv4.2
##fileDate=20180905
##source=PLINKv1.90
##contig=&amp;lt;ID=chrC07,length=31087537&amp;gt;
##INFO=&amp;lt;ID=PR,Number=0,Type=Flag,Description=&amp;quot;Provisional reference allele, may not be based on real reference genome&amp;quot;&amp;gt;
##FORMAT=&amp;lt;ID=GT,Number=1,Type=String,Description=&amp;quot;Genotype&amp;quot;&amp;gt;
#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	R4157	R4158
chrC07	31076164	.	T	G	.	.	PR	GT	0/0	0/1
chrC07	31076273	.	G	A	.	.	PR	GT	0/0	0/1
chrC07	31076306	.	G	T	.	.	PR	GT	0/0	0/0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the &lt;code&gt;extdata&lt;/code&gt; directory there is one test file: &lt;code&gt;test.vcf&lt;/code&gt;. We can test the function:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ttplot)
test &amp;lt;- system.file(&amp;quot;extdata&amp;quot;, &amp;quot;test.vcf&amp;quot;, package = &amp;quot;ttplot&amp;quot;)
ttplot::MyLDheatMap(vcffile = test, title = &amp;quot;My gene region&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/Pic_blog/master/LDheatmap.png&#34; alt=&#34;LDheatmap&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;more&#34;&gt;More&lt;/h3&gt;
&lt;h4 id=&#34;usage-1&#34;&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;MyLDheatMap(vcffile, file.output = TRUE, file = &amp;quot;png&amp;quot;,
  output = &amp;quot;region&amp;quot;, title = &amp;quot;region:&amp;quot;, verbose = TRUE, dpi = 300)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;arguments&#34;&gt;Arguments&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;vcffile:&lt;/strong&gt; The plink format vcf file. More detail can see &lt;code&gt;View(test_vcf)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file.output:&lt;/strong&gt; a logical, if &lt;code&gt;file.output=TRUE&lt;/code&gt;, the result will be saved. if &lt;code&gt;file.output=FALSE&lt;/code&gt;, the result will be printed. The default is &lt;code&gt;TRUE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file:&lt;/strong&gt; a character, users can choose the different output formats of plot, so far, &lt;strong&gt;&amp;ldquo;jpeg&amp;rdquo;&lt;/strong&gt;, &lt;strong&gt;&amp;ldquo;pdf&amp;rdquo;&lt;/strong&gt;, &lt;strong&gt;&amp;ldquo;png&amp;rdquo;&lt;/strong&gt;, &lt;strong&gt;&amp;ldquo;tiff&amp;rdquo;&lt;/strong&gt; can be selected by users. The default is &lt;strong&gt;&amp;ldquo;png&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;title:&lt;/strong&gt;	a character, the title of the LDheatmap will be &amp;ldquo;The LDheatmap of title&amp;rdquo;. the default is &amp;ldquo;region:&amp;rdquo;. I suggest users use your own title.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;verbose:&lt;/strong&gt;	whether to print the reminder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dpi:&lt;/strong&gt;	a number, the picture element for &lt;strong&gt;.jpeg&lt;/strong&gt;, &lt;strong&gt;.png&lt;/strong&gt; and &lt;strong&gt;.tiff&lt;/strong&gt; files. The default is &lt;code&gt;300&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ggmanhattan-make-manhattan-plot-based-on-ggplot2&#34;&gt;ggmanhattan(): make manhattan plot based on &lt;strong&gt;ggplot2&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Here, we will use the data &lt;code&gt;gwasResults&lt;/code&gt; from R package 
&lt;a href=&#34;https://github.com/stephenturner/qqman&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;qqman&lt;/strong&gt;&lt;/a&gt;. This function is provided to make manhattan plot with full ggplot customizability. So next we can customize the manhattan plot with kinds of functions of &lt;strong&gt;ggplot2&lt;/strong&gt; and add additional layers. The data need be reshaped as following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; head(gwasResults)
  SNP CHR BP         P
1 rs1   1  1 0.9148060
2 rs2   1  2 0.9370754
3 rs3   1  3 0.2861395
4 rs4   1  4 0.8304476
5 rs5   1  5 0.6417455
6 rs6   1  6 0.5190959
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then use the function &lt;code&gt;ggmanhattan&lt;/code&gt; from 
&lt;a href=&#34;https://github.com/YTLogos/ttplot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ttplot&lt;/strong&gt;&lt;/a&gt; to make a manhattan plot:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ttplot::ggmanhattan(gwasResults)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/Pic_blog/master/The%20Manhattan%20Plot%20of%20gwas.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;more-1&#34;&gt;More&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ggmanhattan(gwasres, snp = NA, bp = NA, chrom = NA, pvalue = NA,
  index = NA, file.output = FALSE, file = &amp;quot;png&amp;quot;, output = &amp;quot;Trait&amp;quot;,
  dpi = 300, vlinetype = &amp;quot;solid&amp;quot;, vlinesize = 0.75,
  title = &amp;quot;Manhattan Plot&amp;quot;, color = c(&amp;quot;#FF8C00&amp;quot;, &amp;quot;#556B2F&amp;quot;),
  pointsize = 1.25, verbose = TRUE, ...)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;arguments-1&#34;&gt;Arguments&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;gwasres&lt;/strong&gt;	a data frame of gwas results.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;snp&lt;/strong&gt;	Name of the column containing &lt;code&gt;SNP&lt;/code&gt; identifiers; default is &amp;lsquo;snp&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bp&lt;/strong&gt;	Name of the column containing the &lt;code&gt;SNP&lt;/code&gt; positions; default is &lt;code&gt;&#39;bp&#39;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;chrom&lt;/strong&gt;	Name of the column containing the chromosome identifers; default is &lt;code&gt;&#39;chrom&#39;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pvalue&lt;/strong&gt;	Name of the column containing the p values; default is &lt;code&gt;&#39;pvalue&#39;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file.output&lt;/strong&gt;	a logical, if file.output=&lt;code&gt;TRUE&lt;/code&gt;, the result will be saved. if file.output=&lt;code&gt;FALSE&lt;/code&gt;, the result will be printed. The default is &lt;code&gt;TRUE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;file&lt;/strong&gt;	a character, users can choose the different output formats of plot, so far, &lt;code&gt;&amp;quot;jpeg&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;pdf&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;png&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;tiff&amp;quot;&lt;/code&gt; can be selected by users. The default is &lt;code&gt;&amp;quot;png&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dpi&lt;/strong&gt;	a number, the picture element for .jpeg, .png and .tiff files. The default is 300.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vlinetype&lt;/strong&gt;	the type of vline (&lt;code&gt;geom_vline()&lt;/code&gt;). The default is &lt;code&gt;&amp;quot;solid&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vlinesize&lt;/strong&gt;	the size of the vline. The default is 0.75.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;title&lt;/strong&gt;	the title of manhattan plot. The default is &lt;code&gt;&amp;quot;Manhattan Plot&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;color&lt;/strong&gt;	the colors of alternate chromosome. The default is c(&lt;code&gt;&amp;quot;#FF8C00&amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;quot;#556B2F&amp;quot;&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pointsize&lt;/strong&gt;	the size of point. The default is 1.25.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;get-genes-bsaed-on-the-locations-of-significant-snps&#34;&gt;Get genes bsaed on the locations of significant SNPs&lt;/h2&gt;
&lt;p&gt;This function need two input files: gff, snp.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ttplot)
gff &amp;lt;- read.table(system.file(&amp;quot;extdata&amp;quot;, &amp;quot;test.gff&amp;quot;, package = &amp;quot;ttplot&amp;quot;), header= TRUE)
head(gff)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;chr  start    end          gene
1 436789 437474 chrA01g000077
1 439907 442623 chrA01g000078
1 448692 449999 chrA01g000079
1 454920 456931 chrA01g000080
1 457568 460619 chrA01g000081
1 461129 462693 chrA01g000082
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;snp &amp;lt;- read.table(system.file(&amp;quot;extdata&amp;quot;, &amp;quot;test_sig_snp.txt&amp;quot;, package = &amp;quot;ttplot&amp;quot;), header= TRUE)
head(snp)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;SNP CHR       BP        P
1_500000   1   500000 5.53e-11
1_650000   1   650000 7.04e-09
2_1880000   2  1880000 3.84e-09
3_30500000   3 30500000 7.57e-08
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we can get the candidate genes in regions based on significant SNPs of GWAS results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ttplot::get_gene_from_snp(gff = gff, sig.snp = snp, distance = 20000, file.save = FALSE)
The distance you choose is 20000bp!
You have 4 significant SNPs and 130 genes!
Now we will extract the genes in the significant regions! This will need some time, please wait for severals minutes! ...
                                 
The result is : 
-------------------------------------------------------------
# A tibble: 9 x 5
chrom geneid        gene_start gene_end snp_location
&amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;              &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;
1 chrA01g000088     479923   485997       500000
1 chrA01g000089     495531   497917       500000
1 chrA01g000090     498488   499689       500000
1 chrA01g000091     499749   501301       500000
1 chrA01g000092     503622   507079       500000
1 chrA01g000093     507659   510321       500000
1 chrA01g000094     515103   516863       500000
1 chrA01g000095     517335   518776       500000
1 chrA01g000096     519020   520668       500000
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;more-2&#34;&gt;More&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Usage
get_gene_from_snp(gff, sig.snp, distance = 50000, file.save = TRUE,
  file.type = &amp;quot;csv&amp;quot;, gff.chrom = NA, snp.chrom = NA, geneid = NA,
  pvalue = NA, gene_start = NA, gene_end = NA, snp_location = NA,
  verbose = TRUE, ...)
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;arguments-2&#34;&gt;Arguments&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;gff: a data frame of all the gene (transcript), must have column names.&lt;/li&gt;
&lt;li&gt;sig.snp: a data frame of significant SNPs.&lt;/li&gt;
&lt;li&gt;distance: numeric (bp), it is to define the region. The default is 50000, you need to choose it based on the LD distance in your study.&lt;/li&gt;
&lt;li&gt;file.save:	a logical, if file.output=TRUE, the result will be saved. if file.output=FALSE, the result will be printed. The default is TRUE.&lt;/li&gt;
&lt;li&gt;file.type: a character, users can choose the different output formats, so far, &amp;ldquo;csv&amp;rdquo;, &amp;ldquo;txt&amp;rdquo;, &amp;ldquo;xlsx&amp;rdquo; can be selected by users. The default is &amp;ldquo;csv&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;gff.chrom: Name of the column containing the chromosome identifers in the gff file; default is NA.&lt;/li&gt;
&lt;li&gt;snp.chrom: Name of the column containing the chromosome identifers in the snp.sig file; default is NA.&lt;/li&gt;
&lt;li&gt;geneid: Name of the column containing the geneid in gff file; default is NA.&lt;/li&gt;
&lt;li&gt;pvalue: Name of the column containing the p values in snp.sig file; default is NA.&lt;/li&gt;
&lt;li&gt;snp_location: Name of the column containing the snp position in snp.sig file; default is NA.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>å³äºå¦ä½ä¿®æ¹åæ è½´è¡¨è¾¾å¼ä»¥ååé¢å¾ä¾çä¸ä¸ªä¾å­</title>
      <link>https://taoyan.netlify.app/post/2018-01-31.%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%9D%90%E6%A0%87%E8%BD%B4%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BB%A5%E5%8F%8A%E5%88%86%E9%9D%A2%E5%9B%BE%E4%BE%8B%E7%9A%84%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Wed, 31 Jan 2018 19:43:11 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2018-01-31.%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%9D%90%E6%A0%87%E8%BD%B4%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BB%A5%E5%8F%8A%E5%88%86%E9%9D%A2%E5%9B%BE%E4%BE%8B%E7%9A%84%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ElKca96m2c.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;ç»å¶çå¾å½¢å¦æéè¦ä¿®æ¹ç»èçè¯ï¼æ²¡æå¯¹&lt;strong&gt;ggplot2&lt;/strong&gt;æä¸å®çäºè§£çè¯æ¯ååå°é¾çï¼æ¯ç«è¿åå»ºè¿ä¸ªåçä½è&lt;strong&gt;Hadley Wickham&lt;/strong&gt;é½èªç§°èªå·±ä½¿ç¨&lt;strong&gt;ggplot2&lt;/strong&gt;çæ¶åé½éè¦æ¥ææ¡£ãå¨å¯¹&lt;strong&gt;ggplot2&lt;/strong&gt;æä¸å®äºè§£çåºç¡ä¸å¦æéè¦ä¿®æ¹ggplotå¾çè¯ç¨å¾®æ¥æ¥ææ¡£åºæ¬è½è§£å³ã&lt;/p&gt;
&lt;h2 id=&#34;æ¥æº&#34;&gt;æ¥æº&lt;/h2&gt;
&lt;p&gt;è¿ä¸¤å¤©æäººé®æå¦ä½ä¿®æ¹å¥¹çå¾å½¢ï¼å¥¹ç»å¶çå¾å¦ä¸ï¼&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/5fA4FDKGJB.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¥¹å¸æä¿®æ¹ä¸ç¹ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;åä¸ªåé¢çå¾ä¾æ¯å¦DKãNLç­æ¯å¦å¯ä»¥ä¿®æ¹ï¼ä½¿å¾å¤§ä¸ç¹&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Yè½´æ é¢ä¸­ç-1å¦ä½åæä¸æ &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;å¹³åå¼èçº¿å¦ä½éå¯¹ä¸åç©ç§ç»ç¸å¯¹åºçèçº¿å¹³åå¼&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å¥¹æ¯ä½¿ç¨&lt;strong&gt;ggpubr&lt;/strong&gt;åç»å¶çï¼è¿ä¸ªåå°±æ¯å¯¹ä¸äº&lt;strong&gt;ggplot2&lt;/strong&gt;å½æ°çä¸äºå°è£åç»§æ¿ï¼æ¬è´¨ä¸æ¥è¯´æ¯å¯ä»¥éè¿&lt;strong&gt;ggplot2&lt;/strong&gt;æ¥ä¿®æ¹åæ°çãæåèäºä¸é¨åçå®æ¹ææ¡£ä¹åè§£å³äºè¿ä¸ä¸ªé®é¢ï¼æä»¥åäºè¿ç¯åå®¢ã&lt;/p&gt;
&lt;h2 id=&#34;æ°æ®&#34;&gt;æ°æ®&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;library(tidyverse)
library(ggpubr)
ICP&amp;lt;-read.csv(&amp;quot;C:/Users/taoyan/Desktop/element.csv&amp;quot;)
ICP$Order &amp;lt;- factor(ICP$Species, levels = c(&amp;quot;DK&amp;quot;, &amp;quot;NL&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;IT&amp;quot;, &amp;quot;TL&amp;quot;, &amp;quot;AP&amp;quot;, &amp;quot;AD&amp;quot;))
head(ICP)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Species Treatment       Na       Ca        P
## 1      DK         A 268.4234 3021.933 1791.317
## 2      DK         A 301.9390 3314.308 1595.479
## 3      DK         A 261.1024 3417.643 1547.596
## 4      DK         A 229.1169 3069.978 1735.703
## 5      DK         A 265.1454 3205.965 1667.524
## 6      DK         B 330.7135 4028.279 1638.113
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;æé æ°æ®&#34;&gt;æé æ°æ®&lt;/h2&gt;
&lt;p&gt;ç±äºåé¢éè¦ç¨å°å¹³åå¼ï¼æä»¥éè¦æé å«æå¹³åå¼çæ°æ®é&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;meanvalue &amp;lt;- ICP%&amp;gt;%group_by(Species)%&amp;gt;%summarise(mean=mean(Na))
data &amp;lt;- left_join(ICP,meanvalue,by=c(&#39;Species&#39;=&#39;Species&#39;))
head(data[,c(1:4,13)])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Species Treatment       Na       Ca     mean
## 1      DK         A 268.4234 3021.933 426.6542
## 2      DK         A 301.9390 3314.308 426.6542
## 3      DK         A 261.1024 3417.643 426.6542
## 4      DK         A 229.1169 3069.978 426.6542
## 5      DK         A 265.1454 3205.965 426.6542
## 6      DK         B 330.7135 4028.279 426.6542
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ç»å¾&#34;&gt;ç»å¾&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggboxplot(ICP, x=&amp;quot;Treatment&amp;quot;, y=&amp;quot;Na&amp;quot;,group=&amp;quot;Species&amp;quot;, color=&amp;quot;Treatment&amp;quot;,
add=&amp;quot;mean_se&amp;quot;,facet.by = &amp;quot;Order&amp;quot;,ncol=4, legend=&amp;quot;none&amp;quot;)+
geom_hline(aes(yintercept=mean),data,linetype=2)+ #ç±äºè¦å¨ä¸åçåé¢éç»å¶æ°´å¹³çº¿ï¼è¿éè¦mapping
stat_compare_means(method=&amp;quot;anova&amp;quot;,label=&amp;quot;p.format&amp;quot;,label.y=3500,size=8)+
stat_compare_means(label=&amp;quot;p.signif&amp;quot;,size=8,method=&amp;quot;wilcox.test&amp;quot;,ref.group=&amp;quot;.all.&amp;quot;,hide.ns=TRUE)
ggpar(p,palette = &amp;quot;npg&amp;quot;,font.tickslab = c(18,&amp;quot;bold&amp;quot;))+
  theme(strip.text = element_text(size=15,face = &amp;quot;bold&amp;quot;))+ #è°æ´åé¢legend
  labs(x=&amp;quot;Treatment&amp;quot;, y=expression(bold(paste(&amp;quot;Na (  &amp;quot;, &#39;mg Kg&#39;^{-1},&amp;quot;)&amp;quot;,&#39; DM&#39;))))+
  theme(axis.title = element_text(face = &amp;quot;bold&amp;quot;, size=18))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ElKca96m2c.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo()&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.4.3 (2017-11-30)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 16299)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936   
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C                              
## [5] LC_TIME=Chinese (Simplified)_China.936    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] bindrcpp_0.2       ggpubr_0.1.6       magrittr_1.5      
##  [4] forcats_0.2.0      stringr_1.2.0      dplyr_0.7.4       
##  [7] purrr_0.2.4        readr_1.1.1        tidyr_0.7.2       
## [10] tibble_1.4.2       ggplot2_2.2.1.9000 tidyverse_1.2.1   
## 
## loaded via a namespace (and not attached):
##  [1] tidyselect_0.2.3  reshape2_1.4.3    haven_1.1.1      
##  [4] lattice_0.20-35   colorspace_1.3-2  htmltools_0.3.6  
##  [7] yaml_2.1.16       rlang_0.1.6       pillar_1.1.0     
## [10] foreign_0.8-69    glue_1.2.0        modelr_0.1.1     
## [13] readxl_1.0.0      bindr_0.1         plyr_1.8.4       
## [16] munsell_0.4.3     gtable_0.2.0      cellranger_1.1.0 
## [19] rvest_0.3.2       ggsci_2.8         psych_1.7.8      
## [22] evaluate_0.10.1   labeling_0.3      knitr_1.18       
## [25] parallel_3.4.3    broom_0.4.3       Rcpp_0.12.15     
## [28] scales_0.5.0.9000 backports_1.1.2   jsonlite_1.5     
## [31] mnormt_1.5-5      hms_0.4.1         digest_0.6.14    
## [34] stringi_1.1.6     grid_3.4.3        rprojroot_1.3-2  
## [37] cli_1.0.0         tools_3.4.3       lazyeval_0.2.1   
## [40] crayon_1.3.4      pkgconfig_2.0.1   xml2_1.2.0       
## [43] lubridate_1.7.1   assertthat_0.2.0  rmarkdown_1.8    
## [46] httr_1.3.1        rstudioapi_0.7    R6_2.2.2         
## [49] nlme_3.1-131      compiler_3.4.3
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ggplot2é«æå®ç¨æå</title>
      <link>https://taoyan.netlify.app/post/2017-09-19.ggplot2%E9%AB%98%E6%95%88%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Tue, 19 Sep 2017 08:29:46 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-09-19.ggplot2%E9%AB%98%E6%95%88%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/emJBf4A306.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç®ä»&#34;&gt;ç®ä»&lt;/h2&gt;
&lt;p&gt;æ¬æåå®¹åºæ¬æ¯æ¥æºäº
&lt;a href=&#34;http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;STHDA&lt;/a&gt;ï¼è¿æ¯ä¸ä»½ååè¯¦ç»ç&lt;strong&gt;ggplot2&lt;/strong&gt;ä½¿ç¨æåï¼å æ­¤æå°å¶ç¿»è¯æä¸­æï¼ä¸æ¯æå©äºæèªå·±å­¦ä¹ çè§£ï¼å¦å¤å¶ä»Rè¯­è¨ç±å¥½èæèå¯è§åç±å¥½èå¯ä»¥ç¨æ¥å­¦ä¹ ãç¿»è¯è¿ç¨è¯å®ä¸è½åå¨åç¾ï¼åä½è¯»èæå»ºè®®ææ¹è¿çè¯ï¼ååæ¬¢è¿å&lt;strong&gt;Email&lt;/strong&gt;(&lt;a href=&#34;mailto:tyan@zju.edu.cn&#34;&gt;tyan@zju.edu.cn&lt;/a&gt;)ç»æã&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://ggplot2.tidyverse.org/reference/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;&lt;/a&gt;æ¯ç±&lt;strong&gt;Hadley Wickham&lt;/strong&gt;åå»ºçä¸ä¸ªååå¼ºå¤§çå¯è§åRåãæç§&lt;strong&gt;ggplot2&lt;/strong&gt;çç»å¾çå¿µï¼Plot(å¾)= data(æ°æ®é)+ Aesthetics(ç¾å­¦æ å°)+ Geometry(å ä½å¯¹è±¡)ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data: æ°æ®éï¼ä¸»è¦æ¯data frameï¼&lt;/li&gt;
&lt;li&gt;Aesthetics: ç¾å­¦æ å°ï¼æ¯å¦å°åéæ å°ç»x,yåæ è½´ï¼æèæ å°ç»é¢è²ãå¤§å°ãå½¢ç¶ç­å¾å½¢å±æ§ï¼&lt;/li&gt;
&lt;li&gt;Geometry: å ä½å¯¹è±¡ï¼æ¯å¦æ±å½¢å¾ãç´æ¹å¾ãæ£ç¹å¾ãçº¿å¾ãå¯åº¦å¾ç­ã&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å¨&lt;strong&gt;ggplot2&lt;/strong&gt;ä¸­æä¸¤ä¸ªä¸»è¦ç»å¾å½æ°ï¼qplot()ä»¥åggplot()ã&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;qplot(): é¡¾åæä¹ï¼å¿«éç»å¾ï¼&lt;/li&gt;
&lt;li&gt;ggplot()ï¼æ­¤å½æ°ææ¯&lt;strong&gt;ggplot2&lt;/strong&gt;çç²¾é«ï¼è¿æ¯qplot()å¼ºå¤§ï¼å¯ä»¥ä¸æ­¥æ­¥ç»å¶ååå¤æçå¾å½¢ã&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ç±&lt;strong&gt;ggplot2&lt;/strong&gt;ç»å¶åºæ¥çggplotå¾å¯ä»¥ä½ä¸ºä¸ä¸ªåéï¼ç¶åç±print()æ¾ç¤ºåºæ¥ã&lt;/p&gt;
&lt;h2 id=&#34;å¾å½¢ç±»å&#34;&gt;å¾å½¢ç±»å&lt;/h2&gt;
&lt;p&gt;æ ¹æ®æ°æ®éï¼&lt;strong&gt;ggplot2&lt;/strong&gt;æä¾ä¸åçæ¹æ³ç»å¶å¾å½¢ï¼ä¸»è¦æ¯ä¸ºä¸é¢å ç±»æ°æ®ç±»åæä¾ç»å¾æ¹æ³ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ä¸ä¸ªåéx: è¿ç»­æç¦»æ£&lt;/li&gt;
&lt;li&gt;ä¸¤ä¸ªåéx&amp;amp;yï¼è¿ç»­å(æ)ç¦»æ£&lt;/li&gt;
&lt;li&gt;è¿ç»­ååéåå¸x&amp;amp;y: é½æ¯è¿ç»­&lt;/li&gt;
&lt;li&gt;è¯¯å·®æ£&lt;/li&gt;
&lt;li&gt;å°å¾&lt;/li&gt;
&lt;li&gt;ä¸åé&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;å®è£åå è½½&#34;&gt;å®è£åå è½½&lt;/h2&gt;
&lt;p&gt;å®è£&lt;strong&gt;ggplot2&lt;/strong&gt;æä¾ä¸ç§æ¹å¼ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ç´æ¥å®è£tidyverseï¼ä¸å³æ°¸é¸ï¼æ¨è,æ°æ®åæå¤§ç¤¼åï¼
install.packages(&amp;quot;tidyverse&amp;quot;)
#ç´æ¥å®è£ggplot2
install.packages(&amp;quot;ggplot2&amp;quot;)
#ä»Githubä¸å®è£ææ°ççæ¬ï¼åå®è£devtools(å¦ææ²¡å®è£çè¯)
devtools::install_github(&amp;quot;tidyverse/ggplot2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å è½½&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(ggplot2)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;æ°æ®åå¤&#34;&gt;æ°æ®åå¤&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;æ°æ®éåºè¯¥æ°æ®æ¡data.frame&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;æ¬æå°ä½¿ç¨æ°æ®é&lt;strong&gt;mtcars&lt;/strong&gt;ã&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#load the data set
data(mtcars)
df &amp;lt;- mtcars[, c(&amp;quot;mpg&amp;quot;,&amp;quot;cyl&amp;quot;,&amp;quot;wt&amp;quot;)]
#å°cylè½¬ä¸ºå å­åfactor
df$cyl &amp;lt;- as.factor(df$cyl)
head(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg cyl    wt
## Mazda RX4         21.0   6 2.620
## Mazda RX4 Wag     21.0   6 2.875
## Datsun 710        22.8   4 2.320
## Hornet 4 Drive    21.4   6 3.215
## Hornet Sportabout 18.7   8 3.440
## Valiant           18.1   6 3.460
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;qplot&#34;&gt;qplot()&lt;/h2&gt;
&lt;p&gt;qplot()ç±»ä¼¼äºRåºæ¬ç»å¾å½æ°plot(),å¯ä»¥å¿«éç»å¶å¸¸è§çå ç§å¾å½¢ï¼æ£ç¹å¾ãç®±çº¿å¾ãå°æç´å¾ãç´æ¹å¾ä»¥åå¯åº¦æ²çº¿å¾ãå¶ç»å¾æ ¼å¼ä¸ºï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qplot(x, y=NULL, data, geom=&amp;quot;auto&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¶ä¸­ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x,y: æ ¹æ®éè¦ç»å¶çå¾å½¢ä½¿ç¨;&lt;/li&gt;
&lt;li&gt;dataï¼æ°æ®é;&lt;/li&gt;
&lt;li&gt;geomï¼å ä½å¾å½¢ï¼åéx,yåæ¶æå®çè¯é»è®¤ä¸ºæ£ç¹å¾ï¼åªæå®xçè¯é»è®¤ä¸ºç´æ¹å¾ã&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;æ£ç¹å¾&#34;&gt;æ£ç¹å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;qplot(x=mpg, y=wt, data=df, geom = &amp;quot;point&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DlJaE4eke3.png?raw=true&#34; alt=&#34;&#34;&gt;
ä¹å¯ä»¥æ·»å å¹³æ»æ²çº¿&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;qplot(x=mpg, y=wt, data = df, geom = c(&amp;quot;point&amp;quot;, &amp;quot;smooth&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/i3lHIh2jdD.png?raw=true&#34; alt=&#34;&#34;&gt;
è¿æå¶ä»åæ°å¯ä»¥ä¿®æ¹ï¼æ¯å¦ç¹çå½¢ç¶ãå¤§å°ãé¢è²ç­&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#å°åécylæ å°ç»é¢è²åå½¢ç¶
qplot(x=mpg, y=wt, data = df, colour=cyl, shape=cyl)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/D6Aflkkhab.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ç®±çº¿å¾å°æç´å¾ç¹å¾&#34;&gt;ç®±çº¿å¾ãå°æç´å¾ãç¹å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æé æ°æ®é
set.seed(1234)
wdata &amp;lt;- data.frame(
  sex=factor(rep(c(&amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;), each=200)),
  weight=c(rnorm(200, 55), rnorm(200, 58))
)
head(wdata)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   sex   weight
## 1   F 53.79293
## 2   F 55.27743
## 3   F 56.08444
## 4   F 52.65430
## 5   F 55.42912
## 6   F 55.50606
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç®±çº¿å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;qplot(sex, weight, data = wdata, geom = &amp;quot;boxplot&amp;quot;, fill=sex)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/92K2e20idg.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°æç´å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;qplot(sex, weight, data = wdata, geom = &amp;quot;violin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/3m8H660Cl9.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ç¹å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;qplot(sex, weight, data = wdata, geom = &amp;quot;dotplot&amp;quot;, stackdir=&amp;quot;center&amp;quot;, binaxis=&amp;quot;y&amp;quot;, dotsize=0.5, color=sex)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Hb7G4J8875.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ç´æ¹å¾å¯åº¦å¾&#34;&gt;ç´æ¹å¾ãå¯åº¦å¾&lt;/h3&gt;
&lt;p&gt;ç´æ¹å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;qplot(weight, data = wdata, geom = &amp;quot;histogram&amp;quot;, fill=sex)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/gd448CcLDb.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¯åº¦å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;qplot(weight, data = wdata, geom = &amp;quot;density&amp;quot;, color=sex, linetype=sex)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dl77b5BDdm.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ggplot&#34;&gt;ggplot()&lt;/h2&gt;
&lt;p&gt;ä¸æä¸­çqplot()ç»å¶æ£ç¹å¾ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qplot(x=mpg, y=wt, data=df, geom = &amp;quot;point&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¨ggplot()ä¸­å®å¨å¯ä»¥å¦ä¸å®ç°ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(data=df, aes(x=mpg, y=wt))+
  geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/80fkCC4Kgh.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ¹åç¹å½¢ç¶ãå¤§å°ãé¢è²ç­å±æ§&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(data=df, aes(x=mpg, y=wt))+geom_point(color=&amp;quot;blue&amp;quot;, size=2, shape=23)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6LbL12Jmhm.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ç»å¾è¿ç¨ä¸­å¸¸å¸¸è¦ç¨å°è½¬æ¢(transformation),è¿æ¶æ·»å å¾å±çå¦ä¸ä¸ªæ¹æ³æ¯ç¨stat_*()å½æ°ã
ä¸ä¾ä¸­çgeom_density()ä¸stat_density()æ¯ç­ä»·ç&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(wdata, aes(x=weight))+geom_density()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç­ä»·äº&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(wdata, aes(x=weight))+stat_density()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/D3ca6EAf3F.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;å¯¹äºæ¯ä¸ç§å ä½å¾å½¢ã&lt;strong&gt;ggplot2&lt;/strong&gt; åºæ¬é½æä¾äº geom_*()*å stat_*()*&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;ä¸ä¸ªåéè¿ç»­å&#34;&gt;ä¸ä¸ªåéï¼è¿ç»­å&lt;/h3&gt;
&lt;p&gt;ä½¿ç¨æ°æ®éwdataï¼åè®¡ç®åºä¸åæ§å«çä½éå¹³åå¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(plyr)
mu &amp;lt;- ddply(wdata, &amp;quot;sex&amp;quot;, summarise, grp.mean=mean(weight))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åç»å¶ä¸ä¸ªå¾å±a,åé¢éæ­¥æ·»å å¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a &amp;lt;- ggplot(wdata, aes(x=weight))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯è½æ·»å çå¾å±æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;å¯¹äºä¸ä¸ªè¿ç»­åéï¼
&lt;ul&gt;
&lt;li&gt;é¢ç§¯å¾geom_area()&lt;/li&gt;
&lt;li&gt;å¯åº¦å¾geom_density()&lt;/li&gt;
&lt;li&gt;ç¹å¾geom_dotplot()&lt;/li&gt;
&lt;li&gt;é¢çå¤è¾¹å¾geom_freqpoly()&lt;/li&gt;
&lt;li&gt;ç´æ¹å¾geom_histogram()&lt;/li&gt;
&lt;li&gt;ç»éªç´¯ç§¯å¯åº¦å¾stat_ecdf()&lt;/li&gt;
&lt;li&gt;QQå¾stat_qq()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;å¯¹äºä¸ä¸ªç¦»æ£åéï¼
&lt;ul&gt;
&lt;li&gt;æ¡å½¢å¾geom_bar()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/gcLBC7cG47.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;é¢ç§¯å¾&#34;&gt;é¢ç§¯å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_area(stat = &amp;quot;bin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/J288ccH2m5.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ¹åé¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_area(aes(fill=sex), stat = &amp;quot;bin&amp;quot;, alpha=0.6)+
  theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/LIj4mJbKb2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;æ³¨æï¼yè½´é»è®¤ä¸ºåéweightçæ°éå³countï¼å¦æyè½´è¦æ¾ç¤ºå¯åº¦ï¼å¯ç¨ä»¥ä¸ä»£ç ï¼&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_area(aes(y=..density..), stat = &amp;quot;bin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/kkCc85KCeJ.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¯ä»¥éè¿ä¿®æ¹ä¸åå±æ§å¦éæåº¦ãå¡«åé¢è²ãå¤§å°ãçº¿åç­èªå®ä¹å¾å½¢ï¼&lt;/p&gt;
&lt;h4 id=&#34;å¯åº¦å¾&#34;&gt;å¯åº¦å¾&lt;/h4&gt;
&lt;p&gt;ä½¿ç¨ä»¥ä¸å½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_density():ç»å¶å¯åº¦å¾&lt;/li&gt;
&lt;li&gt;geom_vline():æ·»å ç«ç´çº¿&lt;/li&gt;
&lt;li&gt;scale_color_manual():æå¨ä¿®æ¹é¢è²&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_density()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/c1EL7I2a49.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ ¹æ®sexä¿®æ¹é¢è²ï¼å°sexæ å°ç»lineé¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_density(aes(color=sex))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/72Ahbf7K6h.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å¡«åé¢è²ä»¥åéæåº¦&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_density(aes(fill=sex), alpha=0.4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ejijLE9IfG.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å åå¼çº¿ä»¥åæå¨ä¿®æ¹é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_density(aes(color=sex))+
  geom_vline(data=mu, aes(xintercept=grp.mean, color=sex), linetype=&amp;quot;dashed&amp;quot;)+
  scale_color_manual(values = c(&amp;quot;red&amp;quot;, &amp;quot;blue&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/mAFhH7lleK.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ç¹å¾&#34;&gt;ç¹å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_dotplot()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/H1mDL0HCJI.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°sexæ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_dotplot(aes(fill=sex))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6bfHaEcBAl.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æå¨ä¿®æ¹é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_dotplot(aes(fill=sex))+
  scale_fill_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/kiE9Lci30h.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;é¢çå¤è¾¹å¾&#34;&gt;é¢çå¤è¾¹å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_freqpoly()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/K40Fch448J.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;yè½´æ¾ç¤ºä¸ºå¯åº¦&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_freqpoly(aes(y=..density..))+
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/CgCf1eAgf8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹é¢è²ä»¥åçº¿å&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_freqpoly(aes(color=sex, linetype=sex))+
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jaaBibcFjH.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ç´æ¹å¾&#34;&gt;ç´æ¹å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_histogram()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/bHilai3a9l.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°sexæ å°ç»çº¿é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+geom_histogram(aes(color=sex), fill=&amp;quot;white&amp;quot;, position = &amp;quot;dodge&amp;quot;)+theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/eD7iLDJId1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ç»éªç´¯ç§¯å¯åº¦å¾&#34;&gt;ç»éªç´¯ç§¯å¯åº¦å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;a+stat_ecdf()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/f83Imkm4jm.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;qqå¾&#34;&gt;QQå¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(data = mtcars, aes(sample=mpg))+stat_qq()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/e7G7hbeLID.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸ä¸ªç¦»æ£åé&#34;&gt;ä¸ä¸ªç¦»æ£åé&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#å è½½æ°æ®é
data(mpg)
b &amp;lt;- ggplot(mpg, aes(x=fl))
b+geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/b4FJFb7H99.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å¡«åé¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_bar(fill=&amp;quot;steelblue&amp;quot;, color=&amp;quot;black&amp;quot;)+theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ih6I2ammG4.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸¤ä¸ªåéxyçè¿ç»­&#34;&gt;ä¸¤ä¸ªåéï¼x,yçè¿ç»­&lt;/h3&gt;
&lt;p&gt;ä½¿ç¨æ°æ®émtcarsï¼ ååå»ºä¸ä¸ªggplotå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b &amp;lt;- ggplot(data = mtcars, aes(x=wt, y=mpg))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯è½æ·»å çå¾å±æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_point():æ£ç¹å¾&lt;/li&gt;
&lt;li&gt;geom_smooth():å¹³æ»çº¿&lt;/li&gt;
&lt;li&gt;geom_quantile():åä½çº¿&lt;/li&gt;
&lt;li&gt;geom_rug():è¾¹éå°æ¯¯çº¿&lt;/li&gt;
&lt;li&gt;geom_jitter():é¿åéå &lt;/li&gt;
&lt;li&gt;geom_text():æ·»å ææ¬æ³¨é&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ld1EAJgd88.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æ£ç¹å¾-1&#34;&gt;æ£ç¹å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/796GlJi3Al.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°åécylæ å°ç»ç¹çé¢è²åå½¢ç¶&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b + geom_point(aes(color = factor(cyl), shape = factor(cyl)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/J6dfJ1EL33.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;èªå®ä¹é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_point(aes(color=factor(cyl), shape=factor(cyl)))+
  scale_color_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;))+theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/3695bEj0Ha.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;å¹³æ»çº¿&#34;&gt;å¹³æ»çº¿&lt;/h4&gt;
&lt;p&gt;å¯ä»¥æ·»å åå½æ²çº¿&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_smooth()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1hJGKGeLc2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ£ç¹å¾+åå½çº¿&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_point()+
  geom_smooth(method = &amp;quot;lm&amp;quot;, se=FALSE)#å»æç½®ä¿¡åºé´
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Gl47fkb2c2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä½¿ç¨loessæ¹æ³&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_point()+
  geom_smooth(method = &amp;quot;loess&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6jaCLAL3Fc.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°åéæ å°ç»é¢è²åå½¢ç¶&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_point(aes(color=factor(cyl), shape=factor(cyl)))+
  geom_smooth(aes(color=factor(cyl), shape=factor(cyl)), method = &amp;quot;lm&amp;quot;, se=FALSE, fullrange=TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/7hjfJ89K4c.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;åä½çº¿&#34;&gt;åä½çº¿&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(data = mpg, aes(cty, hwy))+
  geom_point()+geom_quantile()+
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/l0F005kgih.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;è¾¹éå°æ¯¯çº¿&#34;&gt;è¾¹éå°æ¯¯çº¿&lt;/h4&gt;
&lt;p&gt;ä½¿ç¨æ°æ®é&lt;strong&gt;faithful&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(data = faithful, aes(x=eruptions, y=waiting))+
  geom_point()+geom_rug()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/7H7BlJE35k.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;é¿åéå &#34;&gt;é¿åéå &lt;/h4&gt;
&lt;p&gt;å®éä¸&lt;code&gt;geom_jitter()&lt;/code&gt;æ¯&lt;code&gt;geom_point(position=&amp;quot;jitter&amp;quot;)&lt;/code&gt;çç®ç§°,ä¸é¢ä½¿ç¨æ°æ®é&lt;strong&gt;mpg&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p &amp;lt;- ggplot(data = mpg, aes(displ, hwy))
p+geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Ad2aBaaEED.png?raw=true&#34; alt=&#34;&#34;&gt;
å¢å æå¨é²æ­¢éå &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+geom_jitter(width = 0.5, height = 0.5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DmKBbIGK2c.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¶ä¸­ä¸¤ä¸ªåæ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;widthï¼xè½´æ¹åçæå¨å¹åº¦&lt;/li&gt;
&lt;li&gt;heightï¼yè½´æ¹åçæå¨å¹åº¦&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ææ¬æ³¨é&#34;&gt;ææ¬æ³¨é&lt;/h4&gt;
&lt;p&gt;åæ°labelç¨æ¥æå®æ³¨éæ ç­¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;b+geom_text(aes(label=rownames(mtcars)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/L6CaLD26ga.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸¤ä¸ªåéè¿ç»­äºååå¸&#34;&gt;ä¸¤ä¸ªåéï¼è¿ç»­äºååå¸&lt;/h3&gt;
&lt;p&gt;ä½¿ç¨æ°æ®é&lt;strong&gt;diamonds&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;head(diamonds[, c(&amp;quot;carat&amp;quot;, &amp;quot;price&amp;quot;)])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 2
##   carat price
##   &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
## 1  0.23   326
## 2  0.21   326
## 3  0.23   327
## 4  0.29   334
## 5  0.31   335
## 6  0.24   336
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºggplotå¾å±,åé¢åéæ­¥æ·»å å¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;c &amp;lt;- ggplot(data=diamonds, aes(carat, price))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯æ·»å çå¾å±æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_bin2d(): äºç»´å°ç®±ç­å¾&lt;/li&gt;
&lt;li&gt;geom_hex(): å­è¾¹å½¢å°ç®±å¾&lt;/li&gt;
&lt;li&gt;geom_density_2d(): äºç»´ç­é«çº¿å¯åº¦å¾&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/mIdJKh6F1G.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;äºç»´å°ç®±ç­å¾&#34;&gt;äºç»´å°ç®±ç­å¾&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;geom_bin2d()&lt;/code&gt;å°ç¹çæ°éç¨ç©å½¢å°è£èµ·æ¥ï¼éè¿é¢è²æ·±æµæ¥åæ ç¹å¯åº¦&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;c+geom_bin2d()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/BgC3g377mE.png?raw=true&#34; alt=&#34;&#34;&gt;
è®¾ç½®binçæ°é&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;c+geom_bin2d(bins=150)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/4ejegHkcbF.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;å­è¾¹å½¢å°ç®±å¾&#34;&gt;å­è¾¹å½¢å°ç®±å¾&lt;/h4&gt;
&lt;p&gt;geom_hex()ä¾èµäºå¦ä¸ä¸ªRå&lt;strong&gt;hexbin&lt;/strong&gt;ï¼æä»¥æ²¡å®è£çåå®è£ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;hexbin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(hexbin)
c+geom_hex()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/f9Fbl2IAKj.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹binçæ°ç®&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;c+geom_hex(bins=10)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/bIc44CGdC8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;äºç»´ç­é«çº¿å¯åº¦å¾&#34;&gt;äºç»´ç­é«çº¿å¯åº¦å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sp &amp;lt;- ggplot(faithful, aes(x=eruptions, y=waiting))
sp+geom_point()+ geom_density_2d()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/imG9fLLlb6.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸¤ä¸ªåéè¿ç»­å½æ°&#34;&gt;ä¸¤ä¸ªåéï¼è¿ç»­å½æ°&lt;/h3&gt;
&lt;p&gt;ä¸»è¦æ¯å¦ä½éè¿çº¿æ¥è¿æ¥ä¸¤ä¸ªåéï¼ä½¿ç¨æ°æ®é&lt;strong&gt;economics&lt;/strong&gt;ã&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;head(economics)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##         date   pce    pop psavert uempmed unemploy
##       &amp;lt;date&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;
## 1 1967-07-01 507.4 198712    12.5     4.5     2944
## 2 1967-08-01 510.5 198911    12.5     4.7     2945
## 3 1967-09-01 516.3 199113    11.7     4.6     2958
## 4 1967-10-01 512.9 199311    12.5     4.9     3143
## 5 1967-11-01 518.1 199498    12.5     4.7     3066
## 6 1967-12-01 525.8 199657    12.1     4.8     3018
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ååå»ºä¸ä¸ªggplotå¾å±ï¼åé¢éæ­¥æ·»å å¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;d &amp;lt;- ggplot(data = economics, aes(x=date, y=unemploy))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯æ·»å çå¾å±æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_area():é¢ç§¯å¾&lt;/li&gt;
&lt;li&gt;geom_line()ï¼æçº¿å¾&lt;/li&gt;
&lt;li&gt;geom_step(): é¶æ¢¯å¾&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;é¢ç§¯å¾-1&#34;&gt;é¢ç§¯å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;d+geom_area()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dj4fHa6Kh2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;çº¿å¾&#34;&gt;çº¿å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;d+geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DhLc531J92.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;é¶æ¢¯å¾&#34;&gt;é¶æ¢¯å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;set.seed(1111)
ss &amp;lt;- economics[sample(1:nrow(economics), 20),]
ggplot(ss, aes(x=date, y=unemploy))+
  geom_step()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/l5lHl5944G.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸¤ä¸ªåéxç¦»æ£yè¿ç»­&#34;&gt;ä¸¤ä¸ªåéï¼xç¦»æ£ï¼yè¿ç»­&lt;/h3&gt;
&lt;p&gt;ä½¿ç¨æ°æ®é&lt;strong&gt;ToothGrowth&lt;/strong&gt;,å¶ä¸­çåélen(Tooth length)æ¯è¿ç»­åéï¼doseæ¯ç¦»æ£åéã&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ToothGrowth$dose &amp;lt;- as.factor(ToothGrowth$dose)
head(ToothGrowth)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    len supp dose
## 1  4.2   VC  0.5
## 2 11.5   VC  0.5
## 3  7.3   VC  0.5
## 4  5.8   VC  0.5
## 5  6.4   VC  0.5
## 6 10.0   VC  0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e &amp;lt;- ggplot(data = ToothGrowth, aes(x=dose, y=len))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯æ·»å çå¾å±æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_boxplot(): ç®±çº¿å¾&lt;/li&gt;
&lt;li&gt;geom_violin()ï¼å°æç´å¾&lt;/li&gt;
&lt;li&gt;geom_dotplot()ï¼ç¹å¾&lt;/li&gt;
&lt;li&gt;geom_jitter(): å¸¦ç¶å¾&lt;/li&gt;
&lt;li&gt;geom_line(): çº¿å¾&lt;/li&gt;
&lt;li&gt;geom_bar(): æ¡å½¢å¾&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/3F447J6d7L.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ç®±çº¿å¾&#34;&gt;ç®±çº¿å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_boxplot()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/37J7f7hfCJ.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å æç¼ºå£çç®±çº¿å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_boxplot(notch = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/952cibHB9E.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ædoseåç»æ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_boxplot(aes(color=dose))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/15dJjbIGkB.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°doseæ å°ç»å¡«åé¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_boxplot(aes(fill=dose))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Am1A6Efaa6.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æsuppè¿è¡åç±»å¹¶æ å°ç»å¡«åé¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(ToothGrowth, aes(x=dose, y=len))+ geom_boxplot(aes(fill=supp))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jfFFF1Hh99.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;å°æç´å¾&#34;&gt;å°æç´å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_violin(trim = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/fG1DmbmaIB.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å ä¸­å¼ç¹&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_violin(trim = FALSE)+
  stat_summary(fun.data = mean_sdl, fun.args = list(mult=1), 
               geom=&amp;quot;pointrange&amp;quot;, color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/GAkDaEHJe2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸ç®±çº¿å¾ç»å&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_violin(trim = FALSE)+
  geom_boxplot(width=0.2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/igef2H376K.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°doseæ å°ç»é¢è²è¿è¡åç»&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_violin(aes(color=dose), trim = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/g6G0aI5DaE.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ç¹å¾-1&#34;&gt;ç¹å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e+geom_dotplot(binaxis = &amp;quot;y&amp;quot;, stackdir = &amp;quot;center&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/60aB2FKkBj.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å ä¸­å¼ç¹&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_dotplot(binaxis = &amp;quot;y&amp;quot;, stackdir = &amp;quot;center&amp;quot;) + 
  stat_summary(fun.data=mean_sdl, color = &amp;quot;red&amp;quot;,geom = &amp;quot;pointrange&amp;quot;,fun.args=list(mult=1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/B1A5h69HDF.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸ç®±çº¿å¾ç»å&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_boxplot() + 
  geom_dotplot(binaxis = &amp;quot;y&amp;quot;, stackdir = &amp;quot;center&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/JkebcfeiHH.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å å°æç´å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_violin(trim = FALSE) +
  geom_dotplot(binaxis=&#39;y&#39;, stackdir=&#39;center&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DGm19F7hde.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°doseæ å°ç»é¢è²ä»¥åå¡«åè²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_dotplot(aes(color = dose, fill = dose), 
                 binaxis = &amp;quot;y&amp;quot;, stackdir = &amp;quot;center&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/AGABHiI43E.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;å¸¦ç¶å¾&#34;&gt;å¸¦ç¶å¾&lt;/h4&gt;
&lt;p&gt;å¸¦ç¶å¾æ¯ä¸ç§ä¸ç»´æ£ç¹å¾ï¼å½æ ·æ¬éå¾å°æ¶ï¼ä¸ç®±çº¿å¾ç¸å½&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_jitter(position=position_jitter(0.2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/KE0EHFl7h0.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å ä¸­å¼ç¹&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_jitter(position=position_jitter(0.2)) + 
  stat_summary(fun.data=&amp;quot;mean_sdl&amp;quot;,  fun.args = list(mult=1), 
               geom=&amp;quot;pointrange&amp;quot;, color = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/GF9c4kHDKI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸ç¹å¾ç»å&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_jitter(position=position_jitter(0.2)) + 
  geom_dotplot(binaxis = &amp;quot;y&amp;quot;, stackdir = &amp;quot;center&amp;quot;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/238j5KGmEB.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸å°æç´å¾ç»å&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e + geom_violin(trim = FALSE) +
  geom_jitter(position=position_jitter(0.2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/lEADE3fA1h.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°doseæ å°ç»é¢è²åå½¢ç¶&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;e +  geom_jitter(aes(color = dose, shape = dose),
                 position=position_jitter(0.2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/7lKfKkE5d6.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;çº¿å¾-1&#34;&gt;çº¿å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æé æ°æ®é
df &amp;lt;- data.frame(supp=rep(c(&amp;quot;VC&amp;quot;, &amp;quot;OJ&amp;quot;), each=3),
                dose=rep(c(&amp;quot;D0.5&amp;quot;, &amp;quot;D1&amp;quot;, &amp;quot;D2&amp;quot;),2),
                len=c(6.8, 15, 33, 4.2, 10, 29.5))
head(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   supp dose  len
## 1   VC D0.5  6.8
## 2   VC   D1 15.0
## 3   VC   D2 33.0
## 4   OJ D0.5  4.2
## 5   OJ   D1 10.0
## 6   OJ   D2 29.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å°suppæ å°çº¿å&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(df, aes(x=dose, y=len, group=supp)) +
  geom_line(aes(linetype=supp))+
  geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Bjl125A2Im.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹çº¿åãç¹çå½¢ç¶ä»¥åé¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(df, aes(x=dose, y=len, group=supp)) +
  geom_line(aes(linetype=supp, color = supp))+
  geom_point(aes(shape=supp, color = supp))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/j9e39B9cKB.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æ¡å½¢å¾&#34;&gt;æ¡å½¢å¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æé æ°æ®é
df &amp;lt;- data.frame(dose=c(&amp;quot;D0.5&amp;quot;, &amp;quot;D1&amp;quot;, &amp;quot;D2&amp;quot;),
                len=c(4.2, 10, 29.5))
head(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   dose  len
## 1 D0.5  4.2
## 2   D1 10.0
## 3   D2 29.5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;df2 &amp;lt;- data.frame(supp=rep(c(&amp;quot;VC&amp;quot;, &amp;quot;OJ&amp;quot;), each=3),
                dose=rep(c(&amp;quot;D0.5&amp;quot;, &amp;quot;D1&amp;quot;, &amp;quot;D2&amp;quot;),2),
                len=c(6.8, 15, 33, 4.2, 10, 29.5))
head(df2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   supp dose  len
## 1   VC D0.5  6.8
## 2   VC   D1 15.0
## 3   VC   D2 33.0
## 4   OJ D0.5  4.2
## 5   OJ   D1 10.0
## 6   OJ   D2 29.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f &amp;lt;- ggplot(df, aes(x = dose, y = len))
f + geom_bar(stat = &amp;quot;identity&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/FF7A37l9j4.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å¡«åè²ä»¥åæ·»å æ ç­¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f + geom_bar(stat=&amp;quot;identity&amp;quot;, fill=&amp;quot;steelblue&amp;quot;)+
  geom_text(aes(label=len), vjust=-0.3, size=3.5)+
  theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/hBa9871IE9.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°doseæ å°ç»æ¡å½¢å¾é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f + geom_bar(aes(color = dose),
             stat=&amp;quot;identity&amp;quot;, fill=&amp;quot;white&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/HIGAAJLiFl.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å¡«åè²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f + geom_bar(aes(fill = dose), stat=&amp;quot;identity&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/LGFlfJGmHi.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°åésuppæ å°ç»å¡«åè²ï¼ä»èè¾¾å°åç»ææ&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;g &amp;lt;- ggplot(data=df2, aes(x=dose, y=len, fill=supp)) 
g + geom_bar(stat = &amp;quot;identity&amp;quot;)#positioné»è®¤ä¸ºstack
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dLGm6lij04.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹positionä¸ºdodge&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;g + geom_bar(stat=&amp;quot;identity&amp;quot;, position=position_dodge())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Di23jj9kC9.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸¤ä¸ªåéxyçç¦»æ£&#34;&gt;ä¸¤ä¸ªåéï¼xãyçç¦»æ£&lt;/h3&gt;
&lt;p&gt;ä½¿ç¨æ°æ®édiamondsä¸­çä¸¤ä¸ªç¦»æ£åécolorä»¥åcut&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(diamonds, aes(cut, color)) +
  geom_jitter(aes(color = cut), size = 0.5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/c8Fh5DI7cE.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸¤ä¸ªåéç»å¶è¯¯å·®å¾&#34;&gt;ä¸¤ä¸ªåéï¼ç»å¶è¯¯å·®å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;df &amp;lt;- ToothGrowth
df$dose &amp;lt;- as.factor(df$dose)
head(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    len supp dose
## 1  4.2   VC  0.5
## 2 11.5   VC  0.5
## 3  7.3   VC  0.5
## 4  5.8   VC  0.5
## 5  6.4   VC  0.5
## 6 10.0   VC  0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç»å¶è¯¯å·®å¾éè¦ç¥éåå¼ä»¥åæ åè¯¯ï¼ä¸é¢è¿ä¸ªå½æ°ç¨æ¥è®¡ç®æ¯ç»çåå¼ä»¥åæ åè¯¯ã&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;data_summary &amp;lt;- function(data, varname, grps){
  require(plyr)
  summary_func &amp;lt;- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE))
  }
  data_sum&amp;lt;-ddply(data, grps, .fun=summary_func, varname)
  data_sum &amp;lt;- rename(data_sum, c(&amp;quot;mean&amp;quot; = varname))
 return(data_sum)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;è®¡ç®åå¼ä»¥åæ åè¯¯&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;df2 &amp;lt;- data_summary(df, varname=&amp;quot;len&amp;quot;, grps= &amp;quot;dose&amp;quot;)
# Convert dose to a factor variable
df2$dose=as.factor(df2$dose)
head(df2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   dose    len       sd
## 1  0.5 10.605 4.499763
## 2    1 19.735 4.415436
## 3    2 26.100 3.774150
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f &amp;lt;- ggplot(df2, aes(x = dose, y = len, 
                     ymin = len-sd, ymax = len+sd))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯æ·»å çå¾å±æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_crossbar(): ç©ºå¿æ±ï¼ä¸ä¸­ä¸ä¸çº¿åå«ä»£è¡¨ymaxãmeanãymin&lt;/li&gt;
&lt;li&gt;geom_errorbar(): è¯¯å·®æ£&lt;/li&gt;
&lt;li&gt;geom_errorbarh(): æ°´å¹³è¯¯å·®æ£&lt;/li&gt;
&lt;li&gt;geom_linerange()ï¼ç«ç´è¯¯å·®çº¿&lt;/li&gt;
&lt;li&gt;geom_pointrange()ï¼ä¸­é´ä¸ºä¸ç¹çè¯¯å·®çº¿&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å·ä½å¦ä¸ï¼&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/521m2AHCDg.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;geom_crossbar&#34;&gt;geom_crossbar()&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_crossbar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/18EIA26lgI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å°doseæ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_crossbar(aes(color=dose))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jH5eDIHjHL.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;èªå®ä¹é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_crossbar(aes(color=dose))+
  scale_color_manual(values = c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;))+theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jcBCFdKlmH.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å¡«åè²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_crossbar(aes(fill=dose))+
  scale_fill_manual(values = c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;))+
  theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6c5A4l9d2D.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;éè¿å°suppæ å°ç»é¢è²å®ç°åç»ï¼å¯ä»¥å©ç¨å½æ°stat_summary()æ¥è®¡ç®meanåsd&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f &amp;lt;- ggplot(df, aes(x=dose, y=len, color=supp))
f+stat_summary(fun.data = mean_sdl, fun.args = list(mult=1), geom=&amp;quot;crossbar&amp;quot;, width=0.6, position = position_dodge(0.8))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/3e3Ic9486G.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;è¯¯å·®æ£&#34;&gt;è¯¯å·®æ£&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f &amp;lt;- ggplot(df2, aes(x=dose, y=len, ymin=len-sd, ymax=len+sd))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å°doseæ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_errorbar(aes(color=dose), width=0.2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/HLJe8aLajg.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸çº¿å¾ç»å&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_line(aes(group=1))+
  geom_errorbar(width=0.15)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/2E0aKa6GgJ.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸æ¡å½¢å¾ç»åï¼å¹¶å°åédoseæ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_bar(aes(color=dose), stat = &amp;quot;identity&amp;quot;, fill=&amp;quot;white&amp;quot;)+
  geom_errorbar(aes(color=dose), width=0.1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1GllA47ajF.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æ°´å¹³è¯¯å·®æ£&#34;&gt;æ°´å¹³è¯¯å·®æ£&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æé æ°æ®é
df2 &amp;lt;- data_summary(ToothGrowth, varname=&amp;quot;len&amp;quot;, grps = &amp;quot;dose&amp;quot;)
df2$dose &amp;lt;- as.factor(df2$dose)
head(df2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   dose    len       sd
## 1  0.5 10.605 4.499763
## 2    1 19.735 4.415436
## 3    2 26.100 3.774150
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f &amp;lt;- ggplot(data = df2, aes(x=len, y=dose,xmin=len-sd, xmax=len+sd))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åæ°xminä¸xmaxç¨æ¥è®¾ç½®æ°´å¹³è¯¯å·®æ£&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_errorbarh()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/2KAK9FgCDF.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;éè¿æ å°å®ç°åç»&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_errorbarh(aes(color=dose))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/G3cJmg13EI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;geom_linerangeä¸geom_pointrange&#34;&gt;geom_linerange()ä¸geom_pointrange()&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f &amp;lt;- ggplot(df2, aes(x=dose, y=len, ymin=len-sd, ymax=len+sd))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;line range&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_linerange()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/95BJEFgb1c.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;point range&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;f+geom_pointrange()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/5kAAd2dhJl.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ç¹å¾è¯¯å·®æ£&#34;&gt;ç¹å¾+è¯¯å·®æ£&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;g &amp;lt;- ggplot(df, aes(x=dose, y=len))+
  geom_dotplot(binaxis = &amp;quot;y&amp;quot;, stackdir = &amp;quot;center&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ·»å geom_crossbar()&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;g+stat_summary(fun.data = mean_sdl, fun.args = list(mult=1), geom=&amp;quot;crossbar&amp;quot;, color=&amp;quot;red&amp;quot;, width=0.1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/gb1G7K8D25.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å geom_errorbar()&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;g + stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), 
        geom=&amp;quot;errorbar&amp;quot;, color=&amp;quot;red&amp;quot;, width=0.2) +
  stat_summary(fun.y=mean, geom=&amp;quot;point&amp;quot;, color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/HBjmlf502b.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å geom_pointrange()&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;g + stat_summary(fun.data=mean_sdl, fun.args = list(mult=1), 
                 geom=&amp;quot;pointrange&amp;quot;, color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/E3K5E0cg9B.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸¤ä¸ªåéå°å¾ç»å¶&#34;&gt;ä¸¤ä¸ªåéï¼å°å¾ç»å¶&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;æä¾äºç»å¶å°å¾çå½æ°&lt;code&gt;geom_map()&lt;/code&gt;ï¼ä¾èµäºå&lt;strong&gt;maps&lt;/strong&gt;æä¾å°çä¿¡æ¯ã
å®è£&lt;strong&gt;map&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.paclages(&amp;quot;maps&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¸é¢å°ç»å¶ç¾å½å°å¾ï¼æ°æ®ééç¨&lt;strong&gt;USArrests&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(maps)
head(USArrests)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            Murder Assault UrbanPop Rape
## Alabama      13.2     236       58 21.2
## Alaska       10.0     263       48 44.5
## Arizona       8.1     294       80 31.0
## Arkansas      8.8     190       50 19.5
## California    9.0     276       91 40.6
## Colorado      7.9     204       78 38.7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯¹æ°æ®è¿è¡æ´çä¸ä¸,æ·»å ä¸åstate&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;crimes &amp;lt;- data.frame(state=tolower(rownames(USArrests)), USArrests)
head(crimes)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            Murder Assault UrbanPop Rape
## Alabama      13.2     236       58 21.2
## Alaska       10.0     263       48 44.5
## Arizona       8.1     294       80 31.0
## Arkansas      8.8     190       50 19.5
## California    9.0     276       91 40.6
## Colorado      7.9     204       78 38.7
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;#æ°æ®éé¸
library(reshape2)
crimesm &amp;lt;- melt(crimes, id=1)
head(crimesm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        state variable value
## 1    alabama   Murder  13.2
## 2     alaska   Murder  10.0
## 3    arizona   Murder   8.1
## 4   arkansas   Murder   8.8
## 5 california   Murder   9.0
## 6   colorado   Murder   7.9
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;map_data &amp;lt;- map_data(&amp;quot;state&amp;quot;)
#ç»å¶å°å¾ï¼ä½¿ç¨Murderè¿è¡çè²
ggplot(crimes, aes(map_id=state))+
  geom_map(aes(fill=Murder), map=map_data)+
  expand_limits(x=map_data$long, y=map_data$lat)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/I05fI783fH.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸ä¸ªåé&#34;&gt;ä¸ä¸ªåé&lt;/h3&gt;
&lt;p&gt;ä½¿ç¨æ°æ®é&lt;strong&gt;mtcars&lt;/strong&gt;ï¼é¦åç»å¶ä¸ä¸ªç¸å³æ§å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æé æ°æ®
df &amp;lt;- mtcars[, c(1,3,4,5,6,7)]
head(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                    mpg disp  hp drat    wt  qsec
## Mazda RX4         21.0  160 110 3.90 2.620 16.46
## Mazda RX4 Wag     21.0  160 110 3.90 2.875 17.02
## Datsun 710        22.8  108  93 3.85 2.320 18.61
## Hornet 4 Drive    21.4  258 110 3.08 3.215 19.44
## Hornet Sportabout 18.7  360 175 3.15 3.440 17.02
## Valiant           18.1  225 105 2.76 3.460 20.22
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;cormat &amp;lt;- round(cor(df), 2)
cormat_melt &amp;lt;- melt(cormat)
head(cormat)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        mpg  disp    hp  drat    wt  qsec
## mpg   1.00 -0.85 -0.78  0.68 -0.87  0.42
## disp -0.85  1.00  0.79 -0.71  0.89 -0.43
## hp   -0.78  0.79  1.00 -0.45  0.66 -0.71
## drat  0.68 -0.71 -0.45  1.00 -0.71  0.09
## wt   -0.87  0.89  0.66 -0.71  1.00 -0.17
## qsec  0.42 -0.43 -0.71  0.09 -0.17  1.00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºå¾å±ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;g &amp;lt;- ggplot(cormat_melt, aes(x=Var1, y=Var2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¨æ­¤åºç¡ä¸å¯æ·»å çå¾å±æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_tile(): ç¦çå¾&lt;/li&gt;
&lt;li&gt;geom_raster(): åæ å¾ï¼ç¦çå¾çä¸ç§ï¼åªä¸è¿ææçtilesé½æ¯ä¸æ ·çå¤§å°&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ç°å¨ä½¿ç¨ä½¿ç¨geom_tile()ç»å¶ç¸å³æ§ç©éµå¾ï¼æä»¬è¿éè¿ç»å¶ä¸ä¸è§ç©éµå¾ï¼é¦åè¦æ´çæ°æ®ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#è·å¾ç¸å³ç©éµçä¸ä¸è§
get_lower_tri &amp;lt;- function(cormat){
  cormat[upper.tri(cormat)] &amp;lt;- NA
  return(cormat)
}
#è·å¾ç¸å³ç©éµçä¸ä¸è§
get_upper_tri &amp;lt;- function(cormat){
  cormat[lower.tri(cormat)] &amp;lt;- NA
  return(cormat)
}
upper_tri &amp;lt;- get_upper_tri(cormat = cormat)
head(upper_tri)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      mpg  disp    hp  drat    wt  qsec
## mpg    1 -0.85 -0.78  0.68 -0.87  0.42
## disp  NA  1.00  0.79 -0.71  0.89 -0.43
## hp    NA    NA  1.00 -0.45  0.66 -0.71
## drat  NA    NA    NA  1.00 -0.71  0.09
## wt    NA    NA    NA    NA  1.00 -0.17
## qsec  NA    NA    NA    NA    NA  1.00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç»å¶ç¸å³ç©éµå¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æ°æ®éé¸
upper_tri_melt &amp;lt;- melt(upper_tri, na.rm = TRUE)
ggplot(data=upper_tri_melt, aes(Var1, y=Var2, fill=value))+
  geom_tile(color=&amp;quot;white&amp;quot;)+
  scale_fill_gradient2(low = &amp;quot;blue&amp;quot;, high = &amp;quot;red&amp;quot;, mid = &amp;quot;white&amp;quot;, midpoint = 0, limit=c(-1, 1), space = &amp;quot;Lab&amp;quot;, name=&amp;quot;Person\nCorrelation&amp;quot;)+
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 45, vjust = 1, size = 12, hjust = 1))+
  coord_fixed()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/LL96JDbLi4.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ä¸å¾ä¸­èè²ä»£è¡¨äºç¸å³ï¼çº¢è²ä»£è¡¨æ­£ç¸å³ï¼è³äºcoord_fixed()ä¿è¯xï¼yè½´æ¯ä¾ä¸º1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;å¯ä»¥çåºä¸å¾é¡ºåºæç¹ä¹±ï¼æä»¬å¯ä»¥å¯¹ç¸å³ç©éµè¿è¡æåº&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æé å½æ°
reorder_cormat &amp;lt;- function(cormat){
  dd &amp;lt;- as.dist((1-cormat)/2)
  hc &amp;lt;- hclust(dd)
  cormat &amp;lt;- cormat[hc$order, hc$order]
}
cormat &amp;lt;- reorder_cormat(cormat)
lower_tri &amp;lt;- get_lower_tri(cormat)
lower_tri_melt &amp;lt;- melt(lower_tri, na.rm = TRUE)
head(lower_tri_melt)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Var1 Var2 value
## 1   hp   hp  1.00
## 2 disp   hp  0.79
## 3   wt   hp  0.66
## 4 qsec   hp -0.71
## 5  mpg   hp -0.78
## 6 drat   hp -0.45
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç»å¶å¾å½¢&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggheatmap &amp;lt;- ggplot(lower_tri_melt, aes(Var1, Var2, fill=value))+
  geom_tile(color=&amp;quot;white&amp;quot;)+
  scale_fill_gradient2(low = &amp;quot;blue&amp;quot;, high = &amp;quot;red&amp;quot;, mid = &amp;quot;white&amp;quot;, midpoint = 0, limit=c(-1, 1), space = &amp;quot;Lab&amp;quot;, name=&amp;quot;Person\nCorrelation&amp;quot;)+
  theme_minimal()+
 theme(axis.text.x = element_text(angle = 45, vjust = 1, 
    size = 12, hjust = 1))+
 coord_fixed()
print(ggheatmap)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/FDdmmgjJL5.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;å¾åå¤è¾¹å½¢è·¯å¾å¸¦ç¶å°çº¿çº¿æ®µç©å½¢ç­&#34;&gt;å¾åï¼å¤è¾¹å½¢ãè·¯å¾ãå¸¦ç¶ãå°çº¿ï¼çº¿æ®µï¼ãç©å½¢ç­&lt;/h3&gt;
&lt;p&gt;æ¬èä¸»è¦è®²è¿°çæ¯æ·»å å¾å½¢åä»¶ï¼å°ç¨å°ä¸ä¸å½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_polygon()ï¼æ·»å å¤è¾¹å½¢&lt;/li&gt;
&lt;li&gt;geom_path(): è·¯å¾&lt;/li&gt;
&lt;li&gt;geom_ribbon(): å¸¦ç¶&lt;/li&gt;
&lt;li&gt;geom_segment(): å°çº¿ãçº¿æ®µ&lt;/li&gt;
&lt;li&gt;geom_curve(): æ²çº¿&lt;/li&gt;
&lt;li&gt;geom_rect(): äºç»´ç©å½¢&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;æ·»å å¤è¾¹å½¢&#34;&gt;æ·»å å¤è¾¹å½¢&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(dplyr)
map_data(&amp;quot;world&amp;quot;)%&amp;gt;%
  filter(region==c(&amp;quot;China&amp;quot;, &amp;quot;Taiwan&amp;quot;))%&amp;gt;%
  ggplot(aes(x=long, y=lat, group=group))+
  geom_polygon(fill=&amp;quot;red&amp;quot;, color=&amp;quot;black&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Gj3I6E4Kh6.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æ·»å è·¯å¾å¸¦ç¶ç©å½¢&#34;&gt;æ·»å è·¯å¾ãå¸¦ç¶ãç©å½¢&lt;/h4&gt;
&lt;p&gt;åå»ºå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;h &amp;lt;- ggplot(economics, aes(date, unemploy))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ·»å è·¯å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;h+geom_path()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/hKCeGeja0m.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å å¸¦ç¶&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;h+geom_ribbon(aes(ymin=unemploy-800, ymax=unemploy+800), fill = &amp;quot;grey70&amp;quot;)+geom_line(aes(y=unemploy))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/FKG84CB8f1.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å ç©å½¢&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;h+
  geom_path()+
  geom_rect(aes(xmin=as.Date(&amp;quot;1980-01-01&amp;quot;), ymin=-Inf, xmax=as.Date(&amp;quot;1985-01-01&amp;quot;), ymax=Inf), fill=&amp;quot;steelblue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/c5iBDliiKB.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æ·»å çº¿æ®µ&#34;&gt;æ·»å çº¿æ®µ&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;i &amp;lt;- ggplot(mtcars, aes(wt, mpg))+geom_point()
#æ·»å çº¿æ®µ
i+geom_segment(aes(x=2, y=15, xend=3, yend=15))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/lF9GiCg023.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ·»å ç®­å¤´&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;i+geom_segment(aes(x=5, y=30, xend=3.5, yend=25), arrow = arrow(length = unit(0.5, &amp;quot;cm&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ebGE0KdHlc.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æ·»å æ²çº¿&#34;&gt;æ·»å æ²çº¿&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;i+geom_curve(aes(x=2, y=15, xend=3, yend=15), color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/BHJd8191Am.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;å¾å½¢åæ°ä¸»æ é¢åæ è½´æ ç­¾å¾ä¾æ é¢&#34;&gt;å¾å½¢åæ°ï¼ä¸»æ é¢ãåæ è½´æ ç­¾ãå¾ä¾æ é¢&lt;/h3&gt;
&lt;p&gt;åå»ºå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ToothGrowth$dose &amp;lt;- as.factor(ToothGrowth$dose)
p &amp;lt;- ggplot(ToothGrowth, aes(x=dose, y=len))+geom_boxplot()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¿®æ¹æ é¢ä»¥åæ ç­¾çå½æ°æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ggtitle(&amp;ldquo;New main title&amp;rdquo;): æ·»å ä¸»æ é¢&lt;/li&gt;
&lt;li&gt;xlab(âNew X axis labelâ): ä¿®æ¹xè½´æ ç­¾&lt;/li&gt;
&lt;li&gt;ylab(âNew Y axis labelâ): ä¿®æ¹yè½´æ ç­¾&lt;/li&gt;
&lt;li&gt;labs(title = âNew main titleâ, x = âNew X axis labelâ, y = âNew Y axis labelâ): å¯åæ¶æ·»å ä¸»æ é¢ä»¥ååæ è½´æ ç­¾ï¼å¦å¤ï¼å¾ä¾æ é¢ä¹å¯ä»¥ç¨æ­¤å½æ°ä¿®æ¹&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ä¿®æ¹ä¸»æ é¢ä»¥åæ ç­¾&#34;&gt;ä¿®æ¹ä¸»æ é¢ä»¥åæ ç­¾&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;(p &amp;lt;- p+labs(title=&amp;quot;Plot of length\nby dose&amp;quot;, x=&amp;quot;Dose (mg)&amp;quot;, y=&amp;quot;teeth length&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/h0dhdgD0H5.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ä¿®æ¹æ ç­¾å±æ§é¢è²å­ä½å¤§å°ç­&#34;&gt;ä¿®æ¹æ ç­¾å±æ§ï¼é¢è²ãå­ä½ãå¤§å°ç­&lt;/h4&gt;
&lt;p&gt;ä½¿ç¨theme()ä¿®æ¹,element_text()å¯ä»¥å·ä½ä¿®æ¹å¾å½¢åæ°ï¼element_blank()éèæ ç­¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#ä¿®æ¹æ ç­¾
p+theme(
plot.title = element_text(color = &amp;quot;red&amp;quot;, size = 14, face = &amp;quot;bold.italic&amp;quot;),
axis.title.x = element_text(color=&amp;quot;blue&amp;quot;, size = 14, face = &amp;quot;bold&amp;quot;),
axis.title.y = element_text(color=&amp;quot;#993333&amp;quot;, size = 14, face = &amp;quot;bold&amp;quot;)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/28K0J6j688.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#éèæ ç­¾
p+theme(
  plot.title = element_blank(),
  axis.title.x = element_blank(),
  axis.title.y = element_blank()
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/0Fe5dGADJi.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ä¿®æ¹å¾ä¾æ é¢&#34;&gt;ä¿®æ¹å¾ä¾æ é¢&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p &amp;lt;- ggplot(ToothGrowth, aes(x=dose, y=len, fill=dose))+
  geom_boxplot()
p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Afhm8Dbaa3.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¿®æ¹å¾ä¾æ é¢
p+labs(fill=&amp;quot;Dose (mg)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dLAe8a3a7K.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;å¾ä¾ä½ç½®ä»¥åå¤è§&#34;&gt;å¾ä¾ä½ç½®ä»¥åå¤è§&lt;/h3&gt;
&lt;h4 id=&#34;ä¿®æ¹å¾ä¾ä½ç½®ä»¥åå¤è§&#34;&gt;ä¿®æ¹å¾ä¾ä½ç½®ä»¥åå¤è§&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#å¾ä¾ä½ç½®å¨æä¸é¢ï¼æäºä¸ªéé¡¹ï¼&amp;quot;left&amp;quot;,&amp;quot;top&amp;quot;, &amp;quot;right&amp;quot;, &amp;quot;bottom&amp;quot;, &amp;quot;none&amp;quot;
p+theme(legend.position = &amp;quot;top&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/52gIJkL4Fj.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ç§»é¤å¾ä¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+theme(legend.position = &amp;quot;none&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/akg12aak7l.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å¾ä¾æ é¢ä»¥åæ ç­¾å¤è§&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+theme(
  legend.title = element_text(color=&amp;quot;blue&amp;quot;),
  legend.text = element_text(color=&amp;quot;red&amp;quot;)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/7AgB3J5C56.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å¾ä¾èæ¯&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+theme(legend.background = element_rect(fill=&amp;quot;lightblue&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jB9CJj91hj.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;å©ç¨scaleå½æ°èªå®ä¹å¾ä¾&#34;&gt;å©ç¨scale()å½æ°èªå®ä¹å¾ä¾&lt;/h4&gt;
&lt;p&gt;ä¸»è¦ä¸¤ä¸ªå½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale_x_discrete()ï¼ä¿®æ¹å¾ä¾æ ç­¾é¡ºåº&lt;/li&gt;
&lt;li&gt;scale_fill_discrete(): ä¿®æ¹å¾ä¾æ é¢ä»¥åæ ç­¾&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#ä¿®æ¹é¡ºåº
p+scale_x_discrete(limits=c(&amp;quot;2&amp;quot;, &amp;quot;0.5&amp;quot;, &amp;quot;1&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/AbFBaAl2a3.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¿®æ¹æ é¢ä»¥åæ ç­¾
p+scale_fill_discrete(name=&amp;quot;Dose&amp;quot;, label=c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/AcKFcEl5j4.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;èªå¨æå¨ä¿®æ¹é¢è²&#34;&gt;èªå¨/æå¨ä¿®æ¹é¢è²&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;mtcars$cyl &amp;lt;- as.factor(mtcars$cyl)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºå¾å±&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# boxplot
bp &amp;lt;- ggplot(ToothGrowth, aes(x=dose, y=len))
# scatter plot
sp &amp;lt;- ggplot(mtcars, aes(x=wt, y=mpg))
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;ä¿®æ¹å¡«åè²è½®å»çº¿é¢è²&#34;&gt;ä¿®æ¹å¡«åè²ãè½®å»çº¿é¢è²&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;bp+geom_boxplot(fill=&amp;quot;steelblue&amp;quot;, color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/L09ec6fJdi.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sp+geom_point(color=&amp;quot;darkblue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dm838FcDID.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;éè¿æ å°åç»ä¿®æ¹é¢è²&#34;&gt;éè¿æ å°åç»ä¿®æ¹é¢è²&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;(bp &amp;lt;- bp+geom_boxplot(aes(fill=dose)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/39aG8c99CA.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(sp &amp;lt;- sp+geom_point(aes(color=cyl)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6lAKJH6FcI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æå¨ä¿®æ¹é¢è²&#34;&gt;æå¨ä¿®æ¹é¢è²&lt;/h4&gt;
&lt;p&gt;ä¸»è¦ä¸¤ä¸ªå½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale_fill_manual(): å¡«åè²&lt;/li&gt;
&lt;li&gt;scale_color_manual()ï¼è½®å»è²ï¼å¦ç¹çº¿&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Box plot
bp + scale_fill_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/5l8CkJeG3b.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Scatter plot
sp + scale_color_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/mlmKH9mDm0.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;ä½¿ç¨rcolorbrewerè°è²æ¿&#34;&gt;ä½¿ç¨&lt;strong&gt;RColorBrewer&lt;/strong&gt;è°è²æ¿&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;scale_fill_brewer(): å¡«åè²&lt;/li&gt;
&lt;li&gt;scale_color_brewer()ï¼è½®å»è²ï¼å¦ç¹çº¿&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Box plot
bp + scale_fill_brewer(palette=&amp;quot;Dark2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/fdgD6lfCLK.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Scatter plot
sp + scale_color_brewer(palette=&amp;quot;Dark2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/I4K7c25E00.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RColorBrewer&lt;/strong&gt;åæä¾ä»¥ä¸è°è²æ¿&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/2mh2le2j13.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;è¿ä¸é¨æä¸ä¸ªç°åº¦è°è²æ¿ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Box plot
bp + scale_fill_grey() + theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/el4C3gckcd.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Scatter plot
sp + scale_color_grey() + theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/5B3cgiFbH6.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;æ¢¯åº¦æè¿ç»­é¢è²&#34;&gt;æ¢¯åº¦æè¿ç»­é¢è²&lt;/h4&gt;
&lt;p&gt;ææ¶æä»¬ä¼å°æä¸ªè¿ç»­åéæ å°ç»é¢è²ï¼è¿æ¶ä¿®æ¹è¿ç§æ¢¯åº¦æè¿ç»­åé¢è²å°±å¯ä»¥ä½¿ç¨ä»¥ä¸å½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale_color_gradient(), scale_fill_gradient()ï¼ä¸¤ç§é¢è²çè¿ç»­æ¢¯åº¦&lt;/li&gt;
&lt;li&gt;scale_color_gradient2(), scale_fill_gradient2()ï¼ä¸åæ¢¯åº¦&lt;/li&gt;
&lt;li&gt;scale_color_gradientn(), scale_fill_gradientn()ï¼å¤ç§é¢è²æ¢¯åº¦&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Color by qsec values
sp2&amp;lt;-ggplot(mtcars, aes(x=wt, y=mpg)) +
  geom_point(aes(color = qsec))
sp2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DfKHLjH6mm.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Change the low and high colors
# Sequential color scheme
sp2+scale_color_gradient(low=&amp;quot;blue&amp;quot;, high=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/g4mj6HBA2d.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Diverging color scheme
mid&amp;lt;-mean(mtcars$qsec)
sp2+scale_color_gradient2(midpoint=mid, low=&amp;quot;blue&amp;quot;, mid=&amp;quot;white&amp;quot;,
                          high=&amp;quot;red&amp;quot;, space = &amp;quot;Lab&amp;quot; )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jemKdg7ai2.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ç¹é¢è²å¤§å°å½¢ç¶&#34;&gt;ç¹é¢è²ãå¤§å°ãå½¢ç¶&lt;/h3&gt;
&lt;p&gt;Ræä¾çç¹å½¢ç¶æ¯ç±æ°å­è¡¨ç¤ºçï¼å·ä½å¦ä¸ï¼&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/g7gjFCb420.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Basic scatter plot
ggplot(mtcars, aes(x=wt, y=mpg)) +
  geom_point(shape = 18, color = &amp;quot;steelblue&amp;quot;, size = 4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/EG65iAcdaI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Change point shapes and colors by groups
ggplot(mtcars, aes(x=wt, y=mpg)) +
geom_point(aes(shape = cyl, color = cyl))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/mKAb95CAk6.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¯éè¿ä»¥ä¸æ¹æ³å¯¹ç¹çé¢è²ãå¤§å°ãå½¢ç¶è¿è¡ä¿®æ¹ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale_shape_manual() : to change point shapes&lt;/li&gt;
&lt;li&gt;scale_color_manual() : to change point colors&lt;/li&gt;
&lt;li&gt;scale_size_manual() : to change the size of points&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Change colors and shapes manually
ggplot(mtcars, aes(x=wt, y=mpg, group=cyl)) +
  geom_point(aes(shape=cyl, color=cyl), size=2)+
  scale_shape_manual(values=c(3, 16, 17))+
  scale_color_manual(values=c(&#39;#999999&#39;,&#39;#E69F00&#39;, &#39;#56B4E9&#39;))+
  theme(legend.position=&amp;quot;top&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Cj4aedai9j.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ææ¬æ³¨é-1&#34;&gt;ææ¬æ³¨é&lt;/h3&gt;
&lt;p&gt;å¯¹å¾å½¢è¿è¡ææ¬æ³¨éæä»¥ä¸æ¹æ³ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_text(): ææ¬æ³¨é&lt;/li&gt;
&lt;li&gt;geom_label(): ææ¬æ³¨é,ç±»ä¼¼äºgeom_text(),åªæ¯å¤äºä¸ªèæ¯æ¡&lt;/li&gt;
&lt;li&gt;annotate(): ææ¬æ³¨é&lt;/li&gt;
&lt;li&gt;annotation_custom(): åé¢æ¶å¯ä»¥å¨ææçé¢æ¿è¿è¡ææ¬æ³¨é&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;set.seed(1234)
df &amp;lt;- mtcars[sample(1:nrow(mtcars), 10), ]
df$cyl &amp;lt;- as.factor(df$cyl)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ£ç¹å¾æ³¨é&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Scatter plot
sp &amp;lt;- ggplot(df, aes(x=wt, y=mpg))+ geom_point() 
# Add text, change colors by groups
sp + geom_text(aes(label = rownames(df), color = cyl),
               size = 3, vjust = -1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/0EAk2aFEJG.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Add text at a particular coordinate
sp + geom_text(x = 3, y = 30, label = &amp;quot;Scatter plot&amp;quot;,
              color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/8A620eJKDl.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# geom_label()è¿è¡æ³¨é
sp + geom_label(aes(label=rownames(df)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/D6ick1LI9i.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# annotation_custom(),éè¦ç¨å°textGrob()
library(grid)
# Create a text
grob &amp;lt;- grobTree(textGrob(&amp;quot;Scatter plot&amp;quot;, x=0.1,  y=0.95, hjust=0,
  gp=gpar(col=&amp;quot;red&amp;quot;, fontsize=13, fontface=&amp;quot;italic&amp;quot;)))
# Plot
sp + annotation_custom(grob)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/80EK39ebBA.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#åé¢æ³¨é
sp + annotation_custom(grob)+facet_wrap(~cyl, scales=&amp;quot;free&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/cdfK8keKee.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;çº¿å&#34;&gt;çº¿å&lt;/h3&gt;
&lt;p&gt;Réççº¿åæä¸ç§ï¼âblankâ, âsolidâ, âdashedâ, âdottedâ, âdotdashâ, âlongdashâ, âtwodashâï¼å¯¹åºæ°å­0ï¼1ï¼2ï¼3ï¼4ï¼5ï¼6.&lt;/p&gt;
&lt;p&gt;å·ä½å¦ä¸ï¼&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/2gAL9gilee.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Create some data
df2 &amp;lt;- data.frame(sex = rep(c(&amp;quot;Female&amp;quot;, &amp;quot;Male&amp;quot;), each=3),
                  time=c(&amp;quot;breakfeast&amp;quot;, &amp;quot;Lunch&amp;quot;, &amp;quot;Dinner&amp;quot;),
                  bill=c(10, 30, 15, 13, 40, 17) )
head(df2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      sex       time bill
## 1 Female breakfeast   10
## 2 Female      Lunch   30
## 3 Female     Dinner   15
## 4   Male breakfeast   13
## 5   Male      Lunch   40
## 6   Male     Dinner   17
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Line plot with multiple groups
# Change line types and colors by groups (sex)
ggplot(df2, aes(x=time, y=bill, group=sex)) +
  geom_line(aes(linetype = sex, color = sex))+
  geom_point(aes(color=sex))+
  theme(legend.position=&amp;quot;top&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/leH2fj5jf7.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;åç¹ä¸æ ·ï¼çº¿ä¹å¯ä»¥ç±»ä¼¼ä¿®æ¹ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale_linetype_manual() : to change line types&lt;/li&gt;
&lt;li&gt;scale_color_manual() : to change line colors&lt;/li&gt;
&lt;li&gt;scale_size_manual() : to change the size of lines&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Change line types, colors and sizes
ggplot(df2, aes(x=time, y=bill, group=sex)) +
  geom_line(aes(linetype=sex, color=sex, size=sex))+
  geom_point()+
  scale_linetype_manual(values=c(&amp;quot;twodash&amp;quot;, &amp;quot;dotted&amp;quot;))+
  scale_color_manual(values=c(&#39;#999999&#39;,&#39;#E69F00&#39;))+
  scale_size_manual(values=c(1, 1.5))+
  theme(legend.position=&amp;quot;top&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/j9EajEBa9b.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä¸»é¢ä¸èæ¯é¢è²&#34;&gt;ä¸»é¢ä¸èæ¯é¢è²&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# Convert the column dose from numeric to factor variable
ToothGrowth$dose &amp;lt;- as.factor(ToothGrowth$dose)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åå»ºç®±çº¿å¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p &amp;lt;- ggplot(ToothGrowth, aes(x=dose, y=len))+
  geom_boxplot()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¿®æ¹ä¸»é¢
&lt;strong&gt;ggplot2&lt;/strong&gt;æä¾äºå¥½å ç§ä¸»é¢ï¼å¦å¤æä¸ä¸ªæ©å±å&lt;strong&gt;ggthemes&lt;/strong&gt;ä¸é¨æä¾äºä¸ä¸»é¢ï¼å¯ä»¥å®è£å©ç¨ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;ggthemes&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;theme_gray(): gray background color and white grid lines&lt;/li&gt;
&lt;li&gt;theme_bw() : white background and gray grid lines&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+theme_gray(base_size = 14)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/hj1eIbED8J.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+theme_bw()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DIL3A3j3H0.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;theme_linedraw : black lines around the plot&lt;/li&gt;
&lt;li&gt;theme_light : light gray lines and axis (more attention towards the data)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p + theme_linedraw()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dllCEkgbJd.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p + theme_light()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/HIE1djID57.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;theme_minimal: no background annotations&lt;/li&gt;
&lt;li&gt;theme_classic : theme with axis lines and no grid lines&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p + theme_minimal()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DldJFIi1jG.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p + theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/kdb786kHb6.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ggthemes&lt;/strong&gt;æä¾çä¸»é¢&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+ggthemes::theme_economist()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/mhE0cglig4.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;åæ è½´æå¤§æå°å¼&#34;&gt;åæ è½´ï¼æå¤§æå°å¼&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p &amp;lt;- ggplot(cars, aes(x=speed, y=dist))+geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¿®æ¹åæ è½´èå´æä»¥ä¸å ç§æ¹å¼ï¼
1ãä¸å é¤æ°æ®&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p+coord_cartesian(xlim=c(5, 20), ylim=c(0, 50)):ç¬å¡å°åæ ç³»ï¼è¿æ¯è®¾å®ä¿®æ¹ä¸ä¼å é¤æ°æ®&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2ãä¼å é¤é¨åæ°æ®ï¼ä¸å¨æ­¤èå´åçæ°æ®é½ä¼è¢«å é¤,å æ­¤å¨æ­¤åºç¡ä¸æ·»å å¾å±æ¶æ°æ®æ¯ä¸å®æ´ç&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p+xlim(5, 20)+ylim(0, 50)&lt;/li&gt;
&lt;li&gt;p+scale_x_continuous(limits=c(5, 20))+scale_y_continuous(limits=c(0, 50))&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3ãæ©å±å¾å½¢èå´ï¼expand()å½æ°ï¼æ©å¤§èå´&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p+expand_limits(x=0, y=0):è®¾ç½®æªè·ä¸º0ï¼å³è¿åç¹&lt;/li&gt;
&lt;li&gt;p+expand_limits(x=c(5, 50), y=c(0, 150))ï¼æ©å¤§åæ è½´èå´ï¼è¿æ ·å¾å½¢æ¾ç¤ºå°±å°äº&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ä¸é¢éè¿å¾å½¢æ¼ç¤º&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/45E5EkIbmH.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#éè¿coord_cartesian()å½æ°ä¿®æ¹åæ è½´èå´
p+coord_cartesian(xlim =c (5, 20), ylim = c(0, 50))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/cbia8kk48E.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#éè¿xlim()åylim()å½æ°ä¿®æ¹
p+xlim(5, 20)+ylim(0, 50)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/cbia8kk48E.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#expand limits
p+expand_limits(x=c(5, 50), y=c(0, 150))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/m44Dlla2Cl.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;åæ åæ¢&#34;&gt;åæ åæ¢&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p &amp;lt;- ggplot(cars, aes(x=speed, y=dist))+geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;åæ åæ¢æä»¥ä¸å ç§ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p+scale_x_log10(),p+scale_y_log10(): ç»å¾æ¶å¯¹xï¼yå10çå¯¹æ°&lt;/li&gt;
&lt;li&gt;p+scale_x_sqrt(),p+scale_x_sqrt(): å¼æ ¹å·&lt;/li&gt;
&lt;li&gt;p+scale_x_reverse(),p+scale_x_reverse()ï¼åæ è½´åå&lt;/li&gt;
&lt;li&gt;p+coord_trans(x =âlog10â, y=âlog10â): åä¸ï¼å¯ä»¥å¯¹åæ è½´åå¯¹æ°ãæ ¹å·ç­&lt;/li&gt;
&lt;li&gt;p+scale_x_continuous(trans=&amp;ldquo;log2&amp;rdquo;),p+scale_x_continuous(trans=&amp;ldquo;log2&amp;rdquo;): åä¸ï¼åå¯¹æ°çå¦å¤ä¸ç§æ¹æ³&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ä¸é¢å®ä¾æ¼ç¤ºï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/90aD77ldKb.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+scale_x_continuous(trans = &amp;quot;log2&amp;quot;)+
  scale_y_continuous(trans = &amp;quot;log2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/mI8LDhgJE9.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¿®æ¹åæ å»åº¦æ ç­¾
require(scales)
p+scale_y_continuous(trans=log2_trans(),
                    breaks = trans_breaks(&amp;quot;log2&amp;quot;, function(x) 2^x),
                    labels=trans_format(&amp;quot;log2&amp;quot;, math_format(2^.x)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/F94egDhaID.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#åæ è½´åå
p+scale_y_reverse()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/L68AbbdeH9.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;åæ å»åº¦å»åº¦çº¿æ ç­¾é¡ºåºç­&#34;&gt;åæ å»åº¦ï¼å»åº¦çº¿ãæ ç­¾ãé¡ºåºç­&lt;/h4&gt;
&lt;p&gt;æ´æ¹åæ è½´å»åº¦çº¿æ ç­¾ç­å½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;element_text(face, color, size, angle): ä¿®æ¹ææ¬é£æ ¼&lt;/li&gt;
&lt;li&gt;element_blank(): éèææ¬&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;(p &amp;lt;- ggplot(ToothGrowth, aes(x=dose, y=len))+geom_boxplot())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/22F52FHA0H.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹å»åº¦æ ç­¾ç­&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+theme(axis.text.x = element_text(face = &amp;quot;bold&amp;quot;, color=&amp;quot;#993333&amp;quot;, size=14, angle = 45),
        axis.text.y = element_text(face = &amp;quot;bold&amp;quot;, size = 14, color = &amp;quot;blue&amp;quot;, angle = 45))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/7k09a4DhDb.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ç§»é¤å»åº¦æ ç­¾ç­&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p + theme(
  axis.text.x = element_blank(), # Remove x axis tick labels
  axis.text.y = element_blank(), # Remove y axis tick labels
  axis.ticks = element_blank()) # Remove ticks
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/lmmg7BEa1m.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å½ç¶å¯ä»¥èªå®ä¹åæ è½´äº&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ç¦»æ£éè¿ç»­åæ è½´&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale_x_discrete(name, breaks, labels, limits)&lt;/li&gt;
&lt;li&gt;scale_y_discrete(name, breaks, labels, limits)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;è¿ç»­ååæ è½´&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scale_x_conyinuous(name, breaks, labels, limits)&lt;/li&gt;
&lt;li&gt;scale_y_continuous(name, breaks, labels, limits)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;è¯¦ç»æåµå¦ä¸ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;name: x,yè½´çæ é¢&lt;/li&gt;
&lt;li&gt;breaks: å»åº¦ï¼åæå æ®µ&lt;/li&gt;
&lt;li&gt;labelsï¼åæ è½´å»åº¦çº¿æ ç­¾&lt;/li&gt;
&lt;li&gt;limits: åæ è½´èå´&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å¶ä¸­scale_xx()å½æ°å¯ä»¥ä¿®æ¹åæ è½´çå¦ä¸åæ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;åæ è½´æ é¢&lt;/li&gt;
&lt;li&gt;åæ è½´èå´&lt;/li&gt;
&lt;li&gt;å»åº¦æ ç­¾ä½ç½®&lt;/li&gt;
&lt;li&gt;æå¨è®¾ç½®å»åº¦æ ç­¾&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å·ä½æ¼ç¤ºï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ç¦»æ£åæ è½´&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#ä¿®æ¹æ ç­¾ä»¥åé¡ºåº
p+scale_x_discrete(name=&amp;quot;Dose (mg)&amp;quot;, limits=c(&amp;quot;2&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;0.5&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/EFbiHLHg4H.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#ä¿®æ¹å»åº¦æ ç­¾
p+scale_x_discrete(breaks=c(&amp;quot;0.5&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;),labels=c(&amp;quot;Dose 0.5&amp;quot;, &amp;quot;Dose 1&amp;quot;, &amp;quot;Dose 2&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/7b8a55d8e6.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#ä¿®æ¹è¦æ¾ç¤ºçé¡¹
p+scale_x_discrete(limits=c(&amp;quot;0.5&amp;quot;, &amp;quot;2&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/KEBgH9eL6A.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;è¿ç»­ååæ è½´&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#æ£ç¹å¾
(sp &amp;lt;- ggplot(cars, aes(x=speed, y=dist))+geom_point())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6mAgGel8FI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹åæ è½´æ ç­¾ä»¥åèå´&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;(sp &amp;lt;- sp+scale_x_continuous(name = &amp;quot;Speed of cars&amp;quot;, limits = c(0, 30))+
  scale_y_continuous(name = &amp;quot;Stopping distance&amp;quot;, limits = c(0, 150)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1Gfa1ki6jd.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ´æ¹yè½´å»åº¦ï¼é´é50&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sp+scale_y_continuous(breaks = seq(0, 150, 50))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/67LdJdeHJJ.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¿®æ¹yè½´æ ç­¾ä¸ºç¾åæ°&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;require(scales)
sp+scale_y_continuous(labels = percent)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/lKBLj42Fmb.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;æ·»å ç´çº¿æ°´å¹³çº¿ç«ç´çº¿åå½çº¿&#34;&gt;æ·»å ç´çº¿ï¼æ°´å¹³çº¿ãç«ç´çº¿ãåå½çº¿&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;æä¾ä»¥ä¸æ¹æ³ä¸ºå¾å½¢æ·»å ç´çº¿ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;geom_hline(yintercept, linetype, color, size): æ·»å æ°´å¹³çº¿&lt;/li&gt;
&lt;li&gt;geom_vline(xintercept, linetype, color, size)ï¼æ·»å ç«ç´çº¿&lt;/li&gt;
&lt;li&gt;geom_abline(intercept, slope, linetype, color, size)ï¼æ·»å åå½çº¿&lt;/li&gt;
&lt;li&gt;geom_segment()ï¼æ·»å çº¿æ®µ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å®ä¾æ¼ç¤ºï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sp &amp;lt;- ggplot(data=mtcars, aes(x=wt, y=mpg))+ geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ·»å ç´çº¿ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#å¨y=20å¤æ·»å ä¸æ°´å¹³çº¿ï¼å¹¶è®¾ç½®é¢è²ç­
sp+geom_hline(yintercept = 20, linetype=&amp;quot;dashed&amp;quot;, color=&#39;red&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/klELKdJ7h2.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¨x=3å¤æ·»å ä¸ç«ç´çº¿ï¼å¹¶è®¾ç½®é¢è²ç­
sp+geom_vline(xintercept = 3, color=&amp;quot;blue&amp;quot;, size=1.5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/5cIFlhkK0E.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ·»å åå½çº¿
sp+geom_abline(intercept = 37, slope = -5, color=&amp;quot;blue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Jci00jI819.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ·»å æ°´å¹³çº¿æ®µ
sp+geom_segment(aes(x=2, y=15, xend=3, yend=15), color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1gAEcm93JF.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;å¾å½¢æè½¬æè½¬åå&#34;&gt;å¾å½¢æè½¬ï¼æè½¬ãåå&lt;/h3&gt;
&lt;p&gt;ä¸»è¦æ¯ä¸é¢ä¸¤ä¸ªå½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;coord_flip()ï¼åå»ºæ°´å¹³æ¹åå¾&lt;/li&gt;
&lt;li&gt;scale_x_reverse(),scale_y_reverse()ï¼åæ è½´åå&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;set.seed(1234)
(hp &amp;lt;- qplot(x=rnorm(200), geom = &amp;quot;histogram&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/CgC7HHLid5.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ°´å¹³æ±å½¢å¾
hp+coord_flip()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/hD4HaiCDJI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#yè½´åå
hp+scale_y_reverse()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/HCFl1ha75C.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;åé¢&#34;&gt;åé¢&lt;/h3&gt;
&lt;p&gt;åé¢å°±æ¯æ ¹æ®ä¸ä¸ªæå¤ä¸ªåéå°å¾å½¢åä¸ºå ä¸ªå¾å½¢ä»¥ä¾¿äºå¯è§åï¼ä¸»è¦æä¸¤ä¸ªæ¹æ³å®ç°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;facet_grid()&lt;/li&gt;
&lt;li&gt;facet_wrap()&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ToothGrowth$dose &amp;lt;- as.factor(ToothGrowth$dose)
(p &amp;lt;- ggplot(ToothGrowth, aes(x=dose, y=len, group=dose))+
  geom_boxplot(aes(fill=dose)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/3AfigK2AIl.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;éå¯¹ä¸é¢å¾å½¢è¿è¡åé¢ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p+facet_grid(supp~.): æåésuppè¿è¡ç«ç´æ¹ååé¢&lt;/li&gt;
&lt;li&gt;p+facet_grid(.~supp): æåésuppè¿è¡æ°´å¹³æ¹ååé¢&lt;/li&gt;
&lt;li&gt;p+facet_wrap(dose~supp)ï¼æååésuppådoseè¿è¡æ°´å¹³ç«ç´æ¹ååé¢&lt;/li&gt;
&lt;li&gt;p+facet_wrap(~fl): å°åæçé¢æ¿è¾¹é è¾¹ç½®äºä¸ä¸ªç©å½¢æ¡å&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1ãæä¸ä¸ªç¦»æ£åéè¿è¡åé¢ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r,fig.height=4,fig.width=3}&#34;&gt;#ç«ç´æ¹åè¿è¡åé¢
p+facet_grid(supp~.)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/e5hdDE7FE0.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ°´å¹³æ¹ååé¢
p+facet_grid(.~supp)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/F3BgFeHc3C.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;2ãæä¸¤ä¸ªç¦»æ£åéè¿è¡åé¢&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r,fig.height=4,fig.width=3}&#34;&gt;#è¡ædoseåé¢ï¼åæsuppåé¢
p+facet_grid(dose~supp)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/9112kbBA9g.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#è¡æsuppï¼åædoseåé¢
p+facet_grid(supp~dose)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/bjm9fk0k79.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä»ä¸é¢å¾å½¢å¯ä»¥çåºï¼æ¯ä¸ªé¢æ¿çåæ è½´æ¯ä¾é½æ¯ä¸æ ·çï¼æä»¬å¯ä»¥éè¿è®¾ç½®åæ°scalesæ¥æ§å¶åæ è½´æ¯ä¾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p + facet_grid(dose ~ supp, scales=&#39;free&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/65F4K0ajaI.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ä½ç½®è°æ´&#34;&gt;ä½ç½®è°æ´&lt;/h3&gt;
&lt;p&gt;å¾å¤å¾å½¢éè¦æä»¬è°æ´ä½ç½®ï¼æ¯å¦ç´æ¹å¾æ¶ï¼ç±å å å¼ãç¾åå¼ãåç¦»å¼ç­ï¼å·ä½çè¦éè¿å®ä¾è¯´æ&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p &amp;lt;- ggplot(mpg, aes(fl, fill=drv))
#ç´æ¹å¾è¾¹é è¾¹æåï¼åæ°position=&amp;quot;dodge&amp;quot;
p+geom_bar(position = &amp;quot;dodge&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/13Cf1kA3Jc.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;å å å¼position=&amp;ldquo;stack&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+geom_bar(position = &amp;quot;stack&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/J2bH42IjHA.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;position=&amp;ldquo;fill&amp;quot;ç±»ä¼¼çå å å¾ï¼åªä¸è¿æç¾åæ¯æåï¼æææ±å­é½è¢«æ ååæåæ ·é«åº¦&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+geom_bar(position = &amp;quot;fill&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1iblgciCm8.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;position=&amp;ldquo;jitter&amp;rdquo;,ï¼ä¸»è¦éç¨äºæ£ç¹å¾ï¼å¢å æ°å¨ï¼é¿åéå ï¼åé¢è®²çgeom_jitter()å°±æ¯æ¥æºäºæ­¤&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;ggplot(mpg, aes(cty, hwy))+
  geom_point(position = &amp;quot;jitter&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/01D9L4A8Ld.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸é¢å ä¸ªå½æ°æä¸¤ä¸ªéè¦çåæ°ï¼heigthãweightã&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;position_dodge(width, height)&lt;/li&gt;
&lt;li&gt;position_fill(width, height)&lt;/li&gt;
&lt;li&gt;position_stack(width, height)&lt;/li&gt;
&lt;li&gt;position_jitter(width, height)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+geom_bar(position = position_dodge(width = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DaHcfl9dId.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;åæ ç³»&#34;&gt;åæ ç³»&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p &amp;lt;- ggplot(mpg, aes(fl))+geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;ä¸­çåæ ç³»ä¸»è¦æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;p+coord_cartesian(xlim=NULL, ylim=NULL)ï¼ç¬å¡å°åæ ç³»(é»è®¤)&lt;/li&gt;
&lt;li&gt;p+coord_fixed(ratio=1, clim=NULL, ylim=NULL)ï¼åºå®äºåæ è½´æ¯ä¾çç¬å¡å°åæ ç³»ãé»è®¤æ¯ä¾ä¸º1&lt;/li&gt;
&lt;li&gt;p+coord_flip(&amp;hellip;)ï¼æè½¬ç¬å¡å°åæ ç³»&lt;/li&gt;
&lt;li&gt;p+coord_polar(theta=&amp;ldquo;x&amp;rdquo;, start=0, direction=1)ï¼æåæ ç³»&lt;/li&gt;
&lt;li&gt;p+coord_trans(x,y,limx,limy)ï¼åæ¢ç¬å¡å°åæ ç³»&lt;/li&gt;
&lt;li&gt;coord_map()ï¼å°å¾åæ ç³»&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;åä¸ªåæ ç³»åæ°å¦ä¸ï¼
1ãç¬å¡å°åæ ç³»ï¼coord_cartesian(), coord_fixed() and coord_flip()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xlimï¼xè½´èå´&lt;/li&gt;
&lt;li&gt;ylimï¼yè½´èå´&lt;/li&gt;
&lt;li&gt;ratioï¼y/x&lt;/li&gt;
&lt;li&gt;&amp;hellip;ï¼å¶ä»åæ°&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2ãæåæ ç³»ï¼coord_polar()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;thetaï¼å¤å»¶åæ ï¼xæy&lt;/li&gt;
&lt;li&gt;startï¼åæ å¼å§çä½ç½®ï¼é»è®¤ä¸º12ç¹é&lt;/li&gt;
&lt;li&gt;directionï¼æ¹åï¼é¡ºæ¶é(1),éæ¶é(-1)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3ãåæ¢åæ ç³»ï¼coord_trans()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x,yï¼åæ¢çåæ è½´&lt;/li&gt;
&lt;li&gt;limx,limyï¼åæ è½´èå´&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å®ä¾æ¼ç¤ºï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+coord_cartesian(ylim = c(0,200))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/KE5JcFmdhl.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+coord_fixed(ratio = 1/50)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/LHeG17JljH.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+coord_flip()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/8AK62ii9Ib.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;p+coord_polar(theta = &amp;quot;x&amp;quot;, direction = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/HBF135cLAA.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+coord_trans(y=&amp;quot;sqrt&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DhI4Ha1m91.png?raw=true&#34; alt=&#34;mark&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ggplot2åèµææ©å±åå½æ°&#34;&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;åèµææ©å±ï¼åãå½æ°&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;æä¸ä¸ªå®æ¹ç½ç«ï¼éé¢æååè¯¦ç»çè¯´æï¼
&lt;a href=&#34;http://ggplot2.tidyverse.org/reference/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ç¹å»è¿éç´è¾¾&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;è¿æååå¤çæ©å±åï¼
&lt;a href=&#34;https://www.ggplot2-exts.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ç¹å»è¿éç´è¾¾&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sessionInfo()

## R version 3.4.1 (2017-06-30)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 16.04.3 LTS
## 
## Matrix products: default
## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0
## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0
## 
## locale:
##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    
##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   
##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] grid      stats     graphics  grDevices utils     datasets  methods  
## [8] base     
## 
## other attached packages:
## [1] scales_0.5.0   bindrcpp_0.2   dplyr_0.7.3    reshape2_1.4.2
## [5] maps_3.2.0     hexbin_1.27.1  plyr_1.8.4     ggplot2_2.2.1 
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.12        bindr_0.1           compiler_3.4.1     
##  [4] RColorBrewer_1.1-2  base64enc_0.1-3     tools_3.4.1        
##  [7] rpart_4.1-11        digest_0.6.12       checkmate_1.8.3    
## [10] htmlTable_1.9       evaluate_0.10.1     tibble_1.3.4       
## [13] gtable_0.2.0        lattice_0.20-35     pkgconfig_2.0.1    
## [16] rlang_0.1.2         Matrix_1.2-11       yaml_2.1.14        
## [19] gridExtra_2.3       stringr_1.2.0       knitr_1.17         
## [22] cluster_2.0.6       htmlwidgets_0.9     rprojroot_1.2      
## [25] nnet_7.3-12         glue_1.1.1          data.table_1.10.4  
## [28] R6_2.2.2            survival_2.41-3     foreign_0.8-69     
## [31] rmarkdown_1.6       latticeExtra_0.6-28 Formula_1.2-2      
## [34] magrittr_1.5        ggthemes_3.4.0      backports_1.1.0    
## [37] Hmisc_4.0-3         htmltools_0.3.6     MASS_7.3-47        
## [40] splines_3.4.1       assertthat_0.2.0    colorspace_1.3-2   
## [43] labeling_0.3        stringi_1.1.5       acepack_1.4.1      
## [46] lazyeval_0.2.0      munsell_0.4.3
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>åå»ºåèªå®ä¹ggplotåé¢å¾å½¢åæ°</title>
      <link>https://taoyan.netlify.app/post/2017-09-14.%E5%88%9B%E5%BB%BA%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89ggplot%E5%88%86%E9%9D%A2%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/</link>
      <pubDate>Thu, 14 Sep 2017 07:47:05 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-09-14.%E5%88%9B%E5%BB%BA%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89ggplot%E5%88%86%E9%9D%A2%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç®ä»&#34;&gt;ç®ä»&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggplot2&lt;/strong&gt;æä¸ä¸ªååéè¦çåè½å°±æ¯åé¢ï¼èä»å¤©è¦è®²å¾Rå&lt;strong&gt;ggpubr&lt;/strong&gt;ä¸­ä¹æä¸ä¸ªå½æ°facet()ä¸é¨ç¨æ¥è¿è¡åé¢æä½ã&lt;/p&gt;
&lt;h2 id=&#34;å®è£&#34;&gt;å®è£&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;ggpubr&amp;quot;)
#or
if(!require(devtools)) install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;kassambara/ggpubr&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ç»å¾&#34;&gt;ç»å¾&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(ggpubr)
df &amp;lt;- ToothGrowth
df$dose &amp;lt;- as.factor(df$dose)
head(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    len supp dose
## 1  4.2   VC  0.5
## 2 11.5   VC  0.5
## 3  7.3   VC  0.5
## 4  5.8   VC  0.5
## 5  6.4   VC  0.5
## 6 10.0   VC  0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggdensity(df, x=&amp;quot;len&amp;quot;, fill = &amp;quot;dose&amp;quot;, palette = &amp;quot;jco&amp;quot;, ggtheme = theme_light(), legend=&amp;quot;top&amp;quot;)
p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;åé¢&#34;&gt;åé¢&lt;/h2&gt;
&lt;h3 id=&#34;æ°´å¹³æ¹ååé¢&#34;&gt;æ°´å¹³æ¹ååé¢&lt;/h3&gt;
&lt;p&gt;æç§åé&lt;code&gt;supp&lt;/code&gt;è¿è¡æ°´å¹³æ¹åçåé¢&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;facet(p, facet.by = &amp;quot;supp&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/2.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ç«ç´æ¹ååé¢&#34;&gt;ç«ç´æ¹ååé¢&lt;/h3&gt;
&lt;p&gt;æç§åé&lt;code&gt;supp&lt;/code&gt;è¿è¡ç«ç´æ¹åçåé¢&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;facet(p, facet.by = &amp;quot;supp&amp;quot;, ncol = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/3.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ååéåé¢&#34;&gt;ååéåé¢&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#divide with &amp;quot;supp&amp;quot; vertical, &amp;quot;dose&amp;quot; horizontal
facet(p, facet.by = c(&amp;quot;supp&amp;quot;, &amp;quot;dose&amp;quot;), short.panel.labs = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/4.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¿®æ¹é¢æ¿å¤è§&#34;&gt;ä¿®æ¹é¢æ¿å¤è§&lt;/h2&gt;
&lt;p&gt;ä¸»è¦æä»¥ä¸åæ°è¿è¡ä¿®æ¹ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;short.panel.label:é»è®¤ä¸ºTRUEï¼æ­¤æ¶åéåä¸ä¼æ¾ç¤º&lt;/li&gt;
&lt;li&gt;panel.label: éè¿èªå®ä¹labelæ¥è®¾ç½®é¢æ¿label,æ¯ä¸ä¸ªlist&lt;/li&gt;
&lt;li&gt;panel.labs.background: æ§å¶é¢æ¿èæ¯ï¼éé¢åæ°è®¾ç½®å¾å¤&lt;/li&gt;
&lt;li&gt;panel.labs.font: è®¾ç½®å­ä½&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ä¸é¢æ¼ç¤ºä¸ä¸&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#divide with &amp;quot;supp&amp;quot; vertical, &amp;quot;sode&amp;quot; horizontal
facet(p, facet.by = c(&amp;quot;supp&amp;quot;, &amp;quot;dose&amp;quot;),
      panel.labs = list(
        supp=c(&amp;quot;Orange Juice&amp;quot;, &amp;quot;Vitamin C&amp;quot;),
        dose=c(&amp;quot;D0.5&amp;quot;, &amp;quot;D1&amp;quot;, &amp;quot;D2&amp;quot;)),
      panel.labs.background = list(
        color=&amp;quot;steelblue&amp;quot;, 
        fill=&amp;quot;steelblue&amp;quot;,
        size=0.5),
      panel.labs.font = list(color=&amp;quot;white&amp;quot;),
      panel.labs.font.x = list(angle=45, color=&amp;quot;white&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/5.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sessionInfo()
## R version 3.4.1 (2017-06-30)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 16.04.3 LTS
## 
## Matrix products: default
## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0
## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0
## 
## locale:
##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    
##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   
##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] ggpubr_0.1.5  magrittr_1.5  ggplot2_2.2.1
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.12     bindr_0.1        knitr_1.17       munsell_0.4.3   
##  [5] colorspace_1.3-2 R6_2.2.2         rlang_0.1.2      stringr_1.2.0   
##  [9] plyr_1.8.4       dplyr_0.7.3      tools_3.4.1      grid_3.4.1      
## [13] gtable_0.2.0     htmltools_0.3.6  yaml_2.1.14      lazyeval_0.2.0  
## [17] rprojroot_1.2    digest_0.6.12    assertthat_0.2.0 tibble_1.3.4    
## [21] bindrcpp_0.2     ggsci_2.7        reshape2_1.4.2   purrr_0.2.3     
## [25] glue_1.1.1       evaluate_0.10.1  rmarkdown_1.6    labeling_0.3    
## [29] stringi_1.1.5    compiler_3.4.1   scales_0.5.0     backports_1.1.0 
## [33] pkgconfig_2.0.1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ggpubråå­¦ä¹ ç¬è®°ä¹è½»æ¾ä¿®æ¹å¾å½¢åæ°</title>
      <link>https://taoyan.netlify.app/post/2017-09-13-r-ggpubr%E5%8C%85%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%BD%BB%E6%9D%BE%E4%BF%AE%E6%94%B9%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/</link>
      <pubDate>Wed, 13 Sep 2017 21:13:14 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-09-13-r-ggpubr%E5%8C%85%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%BD%BB%E6%9D%BE%E4%BF%AE%E6%94%B9%E5%9B%BE%E5%BD%A2%E5%8F%82%E6%95%B0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dm80Clb7Eh.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç®ä»&#34;&gt;ç®ä»&lt;/h2&gt;
&lt;p&gt;è¶å­¦ä¹ å&lt;strong&gt;ggpubr&lt;/strong&gt;è¶æè§å¶åè½å¼ºå¤§ï¼æ¬æä¸»è¦è®²è§£ä¸ä¸å¦ä½ä¿®æ¹å¾å½¢åæ°ï¼æä»¬ç¥é&lt;strong&gt;ggplot2&lt;/strong&gt;æçååå¼ºå¤§çç»å¾åè½ï¼ä½æ¯å¶åæ°ä¹å¤æè¶³ä»¥è®©äººæèå´æ­¥ã&lt;strong&gt;ggpubr&lt;/strong&gt;æä¾çå½æ°ggpar()å¯ä»¥ååè½»æ¾å°è®©æä»¬ä¿®æ¹å¾å½¢åæ°ï¼å¹¶ä¸å¯ä»¥æ ç¼å¯¹æ¥å°ggplotå¾å½¢ä¸­ãggpar()å¯ä»¥ä¿®æ¹ä»¥ä¸å¾å½¢åæ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;å¾å½¢æ é¢ï¼åæ¬åæ è½´æ é¢ä»¥åå¾ä¾æ é¢&lt;/li&gt;
&lt;li&gt;å¾ä¾çä½ç½®ä»¥åå¤è§&lt;/li&gt;
&lt;li&gt;é¢è²å¿éçè½ä¿®æ¹&lt;/li&gt;
&lt;li&gt;åæ è½´limits&lt;/li&gt;
&lt;li&gt;åæ è½¬æ¢&lt;/li&gt;
&lt;li&gt;åæ å»åº¦&lt;/li&gt;
&lt;li&gt;ä¸»é¢&lt;/li&gt;
&lt;li&gt;ç¿»è½¬ç­&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;å®è£å&#34;&gt;å®è£å&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#two ways to isntall the ggpubr package
install.packages(&amp;quot;ggpubr&amp;quot;)
#install the packages from the Github
devtools::install_github(&amp;quot;kassambara/ggpubr&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ç»å¾&#34;&gt;ç»å¾&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;library(ggpubr)#load ggpubr
#basic plots
p &amp;lt;- ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color=&amp;quot;dose&amp;quot;)
p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/7hKdEb1ehB.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#add grids by the function grids()
p+grids(linetype=&amp;quot;dashed&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/f77I1FIlbB.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#add panel borders lines by the function border()
p+border(&amp;quot;black&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/cGa2dj6AB8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#change background color
p+bgcolor(&amp;quot;#BFD5E3&amp;quot;)+border(&amp;quot;#BFD5E3&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/jAIc0AjBi8.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¿®æ¹æ é¢ä»¥ååæ è½´æ ç­¾&#34;&gt;ä¿®æ¹æ é¢ä»¥ååæ è½´æ ç­¾&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;p2 &amp;lt;- ggpar(p,
            title = &amp;quot;Box plot created with ggpubr&amp;quot;,
            subtitle = &amp;quot;Length by dose&amp;quot;,
            caption = &amp;quot;Source: ggpubr&amp;quot;,
            xlab = &amp;quot;Dose (mg)&amp;quot;,
            ylab = &amp;quot;Teeth length&amp;quot;,
            legend.title = &amp;quot;Dose (mg)&amp;quot;)
p2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/5K7D23dIcC.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¿®æ¹æ é¢ä»¥åæ ç­¾çå­ä½&#34;&gt;ä¿®æ¹æ é¢ä»¥åæ ç­¾çå­ä½&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;ggpar(p2, 
      font.title = c(14, &amp;quot;bold.italic&amp;quot;, &amp;quot;red&amp;quot;),
      font.subtitle = c(10, &amp;quot;orange&amp;quot;),
      font.caption = c(10, &amp;quot;orange&amp;quot;),
      font.x = c(14, &amp;quot;blue&amp;quot;),
      font.y = c(14, &amp;quot;#993333&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dm80Clb7Eh.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å½ç¶ä¹å¯ä»¥ç´æ¥ç¨å½æ°font()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p2+
  font(&amp;quot;title&amp;quot;, size = 14, color = &amp;quot;red&amp;quot;, face = &amp;quot;bold.italic&amp;quot;)+
  font(&amp;quot;subtitle&amp;quot;, size = 10, color = &amp;quot;orange&amp;quot;)+
  font(&amp;quot;caption&amp;quot;, size = 10, color = &amp;quot;orange&amp;quot;)+
  font(&amp;quot;xlab&amp;quot;, size = 12, color = &amp;quot;blue&amp;quot;)+
  font(&amp;quot;ylab&amp;quot;, size = 12, color = &amp;quot;#993333&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6EHIKCbjdB.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä»ä¸é¢å¯ä»¥çåºæä»¬å¯ä»¥ä¸æ¬¡æ§å®ææ·»å æ é¢ä»¥åä¿®æ¹å­ä½&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggpar(p,
      title = &amp;quot;Plot of length \n by dose&amp;quot;,
      xlab = &amp;quot;Dose (mg)&amp;quot;,
      legend.title = &amp;quot;Dose (mg)&amp;quot;,
      font.title = c(14, &amp;quot;bold.italic&amp;quot;, &amp;quot;red&amp;quot;),
      font.x = c(14, &amp;quot;bold&amp;quot;, &amp;quot;#2E9FDF&amp;quot;),
      font.y = c(14, &amp;quot;bold&amp;quot;, &amp;quot;#E7B800&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/K5Hh142DDJ.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¿®æ¹å¾ä¾ä½ç½®ä¸å¤è§&#34;&gt;ä¿®æ¹å¾ä¾ä½ç½®ä¸å¤è§&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;ggpar(p,
      legend = &amp;quot;right&amp;quot;, legend.title = &amp;quot;Dose (mg)&amp;quot;)+
  font(&amp;quot;legend.title&amp;quot;, color=&amp;quot;blue&amp;quot;, face = &amp;quot;bold&amp;quot;)+
  font(&amp;quot;legend.text&amp;quot;, color = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/66Fl04A1Eg.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;é¢è²ä¿®æ¹&#34;&gt;é¢è²ä¿®æ¹&lt;/h2&gt;
&lt;p&gt;ggpar()ä¸­æä¸ä¸ªåæ°paletteï¼å³è°è²æ¿ï¼é¤äºå¯ä»¥æä»¬èªå®ä¹é¢è²å¤ï¼è¿å¯ä»¥è°ç¨RColorBrewerä¸­çè°è²æ¿ä»¥åå&lt;strong&gt;ggsci&lt;/strong&gt;ä¸­çä¸é¨ç¨äºå­¦æ¯æå¿çéè²ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#use custom color palette
ggpar(p, palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/j04LBcgCFf.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#use the RColorBrewer palette
ggpar(p, palette = &amp;quot;Dark2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/gg16gmeE3D.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggpar(p, palette = &amp;quot;grey&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/3h1K0f5aaK.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#use the ggsci palette
ggpar(p, palette = &amp;quot;npg&amp;quot;)#nature
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/13fcD9GfDC.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å½ç¶ä¹å¯ä»¥ç´æ¥ç¨&lt;strong&gt;ggpubr&lt;/strong&gt;ä¸­çå½æ°color_palette()ä»¥åfill_palette()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#jco color palette
p+color_palette(&amp;quot;jco&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/aD2IK0b75D.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#custom color
p+color_palette(c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Jj9BG7J24h.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;é¢è²æ¢¯åº¦&#34;&gt;é¢è²æ¢¯åº¦&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggpubr&lt;/strong&gt;æä¾äºä¸¤ä¸ªå½æ°ç¨æ¥å¤çé¢è²æ¢¯åº¦ï¼gradient_color()ågradient_fill()
éè¿ä¸ä¸ªä¾å­æ¥çå¦ä½è¿ä½&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#first create a scatter plot
p3 &amp;lt;- ggscatter(mtcars, x=&amp;quot;wt&amp;quot;, y=&amp;quot;mpg&amp;quot;, color=&amp;quot;mpg&amp;quot;, size = 2)
#change the gradient color
#use one custom color
p3+gradient_color(&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ah3ed5b1Ai.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#use two colors
p3+gradient_color(c(&amp;quot;blue&amp;quot;, &amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1H7KBAdKLd.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#three colors
p3+gradient_color(c(&amp;quot;blue&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/kCaHdmcG6i.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#use the RColorBrewer palette
p3+gradient_color(&amp;quot;RdYlBu&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/FHKlGj4H8F.png?raw=true&#34; alt=&#34;&#34;&gt;
gradient_fill()ç¨æ³ä¹ä¸æ ·ï¼ä¸è¿æ¯å¡«åï¼è¿éå°±ä¸æ¼ç¤ºäºã&lt;/p&gt;
&lt;h2 id=&#34;ä¿®æ¹åæ è½´limitsscales&#34;&gt;ä¿®æ¹åæ è½´limitsãscales&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#change y axis limits
ggpar(p, ylim = c(0, 50))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/CFamb4cglg.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#change y axis cale to log2
ggpar(p, yscale = &amp;quot;log2&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Deh1KddGKj.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#format  axis scale
ggpar(p, yscale = &amp;quot;log2&amp;quot;, format.scale = TRUE)#format.scale=TRUEè¯´æyè½´å»åº¦ä¹ä¼scale
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/IgF4D3LFiL.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¹å¯ä»¥ç´æ¥ç¨yscale()
p+yscale(&amp;quot;log2&amp;quot;, .format = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/lfk8D0i00d.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;èªå®ä¹åæ è½´æ ç­¾åå»åº¦&#34;&gt;èªå®ä¹åæ è½´æ ç­¾åå»åº¦&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#change the font of x and y axis texts
#rotate x and y texts
p+
  font(&amp;quot;xy.text&amp;quot;, size = 12, color = &amp;quot;blue&amp;quot;, face = &amp;quot;bold&amp;quot;)+
  rotate_x_text(45)+
  rotate_y_text(45)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/DhAlF966Cb.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#remove ticks and axis texts
p+rremove(&amp;quot;ticks&amp;quot;)+
  rremove(&amp;quot;axis.text&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/c6cHkJj7Hk.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¿®æ¹ä¸»é¢&#34;&gt;ä¿®æ¹ä¸»é¢&lt;/h2&gt;
&lt;p&gt;é»è®¤ä¸»é¢ä¸ºtheme_pubr(),å¯ä»¥è°ç¨å&lt;strong&gt;ggthemes&lt;/strong&gt;éé¢çä¸»é¢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggthemes)
p+ggthemes::theme_economist()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/k49JlfLfDg.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç§»é¤ggplotç»ä»¶&#34;&gt;ç§»é¤ggplotç»ä»¶&lt;/h2&gt;
&lt;p&gt;éè¿ggpubr::rremove()å¯ä»¥ç§»é¤ç»ä»¶ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, ggtheme = theme_igray())
p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/G53edij9j4.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+rremove(&amp;quot;grid&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/CciAa0JEhH.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.4.1 (2017-06-30)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 16.04.3 LTS
## 
## Matrix products: default
## BLAS: /usr/lib/atlas-base/atlas/libblas.so.3.0
## LAPACK: /usr/lib/atlas-base/atlas/liblapack.so.3.0
## 
## locale:
##  [1] LC_CTYPE=zh_CN.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=zh_CN.UTF-8        LC_COLLATE=zh_CN.UTF-8    
##  [5] LC_MONETARY=zh_CN.UTF-8    LC_MESSAGES=zh_CN.UTF-8   
##  [7] LC_PAPER=zh_CN.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] ggthemes_3.4.0 ggpubr_0.1.5   magrittr_1.5   ggplot2_2.2.1 
## 
## loaded via a namespace (and not attached):
##  [1] Rcpp_0.12.12       bindr_0.1          knitr_1.17        
##  [4] munsell_0.4.3      colorspace_1.3-2   R6_2.2.2          
##  [7] rlang_0.1.2        stringr_1.2.0      plyr_1.8.4        
## [10] dplyr_0.7.3        tools_3.4.1        grid_3.4.1        
## [13] gtable_0.2.0       htmltools_0.3.6    yaml_2.1.14       
## [16] lazyeval_0.2.0     rprojroot_1.2      digest_0.6.12     
## [19] assertthat_0.2.0   tibble_1.3.4       bindrcpp_0.2      
## [22] ggsci_2.7          RColorBrewer_1.1-2 purrr_0.2.3       
## [25] glue_1.1.1         evaluate_0.10.1    rmarkdown_1.6     
## [28] labeling_0.3       stringi_1.1.5      compiler_3.4.1    
## [31] scales_0.5.0       backports_1.1.0    pkgconfig_2.0.1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rè¯­è¨å¯è§åå­¦ä¹ ç¬è®°ä¹åºå ç»æ°æ®å¯è§å</title>
      <link>https://taoyan.netlify.app/post/2017-09-10.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9F%BA%E5%9B%A0%E7%BB%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
      <pubDate>Sun, 10 Sep 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-09-10.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9F%BA%E5%9B%A0%E7%BB%84%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142235.png&#34; alt=&#34;&#34;&gt;
æ¬æä¸»è¦å©ç¨&lt;strong&gt;ggpubr&lt;/strong&gt;åæ¥æ¢ç´¢åºå ç»æ°æ®,ä¸»è¦æ¯å¯è§åTCGAåºå ç»æ°æ®çåºå è¡¨è¾¾è°±ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggpubr)#å è½½å
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;TCGAæ¯ä¸ä¸ªåå«å¤§éççæ°æ®çæ°æ®åºï¼ç±Marcin Kosinskiåå»ºçRTCGAåå¯ä»¥è®©æä»¬å¾æ¹ä¾¿çè·åè¿äºæ°æ®ãä¸»è¦æä¸ä¸ªåï¼RTCGAãRTCGA.clininalãRTCGA.mRNAãå®è£æ¹æ³å¦ä¸ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Load the bioconductor installersource
(&amp;quot;https://bioconductor.org/biocLite.R&amp;quot;&amp;quot;)
#è®¾ç½®éåï¼è¿éæä»¬éæ©ä¸­ç§å¤§çéåoptions(BioC_mirror=&amp;quot;https://ustc.edu.cn/bioc&amp;quot;)
#ä¸è½½å
biocLite(&amp;quot;RTCGA&amp;quot;)
biocLite(&amp;quot;RTCGA.clininal&amp;quot;)
biocLite(&amp;quot;RTCGA.mRNA&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;library(RTCGA)
#æ¥çæ¯ä¸ç§çççæ°æ®é
infoTCGA()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142259.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RTCGA&lt;/strong&gt;åéçå½æ°&lt;code&gt;expressionTCGA()&lt;/code&gt;å¯ä»¥ååæ¹ä¾¿å°ä»ä¸åæ°æ®éä¸­æååºå çè¡¨è¾¾å¼ï¼ä¸é¢æä»¬å°ä»ä¸ä¸ªæ°æ®éBRCA(ä¹³èºç)ãOV(åµå·¢ç)ãLUSC(èºç)ä¸­æåäºä¸ªåºå çè¡¨è¾¾å¼ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(RTCGA)
library(RTCGA.mRNA)
expr &amp;lt;- expressionsTCGA(BRCA.mRNA, OV.mRNA, LUSC.mRNA, 
extract.cols = c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;, &amp;quot;ESR1&amp;quot;, &amp;quot;MUC1&amp;quot;))
expr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142313.png&#34; alt=&#34;&#34;&gt;
æ¥çæ¯ä¸ªæ°æ®éä¸­çæ ·åæ°é&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nb_samples &amp;lt;- table(expr$dataset)nb_samples

## 
## BRCA.mRNA  LUSC.mRNA  OV.mRNA 
##    590        154      561
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¸ºäºæ¹ä¾¿ï¼æä»¬å°é¨åæ°æ®éåç§°ç®å&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;expr$dataset &amp;lt;- gsub(pattern = &amp;quot;.mRNA&amp;quot;, replacement = &amp;quot;&amp;quot;, expr$dataset)
expr$bcr_patient_barcode &amp;lt;- paste0(expr$dataset, c(1:590, 1:561, 1:154))
expr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142333.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ¥ä¸æ¥ç»å¶å¾å½¢ï¼
1ãç®±çº¿å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggpubr)
ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=&amp;quot;GATA3&amp;quot;, title=&amp;quot;GATA3&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142349.png&#34; alt=&#34;&#34;&gt;
æä»¬å¯ä»¥ä¸æ¬¡æ§ç»å¶å¤ä¸ªåºå ï¼ç¶åä¸ä¸æ¥çï¼èä¸ç¨æ¯æ¬¡åä»£ç ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Creat a list of plots
p &amp;lt;- ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;, &amp;quot;ESR1&amp;quot;, &amp;quot;MUC1&amp;quot;),
title = c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;, &amp;quot;ESR1&amp;quot;, &amp;quot;MUC1&amp;quot;), 
ylab = &amp;quot;EXpression&amp;quot;, color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;)
#æ¥ä¸æ¥ä¸ä¸æ¥çæ¯ä¸ªplot
p$GATA3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142404.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p$PTEN
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142417.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p$XBP1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142429.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p$ESR1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142440.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p$MUC1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142458.png&#34; alt=&#34;&#34;&gt;
å½ä¸æ¬¡æ§ç»å¶å¤ä¸ªåºå æ¶ï¼xlab,ylab,titleä¹å¯ä»¥æ¯ä¸ä¸ªè·yç­é¿çåéã æ¥ä¸æ¥å°±æ¯æ·»å p-valueä»¥åæ¾èæ§äº&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;my_comparisons &amp;lt;- list(c(&amp;quot;BRCA&amp;quot;, &amp;quot;OV&amp;quot;), c(&amp;quot;OV&amp;quot;, &amp;quot;LUSC&amp;quot;))
ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=&amp;quot;GATA3&amp;quot;, title = &amp;quot;GATA3&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;)+ stat_compare_means(comparisons = my_comparisons)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142518.png&#34; alt=&#34;&#34;&gt;
ä¹å¯ä»¥æ¥çæ¯ä¸ªç±»åä¸­æ¯ä¸ä¸ªåºå çæ¯è¾ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;compare_means(c(GATA3, PTEN, XBP1)~dataset, data = expr)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142529.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¯ä»¥éè¿selectä»¥åremoveæ¥å³å®æ¯è¾é£å ä¸ªç±»åï¼æ¯å¦è¿éæä»¬åªæ¯è¾BRCAåOV&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=&amp;quot;GATA3&amp;quot;, title = &amp;quot;GATA3&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, select = c(&amp;quot;BRCA&amp;quot;, &amp;quot;OV&amp;quot;))#éè¿selectéæ©
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142541.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=&amp;quot;GATA3&amp;quot;, title = &amp;quot;GATA3&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, remove = &amp;quot;BRCA&amp;quot;)#éè¿removeéæ©
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142559.png&#34; alt=&#34;&#34;&gt;
éè¿orderæ¥æ¹ååç±»åå¨xè½´ä¸çé¡ºåº&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=&amp;quot;GATA3&amp;quot;, title = &amp;quot;GATA3&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, order = c(&amp;quot;LUSC&amp;quot;, &amp;quot;OV&amp;quot;, &amp;quot;BRCA&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142610.png&#34; alt=&#34;&#34;&gt;
éè¿rotate=TRUEæ¥åæ¢åæ è½´&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=&amp;quot;GATA3&amp;quot;, title = &amp;quot;GATA3&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, rotate=TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142622.png&#34; alt=&#34;&#34;&gt;
éè¿combine=TRUEæ¥è¿è¡åé¢ï¼ç±»ä¼¼äºfacetï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), ylab = &amp;quot;Expression&amp;quot;, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, combine = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142638.png&#34; alt=&#34;&#34;&gt;
éè¿merge=TRUEæèmerge=âaxisâå°ä¸ä¸ªç±»åçplotç»å¶å¨ä¸ä¸ªpanelä¸­&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), ylab = &amp;quot;Expression&amp;quot;,
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, merge = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142650.png&#34; alt=&#34;&#34;&gt;
éè¿merge=flipå©ç¨ä¸åççç±»åè¿è¡group&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), 
ylab = &amp;quot;Expression&amp;quot;, palette = &amp;quot;jco&amp;quot;, merge = &amp;quot;flip&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142704.png&#34; alt=&#34;&#34;&gt;
éè¿add=jitterå¢å æå¨ç¹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE,
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, add = &amp;quot;jitter&amp;quot;, 
add.params = list(size=0.1, jitter=0.2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142716.png&#34; alt=&#34;&#34;&gt;
éè¿add=dotplotå¢å dotplot&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), 
combine = TRUE, color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, 
add = &amp;quot;dotplot&amp;quot;, add.params = list(binwidth=0.1, dotsize=0.2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142731.png&#34; alt=&#34;&#34;&gt;
å¾å¤æ¶åæä»¬å¾åç¥éç®±çº¿å¾ä¸¤ç«¯çæ°æ®ï¼æä»¬å¯ä»¥éè¿labelæ¥è¿è¡å±ç¤º&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE,
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, add = &amp;quot;jitter&amp;quot;, 
add.params = list(size=0.1, jitter=0.2), label = &amp;quot;bcr_patient_barcode&amp;quot;, 
label.select = list(top.up=2, top.down=2), 
font.label = list(size=9, face=&amp;quot;italic&amp;quot;), repel = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142743.png&#34; alt=&#34;&#34;&gt;
2ãå°æç´å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggviolin(expr,x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, add = &amp;quot;boxplot&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142756.png&#34; alt=&#34;&#34;&gt;
éè¿ä¿®æ¹addæ¥æ´æ¹æ·»å å°æç´å¾éçå¾å½¢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggviolin(expr,x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, ylab = &amp;quot;Expression&amp;quot;, add = &amp;quot;median_iqr&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142817.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;addæå¥½å¤éé¡¹å¯ä»¥éæ©ï¼âmeanâ, âmean_seâ, âmean_sdâ, âmean_ciâ, âmean_rangeâ, âmedianâ, âmedian_iqrâ, âmedian_madâ, âmedian_rangeâ.æå´è¶£çå¯ä»¥èªå·±è¯è¯ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3ãå¸¦ç¶å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggstripchart(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE,
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, size = 0.1, jitter=0.2, ylab = &amp;quot;Expression&amp;quot;, 
add = &amp;quot;median_iqr&amp;quot;, add.params = list(color=&amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142835.png&#34; alt=&#34;&#34;&gt;
4ãdotplot&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdotplot(expr, x=&amp;quot;dataset&amp;quot;, y=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;, fill = &amp;quot;white&amp;quot;, binwidth = 0.1, ylab = &amp;quot;Expression&amp;quot;,
add = &amp;quot;median_iqr&amp;quot;, add.params = list(size=0.9))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142847.png&#34; alt=&#34;&#34;&gt;
5ãå¯åº¦å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdensity(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), y=&amp;quot;..density..&amp;quot;, 
combine = TRUE, xlab = &amp;quot;Expression&amp;quot;, add = &amp;quot;median&amp;quot;, rug = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142910.png&#34; alt=&#34;&#34;&gt;
å°datasetæ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdensity(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), y=&amp;quot;..density..&amp;quot;, combine = TRUE,
xlab = &amp;quot;Expression&amp;quot;, add = &amp;quot;median&amp;quot;, rug = TRUE, color = &amp;quot;dataset&amp;quot;, 
fill = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142922.png&#34; alt=&#34;&#34;&gt;
å°ä¸å¹å¾æ´åè¿ä¸ä¸ªpanelä¸­ï¼å¹¶å¯¹yè½´è¿è¡..count..ï¼èä¸æ¯..density..&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdensity(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), y=&amp;quot;..count..&amp;quot;, xlab = &amp;quot;Expression&amp;quot;,
add = &amp;quot;median&amp;quot;, rug = TRUE, palette = &amp;quot;jco&amp;quot;)
## $GATA3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143008.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## ## $PTEN
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143023.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## ## $XBP1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143041.png&#34; alt=&#34;&#34;&gt;
é¢è²æ å°ï¼å°xè½´åéæ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdensity(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), y=&amp;quot;..count..&amp;quot;, color = &amp;quot;.x.&amp;quot;, 
fill = &amp;quot;.x.&amp;quot;, merge = TRUE, xlab = &amp;quot;Expression&amp;quot;, add = &amp;quot;median&amp;quot;, rug = TRUE, palette = &amp;quot;jco&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143107.png&#34; alt=&#34;&#34;&gt;
ædatasetè¿è¡åé¢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdensity(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), y=&amp;quot;..count..&amp;quot;, color = &amp;quot;.x.&amp;quot;, 
fill = &amp;quot;.x.&amp;quot;, merge = TRUE, xlab = &amp;quot;Expression&amp;quot;, add = &amp;quot;median&amp;quot;, 
rug = TRUE, palette = &amp;quot;jco&amp;quot;, facet.by = &amp;quot;dataset&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143119.png&#34; alt=&#34;&#34;&gt;
6ãç´æ¹å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gghistogram(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), y=&amp;quot;..density..&amp;quot;, 
xlab = &amp;quot;Expression&amp;quot;, add = &amp;quot;median&amp;quot;, rug = TRUE)
## $GATA3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143132.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## ## $PTEN
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143144.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## ## $XBP1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143154.png&#34; alt=&#34;&#34;&gt;
å°datasetæ å°ç»é¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gghistogram(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), y=&amp;quot;..density..&amp;quot;, xlab = &amp;quot;Expression&amp;quot;, 
add = &amp;quot;median&amp;quot;, rug = TRUE, color = &amp;quot;dataset&amp;quot;, fill = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;)
## $GATA3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143208.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## ## $PTEN
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143228.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## ## $XBP1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143239.png&#34; alt=&#34;&#34;&gt;
åé¢è¿æä¸äºå°å å¹å¾æ´åå¨ä¸ä¸ªpanelä»¥ååé¢ç­å¤§åå°å¼å°±ä¸è®²äºã
7ãQ-Qå¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggqqplot(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE, size = 0.5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143251.png&#34; alt=&#34;&#34;&gt;
é¢è²æ å°&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggqqplot(expr, x=c(&amp;quot;GATA3&amp;quot;, &amp;quot;PTEN&amp;quot;, &amp;quot;XBP1&amp;quot;), combine = TRUE, size = 0.5, 
color = &amp;quot;dataset&amp;quot;, palette = &amp;quot;jco&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143302.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;#sessionInfo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
## R version 3.4.0 (2017-04-21)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 16.04.2 LTS
## 
## Matrix products: default
## BLAS: /usr/lib/libblas/libblas.so.3.6.0
## LAPACK: /usr/lib/lapack/liblapack.so.3.6.0
## 
## locale:
## [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C 
## [3] LC_TIME=zh_CN.UTF-8 LC_COLLATE=en_US.UTF-8 
## [5] LC_MONETARY=zh_CN.UTF-8 LC_MESSAGES=en_US.UTF-8
## [7] LC_PAPER=zh_CN.UTF-8 LC_NAME=C 
## [9] LC_ADDRESS=C LC_TELEPHONE=C 
## [11] LC_MEASUREMENT=zh_CN.UTF-8 LC_IDENTIFICATION=C 
## 
## attached base packages:
## [1] stats graphics grDevices utils datasets methods base 
## 
## other attached packages:
## [1] bindrcpp_0.2 RTCGA.mRNA_1.4.0 RTCGA_1.6.0 ggpubr_0.1.3 
## [5] magrittr_1.5 ggplot2_2.2.1 
## 
## loaded via a namespace (and not attached):
## [1] zoo_1.8-0 reshape2_1.4.2 purrr_0.2.2.2 
## [4] splines_3.4.0 ggthemes_3.4.0 lattice_0.20-35 
## [7] colorspace_1.3-2 htmltools_0.3.6 viridisLite_0.2.0
## [10] yaml_2.1.14 survival_2.41-3 XML_3.98-1.9 
## [13] survMisc_0.5.4 rlang_0.1.1 foreign_0.8-68 
## [16] glue_1.1.0 bindr_0.1 plyr_1.8.4 
## [19] stringr_1.2.0 ggsignif_0.2.0 munsell_0.4.3 
## [22] gtable_0.2.0 ggsci_2.7 rvest_0.3.2 
## [25] psych_1.7.5 evaluate_0.10 labeling_0.3 
## [28] knitr_1.16 parallel_3.4.0 broom_0.4.2 
## [31] Rcpp_0.12.11 xtable_1.8-2 scales_0.4.1
## [34] backports_1.1.0 cmprsk_2.2-7 km.ci_0.5-2 
## [37] gridExtra_2.2.1 mnormt_1.5-5 digest_0.6.12 
## [40] stringi_1.1.5 ggrepel_0.6.5 dplyr_0.7.0 
## [43] KMsurv_0.1-5 grid_3.4.0 rprojroot_1.2 
## [46] tools_3.4.0 lazyeval_0.2.0 tibble_1.3.3 
## [49] tidyr_0.6.3 Matrix_1.2-10 data.table_1.10.4
## [52] xml2_1.1.1 survminer_0.4.0 assertthat_0.2.0 
## [55] rmarkdown_1.6 httr_1.2.1 viridis_0.4.0 
## [58] R6_2.2.2 nlme_3.1-131 compiler_3.4.0
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ggplot2å­¦ä¹ ç¬è®°ä¹å¾å½¢æå</title>
      <link>https://taoyan.netlify.app/post/2017-08-24.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%BE%E5%BD%A2%E6%8E%92%E5%88%97/</link>
      <pubDate>Thu, 24 Aug 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-08-24.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%BE%E5%BD%A2%E6%8E%92%E5%88%97/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143351.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Rè¯­è¨åºæ¬ç»å¾å½æ°ä¸­å¯ä»¥å©ç¨par()ä»¥ålayout()æ¥è¿è¡å¾å½¢æåï¼ä½æ¯è¿ä¸¤ä¸ªå½æ°å¯¹äºggplotå¾åä¸å¤ªéç¨ï¼æ¬æä¸»è¦è®²è§£å¦ä½å¯¹å¤ggplotå¾å½¢å¤é¡µé¢è¿è¡æåãä¸»è¦è®²è§£å¦ä½å©ç¨ågridExtraãcowplotä»¥åggpubrä¸­çå½æ°è¿è¡å¾å½¢æåã&lt;/p&gt;
&lt;h2 id=&#34;ç»å¶å¾å½¢&#34;&gt;ç»å¶å¾å½¢&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;#load packages
library(gridExtra)
library(cowplot)
library(ggpubr)
#dataset ToothGrowth and mtcars
mtcars$name &amp;lt;- rownames(mtcars)
mtcars$cyl &amp;lt;- as.factor(mtcars$cyl)
head(mtcars[, c(&amp;quot;name&amp;quot;, &amp;quot;wt&amp;quot;,&amp;quot;mpg&amp;quot;, &amp;quot;cyl&amp;quot;)])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143411.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#First let&#39;s create some plots
#Box plot(bxp)
bxp &amp;lt;- ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;, palette = &amp;quot;jco&amp;quot;)
#Dot plot(dp)
dp &amp;lt;- ggdotplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;, palette = &amp;quot;jco&amp;quot;, binwidth = 1)
#An ordered Bar plot(bp)
bp &amp;lt;- ggbarplot(mtcars, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg&amp;quot;, fill=&amp;quot;cyl&amp;quot;, #change fill color by cyl 
color=&amp;quot;white&amp;quot;, #Set bar border colors to white 
palette = &amp;quot;jco&amp;quot;, #jco jourbal color palette 
sort.val = &amp;quot;asc&amp;quot;, #Sort the value in ascending order 
sort.by.groups = TRUE, #Sort inside each group 
x.text.angle=90 #Rotate vertically x axis texts )
bp+font(&amp;quot;x.text&amp;quot;, size = 8)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143425.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Scatter plots(sp)
sp &amp;lt;- ggscatter(mtcars, x=&amp;quot;wt&amp;quot;, y=&amp;quot;mpg&amp;quot;, add = &amp;quot;reg.line&amp;quot;, #Add regression line 
conf.int = TRUE, #Add confidence interval 
color = &amp;quot;cyl&amp;quot;, palette = &amp;quot;jco&amp;quot;,#Color by group cyl 
shape = &amp;quot;cyl&amp;quot; #Change point shape by groups cyl 
)+ 
stat_cor(aes(color=cyl), label.x = 3) #Add correlation coefficientsp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143437.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¾å½¢æå&#34;&gt;å¾å½¢æå&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;å¤å¹å¾å½¢æåäºä¸é¢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ggpubr::ggarrange()&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ggarrange(bxp, dp, bp+rremove(&amp;quot;x.text&amp;quot;), labels = c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot;), ncol = 2, nrow = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143450.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cowplot::plot.grid()&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;plot_grid(bxp, dp, bp+rremove(&amp;quot;x.text&amp;quot;), labels = c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot;), ncol = 2, nrow = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143501.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gridExtra::grid.arrange()&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;grid.arrange(bxp, dp, bp+rremove(&amp;quot;x.text&amp;quot;), ncol=2, nrow=2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143516.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æåå¾å½¢æ³¨é&#34;&gt;æåå¾å½¢æ³¨é&lt;/h2&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;ggpubr::annotate_figure()&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;figure &amp;lt;- ggarrange(sp, bp+font(&amp;quot;x.text&amp;quot;, size = 10), ncol = 1, nrow = 2)
annotate_figure(figure, top=text_grob(&amp;quot;Visualizing mpg&amp;quot;, color = &amp;quot;red&amp;quot;, 
face = &amp;quot;bold&amp;quot;, size=14), bottom = text_grob(&amp;quot;Data source:\n mtcars data set&amp;quot;, 
color = &amp;quot;blue&amp;quot;, hjust = 1, x=1, face = &amp;quot;italic&amp;quot;, size=10), left = text_grob(&amp;quot;Figure arranged using ggpubr&amp;quot;, color = &amp;quot;green&amp;quot;, rot = 90), 
right = &amp;quot;I&#39;m done, thanks :-)!&amp;quot;, fig.lab = &amp;quot;Figure 1&amp;quot;, fig.lab.face = &amp;quot;bold&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143530.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç»å¾é¢æ¿å¯¹é½&#34;&gt;ç»å¾é¢æ¿å¯¹é½&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ç»å¶çå­æ²çº¿&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;library(survival)
head(colon[, c(1:4)])
#Fit survival curves
fit &amp;lt;- survfit(Surv(time, status)~adhere, data = colon)
library(survminer)
ggsurv &amp;lt;- ggsurvplot(fit, data = colon, palette = &amp;quot;jco&amp;quot;, #jco palette 
pval = TRUE, pval.coord=c(500, 0.4), #Add p-value 
risk.table = TRUE #Add risk table)
names(ggsurv)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;plot&amp;quot; &amp;quot;table&amp;quot; &amp;quot;data.survplot&amp;quot; &amp;quot;data.survtable&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;ggsurvæ¯ä¸ä¸ªåå«ä¸¤é¨åçlist&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;plotï¼çå­æ²çº¿&lt;/li&gt;
&lt;li&gt;tableï¼é£é©è¡¨&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;å¯ä»¥ç¨ggarrange()è¿è¡æåè¿ä¸¤è&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggarrange(ggsurv$plot, ggsurv$table, heights = c(2, 0.7), ncol = 1, nrow = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143545.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ä¸å¾ä¸­çåæ è½´æ²¡æå¯¹é½ï¼å¯ä»¥éè¿åæ°alignæ¥è®¾ç½®&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;ggarrange(ggsurv$plot, ggsurv$table, heights = c(2, 0.7), ncol = 1, nrow = 2, align = &amp;quot;v&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143601.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æ¹åæåå¾çè¡å&#34;&gt;æ¹åæåå¾çè¡å&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;è®¾ç½®é¢æ¿ä¸ºä¸¤è¡ä¸¤åï¼å¶ä¸­spå æ®ç¬¬ä¸è¡çä¸¤åï¼bxpä»¥ådpç½®äºç¬¬äºè¡çä¸¤å&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggarrange(sp, #First row with scatter plot(sp) 
ggarrange(bxp, dp, ncol = 2, labels = c(&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;)),#Second row with box and dot plot 
nrow = 2, labels = &amp;quot;A&amp;quot; #Labels of the scatter plot)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143613.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;råcowplot&#34;&gt;Råcowplot&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;cowplot::ggdraw()å¯ä»¥å°å¾å½¢ç½®äºç¹å®ä½ç½®, ggdraw()é¦åä¼åå§åä¸ä¸ªç»å¾é¢æ¿ï¼ æ¥ä¸æ¥draw_plot()åæ¯å°å¾å½¢ç»å¶äºåå§åçç»å¾é¢æ¿ä¸­ï¼éè¿åæ°è®¾ç½®å¯ä»¥å°å¾å½¢ç½®äºç¹å®ä½ç½®ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;draw_plot(plot, x=0, y=0, width=1, height=1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¶ä¸­ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plot:å°è¦æ¾ç½®çå¾å½¢&lt;/li&gt;
&lt;li&gt;x,y:æ§å¶å¾å½¢ä½ç½®&lt;/li&gt;
&lt;li&gt;width,height:å¾å½¢çå®½åº¦åé«åº¦&lt;/li&gt;
&lt;li&gt;draw_plot_label():ä¸ºå¾å½¢æ·»å æ ç­¾&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;draw_plot_label(label, x=0, y=1, size=16, ...)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¶ä¸­ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;label:æ ç­¾&lt;/li&gt;
&lt;li&gt;x,y:æ§å¶æ ç­¾ä½ç½®&lt;/li&gt;
&lt;li&gt;size:æ ç­¾å­ä½å¤§å°&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ä¸é¢éè¿ä¸ä¸ªä¾å­æ¥è®²è§£å¦ä½å°å¤ä¸ªå¾å½¢æ¾ç½®å¨ç¹å®çä½ç½®ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdraw()+ draw_plot(bxp, x=0, y=0.5, width=0.5, height = 0.5)+
draw_plot(dp, x=0.5, y=0.5, width = 0.5, height = 0.5)+ 
draw_plot(bp, x=0, y=0, width = 1.5, height = 0.5)+ 
draw_plot_label(label = c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot;), size = 15, x=c(0, 0.5, 0), y=c(1, 1, 0.5))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143628.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;rågridextra&#34;&gt;RågridExtra&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;gridExtra::arrangeGrop()æ¹åè¡ååå¸&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ä¸é¢å°spç½®äºç¬¬ä¸è¡å¹¶æ¨ªè·¨ä¸¤åï¼èbxpådpåå«åå¸äºç¬¬äºè¡ä¸¤å&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;grid.arrange(sp, #First row with one plot spaning over 2 columns
arrangeGrob(bxp, dp, ncol = 2), #Second row with 2plots in 2 different columns 
nrow=2) #number of rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143641.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ä¹å¯ä»¥éè¿å½æ°grid.arrangeä¸­çlayout_matrixæ¥è®¾ç½®å¤æçå¾å½¢å¸å±&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;grid.arrange(bp, #bar plot spaning two columns 
bxp, sp, #box plot amd scatter plot 
ncol=2, nrow=2, layout_matrix=rbind(c(1, 1), c(2, 3)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143652.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;è¦ç¸å¯¹grid.arrange()ä»¥åarrangeGrob()çè¾åºè¿è¡æ³¨éï¼é¦åè¦å©ç¨as_ggplot()å°å¶è½¬åä¸ºggplotå¾å½¢ï¼è¿èå©ç¨å½æ°draw_plot_label()å¯¹å¶è¿è¡æ³¨éã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;gt &amp;lt;- arrangeGrob(bp, bxp, sp, layout_matrix = rbind(c(1,1),c(2, 3)))
p &amp;lt;- as_ggplot(gt)+ 
draw_plot_label(label = c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot;), size = 15, x=c(0, 0, 0.5), y=c(1, 0.5, 0.5))
p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143706.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;rågrid&#34;&gt;Rågrid&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Rågridä¸­çgrid.layout()å¯ä»¥è®¾ç½®å¤æçå¾å½¢å¸å±ï¼viewport()å¯ä»¥å®ä¹ä¸ä¸ªåºåç¨æ¥å®ç½®å¾å½¢æåï¼print()åç¨æ¥å°å¾å½¢ç½®äºç¹å®åºåã æ»ç»èµ·æ¥æ­¥éª¤å¦ä¸ï¼&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;åå»ºå¾å½¢p1,p2,p3,â¦&lt;/li&gt;
&lt;li&gt;grid.newpage()åå»ºä¸ä¸ªç»å¸&lt;/li&gt;
&lt;li&gt;åå»ºå¾å½¢å¸å±ï¼å è¡å å&lt;/li&gt;
&lt;li&gt;å®ä¹å¸å±çç©å½¢åºå&lt;/li&gt;
&lt;li&gt;printï¼å°å¾å½¢ç½®äºç¹å®åºå&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;library(grid)
#Move to a new page
grid.newpage()
#Create layout:nrow=3, ncol=2
pushViewport(viewport(layout = grid.layout(nrow=3, ncol=2)))
#A helper function to define a region on the layout
define_region &amp;lt;- function(row, col){ 
viewport(layout.pos.row = row, layout.pos.col = col)}
#Arrange the plots
print(sp, vp=define_region(row=1, col=1:2)) #Span over two columns
print(bxp, vp=define_region(row=2, col=1))
print(dp, vp=define_region(row=2, col=2))
print(bp+rremove(&amp;quot;x.text&amp;quot;), vp=define_region(row=3, col=1:2))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;è®¾ç½®å±åå¾ä¾&#34;&gt;è®¾ç½®å±åå¾ä¾&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;ggpubr::ggarrange()å¯ä»¥ä¸ºç»åå¾å½¢æ·»å å±åå¾ä¾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;common.legeng=TRUE:å¨å¾å½¢æè¾¹æ·»å å¾ä¾&lt;/li&gt;
&lt;li&gt;legendï¼æå®legendçä½ç½®ï¼ä¸»è¦éé¡¹æï¼topãbottomãleftãrightã&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ggarrange(bxp, dp, labels = c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;), common.legend = TRUE, legend = &amp;quot;bottom&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143722.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å«æè¾¹éå¯åº¦å¾çæ£ç¹å¾&#34;&gt;å«æè¾¹éå¯åº¦å¾çæ£ç¹å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;sp &amp;lt;- ggscatter(iris, x=&amp;quot;Sepal.Length&amp;quot;, y=&amp;quot;Sepal.Width&amp;quot;, color=&amp;quot;Species&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, size=3, alpha=0.6)+border()
#Marginal density plot of x(top panel) and y(right panel)
xplot &amp;lt;- ggdensity(iris, &amp;quot;Sepal.Length&amp;quot;, fill=&amp;quot;Species&amp;quot;,palette = &amp;quot;jco&amp;quot;)
yplot &amp;lt;- ggdensity(iris, &amp;quot;Sepal.Width&amp;quot;, fill=&amp;quot;Species&amp;quot;, palette = &amp;quot;jco&amp;quot;)+rotate()
#Clean the plots
xplot &amp;lt;- xplot+clean_theme()
yplot &amp;lt;- yplot+clean_theme()
#Arrange the plots
ggarrange(xplot, NULL, sp, yplot, ncol = 2, nrow = 2, align = &amp;quot;hv&amp;quot;, widths = c(2, 1), 
heights = c(1, 2), common.legend = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143734.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ggplotå¾ææ¬è¡¨æ ¼ç»å&#34;&gt;ggplotå¾ãææ¬ãè¡¨æ ¼ç»å&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;density.p &amp;lt;- ggdensity(iris, x=&amp;quot;Sepal.Length&amp;quot;, fill=&amp;quot;Species&amp;quot;, palette = &amp;quot;jco&amp;quot;)
#Compute the summary table of Sepal.Length
stable &amp;lt;- desc_statby(iris, measure.var = &amp;quot;Sepal.Length&amp;quot;, grps = &amp;quot;Species&amp;quot;)
stable &amp;lt;- stable[, c(&amp;quot;Species&amp;quot;, &amp;quot;length&amp;quot;, &amp;quot;mean&amp;quot;, &amp;quot;sd&amp;quot;)]
#Summary table plot, medium and theme
stable.p &amp;lt;- ggtexttable(stable, rows = NULL, theme = ttheme(&amp;quot;mOrange&amp;quot;))
text &amp;lt;- paste(&amp;quot;iris data set gives the measurements in cm&amp;quot;, &amp;quot;of the variables sepal length and width&amp;quot;, &amp;quot;and petal length and width, respectively,&amp;quot;, &amp;quot;for 50 flowers from each of 3 species of iris.&amp;quot;, &amp;quot;The species are Iris setosa, versicolor, and virginica.&amp;quot;, sep = &amp;quot; &amp;quot;)
text.p &amp;lt;- ggparagraph(text = text, face = &amp;quot;italic&amp;quot;, size = 11, color = &amp;quot;black&amp;quot;)
#Arrange the plots on the same page
ggarrange(density.p, stable.p, text.p, ncol = 1, nrow = 3, heights = c(1, 0.5, 0.3))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143747.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ggplotå¾å½¢ä¸­åµå¥å¾å½¢åç´ &#34;&gt;ggplotå¾å½¢ä¸­åµå¥å¾å½¢åç´ &lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;ggplot2::annotation_custom()å¯ä»¥æ·»å åç§å¾å½¢åç´ å°ggplotå¾ä¸­&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;annotation_custom(grob, xmin, xmax, ymin, ymax)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¶ä¸­ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grob:è¦æ·»å çå¾å½¢åç´ &lt;/li&gt;
&lt;li&gt;xmin, xmax: xè½´æ¹åä½ç½®ï¼æ°´å¹³æ¹åï¼&lt;/li&gt;
&lt;li&gt;ymin, ymax: yè½´æ¹åä½ç½®ï¼ç«ç´æ¹åï¼&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ggplotå¾å½¢ä¸­æ·»å table&#34;&gt;ggplotå¾å½¢ä¸­æ·»å table&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;density.p+annotation_custom(ggplotGrob(stable.p), xmin = 5.5, xmax = 8, ymin = 0.7)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143803.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ggplotå¾å½¢ä¸­æ·»å box-plot&#34;&gt;ggplotå¾å½¢ä¸­æ·»å box plot&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;sp &amp;lt;- ggscatter(iris, x=&amp;quot;Sepal.Length&amp;quot;, y=&amp;quot;Sepal.Width&amp;quot;, color = &amp;quot;Species&amp;quot;, palette = &amp;quot;jco&amp;quot;, size = 3, alpha=0.6)
xbp &amp;lt;- ggboxplot(iris$Sepal.Length, width = 0.3, fill = &amp;quot;lightgray&amp;quot;)+ rotate()+theme_transparent()
ybp &amp;lt;- ggboxplot(iris$Sepal.Width, width = 0.3, fill=&amp;quot;lightgray&amp;quot;)+theme_transparent()
# Create the external graphical objects
# called a &amp;quot;grop&amp;quot; in Grid terminology
xbp_grob &amp;lt;- ggplotGrob(xbp)
ybp_grob &amp;lt;- ggplotGrob(ybp)
#place box plots inside the scatter plot
xmin &amp;lt;- min(iris$Sepal.Length)
xmax &amp;lt;- max(iris$Sepal.Length)
ymin &amp;lt;- min(iris$Sepal.Width)
ymax &amp;lt;- max(iris$Sepal.Width)
yoffset &amp;lt;- (1/15)*ymax
xoffset &amp;lt;- (1/15)*xmax
# Insert xbp_grob inside the scatter plots
p+annotation_custom(grob = xbp_grob, xmin = xmin, xmax = xmax, 
ymin = ymin-yoffset, ymax = ymin+yoffset)+
# Insert ybp_grob inside the scatter plot
annotation_custom(grob = ybp_grob, xmin = xmin-xoffset, 
xmax=xmin+xoffset, ymin=ymin, ymax=ymax)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143814.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ggplotå¾å½¢æ·»å èæ¯&#34;&gt;ggplotå¾å½¢æ·»å èæ¯&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;#import the imageimg.file &amp;lt;- system.file(file.path(&amp;quot;images&amp;quot;, &amp;quot;background-image.png&amp;quot;), package = &amp;quot;ggpubr&amp;quot;)
img &amp;lt;- png::readPNG(img.file)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;å©ç¨ggpubr::background_image()ä¸ºggplotå¾å½¢æ·»å èæ¯å¾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;library(ggplot2)
library(ggpubr)
ggplot(iris, aes(Species,Sepal.Length))+
background_image(img)+
geom_boxplot(aes(fill=Species), color=&amp;quot;white&amp;quot;)+ fill_palette(&amp;quot;jco&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143827.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¿®æ¹éæåº¦&#34;&gt;ä¿®æ¹éæåº¦&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;ggplot(iris, aes(Species,Sepal.Length))+
background_image(img)+geom_boxplot(aes(fill=Species), color=&amp;quot;white&amp;quot;, alpha=0.5)+ 
fill_palette(&amp;quot;jco&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143843.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¤é¡µæå&#34;&gt;å¤é¡µæå&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;æ¥å¸¸å·¥ä½ä¸­æä»¬ææ¶è¦ç»å¶è®¸å¤å¾ï¼åå¦æä»¬æ16å¹å¾ï¼æ¯é¡µæå4å¼ çè¯å°±éè¦4é¡µæè½æå®ï¼èggpubr::ggarrange()å¯ä»¥éè¿å¶å®è¡åæ°èªå¨å¨å¤é¡µä¹é´è¿è¡å¾å½¢æå&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;multi.page &amp;lt;-ggarrange(bxp, dp, bp, sp, nrow = 1, ncol = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¸è¿°ä»£ç è¿åä¸¤é¡µæ¯é¡µä¸¤å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;multi.page[[1]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143901.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;multi.page[[2]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143916.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å©ç¨ggarrangeåµå¥å¸å±&#34;&gt;å©ç¨ggarrange()åµå¥å¸å±&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;p1 &amp;lt;- ggarrange(sp, bp+font(&amp;quot;x.text&amp;quot;, size = 9), ncol = 1, nrow = 2)
p2 &amp;lt;- ggarrange(density.p, stable.p, text.p, ncol = 1, nrow = 3, 
heights = c(1, 0.5, 0.3))
ggarrange(p1, p2, ncol = 2, nrow = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819143929.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
## R version 3.4.1 (2017-06-30)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 15063)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936 
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C
## [5] LC_TIME=Chinese (Simplified)_China.936 
## 
## attached base packages:
## [1] grid stats graphics grDevices utils datasets methods 
## [8] base 
## 
## other attached packages:
## [1] survminer_0.4.0 survival_2.41-3 ggpubr_0.1.5 magrittr_1.5 
## [5] cowplot_0.8.0 ggplot2_2.2.1 gridExtra_2.2.1
## 
## loaded via a namespace (and not attached):
## [1] zoo_1.8-0 purrr_0.2.3 reshape2_1.4.2 
## [4] splines_3.4.1 lattice_0.20-35 colorspace_1.3-2 
## [7] htmltools_0.3.6 yaml_2.1.14 survMisc_0.5.4
## [10] rlang_0.1.2 foreign_0.8-69 glue_1.1.1 
## [13] bindrcpp_0.2 bindr_0.1 plyr_1.8.4 
## [16] stringr_1.2.0 munsell_0.4.3 gtable_0.2.0 
## [19] ggsci_2.7 psych_1.7.5 evaluate_0.10.1 
## [22] labeling_0.3 knitr_1.17 parallel_3.4.1 
## [25] broom_0.4.2 Rcpp_0.12.12 xtable_1.8-2 
## [28] scales_0.4.1 backports_1.1.0 cmprsk_2.2-7 
## [31] km.ci_0.5-2 mnormt_1.5-5 png_0.1-7 
## [34] digest_0.6.12 stringi_1.1.5 dplyr_0.7.2 
## [37] KMsurv_0.1-5 rprojroot_1.2 tools_3.4.1 
## [40] lazyeval_0.2.0 tibble_1.3.3 tidyr_0.7.0 
## [43] pkgconfig_2.0.1 Matrix_1.2-11 data.table_1.10.4
## [46] assertthat_0.2.0 rmarkdown_1.6 R6_2.2.2 
## [49] nlme_3.1-131 compiler_3.4.1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rè¯­è¨å­¦ä¹ ç¬è®°ä¹ç­å¾ç»å¶</title>
      <link>https://taoyan.netlify.app/post/2017-08-12.r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%83%AD%E5%9B%BE%E7%BB%98%E5%88%B6/</link>
      <pubDate>Sat, 12 Aug 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-08-12.r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%83%AD%E5%9B%BE%E7%BB%98%E5%88%B6/</guid>
      <description>&lt;h2 id=&#34;ç®ä»&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819140939.png&#34; alt=&#34;&#34;&gt;
ç®ä»&lt;/h2&gt;
&lt;p&gt;æ¬æå°ç»å¶éæä¸äº¤äºå¼ç­å¾ï¼éè¦ä½¿ç¨å°ä»¥ä¸Rååå½æ°ï¼
&lt;code&gt;heatmap()&lt;/code&gt;:ç¨äºç»å¶ç®åç­å¾çå½æ°
&lt;code&gt;heatmap.2()&lt;/code&gt;:ç»å¶å¢å¼ºç­å¾çå½æ°
&lt;code&gt;d3heatmap&lt;/code&gt;:ç¨äºç»å¶äº¤äºå¼ç­å¾çRå
&lt;code&gt;ComplexHeatmap&lt;/code&gt;:ç¨äºç»å¶ãæ³¨éåæåå¤æç­å¾çR&amp;amp;bioconductoråï¼éå¸¸éç¨äºåºå ç»æ°æ®åæï¼&lt;/p&gt;
&lt;h2 id=&#34;æ°æ®åå¤&#34;&gt;æ°æ®åå¤&lt;/h2&gt;
&lt;p&gt;ä½¿ç¨Råç½®æ°æ®é&lt;code&gt;mtcars&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;df &amp;lt;- as.matrix((scale(mtcars)))#å½ä¸åãç©éµå
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ä½¿ç¨åºæ¬å½æ°ç»å¶ç®åç®åç­å¾&#34;&gt;ä½¿ç¨åºæ¬å½æ°ç»å¶ç®åç®åç­å¾&lt;/h2&gt;
&lt;p&gt;ä¸»è¦æ¯å½æ°&lt;code&gt;heatmap(x, scale=&amp;quot;row&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x:æ°æ®ç©éµ&lt;/li&gt;
&lt;li&gt;scaleï¼è¡¨ç¤ºä¸åæ¹åï¼å¯éå¼æï¼row, columa, none&lt;/li&gt;
&lt;li&gt;Default plotheatmap(df, scale = &amp;ldquo;none&amp;rdquo;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141017.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Use custom colors
col &amp;lt;- colorRampPalette(c(&amp;quot;red&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;blue&amp;quot;))(256)
heatmap(df, scale = &amp;quot;none&amp;quot;, col=col)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141034.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Use RColorBrewer color palette names
library(RColorBrewer)col &amp;lt;- colorRampPalette(brewer.pal(10, &amp;quot;RdYlBu&amp;quot;))(256)#èªè®¾ç½®è°è²æ¿dim(df)#æ¥çè¡åæ°
## [1] 32 11
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;heatmap(df, scale = &amp;quot;none&amp;quot;, col=col, RowSideColors = rep(c(&amp;quot;blue&amp;quot;, &amp;quot;pink&amp;quot;), each=16), 
ColSideColors = c(rep(&amp;quot;purple&amp;quot;, 5), rep(&amp;quot;orange&amp;quot;, 6)))
#åæ°RowSideColorsåColSideColorsç¨äºåå«æ³¨éè¡ååé¢è²ç­,å¯help(heatmap)è¯¦æ
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141058.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¢å¼ºç­å¾&#34;&gt;å¢å¼ºç­å¾&lt;/h2&gt;
&lt;p&gt;å½æ°&lt;code&gt;heatmap.2()&lt;/code&gt;
å¨ç­å¾ç»å¶æ¹é¢æä¾è®¸å¤æ©å±ï¼æ­¤å½æ°åè£å¨&lt;code&gt;gplots&lt;/code&gt;åéã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(gplots)heatmap.2(df, scale = &amp;quot;none&amp;quot;, col=bluered(100), 
trace = &amp;quot;none&amp;quot;, density.info = &amp;quot;none&amp;quot;)#è¿æå¶ä»åæ°å¯åèhelp(heatmap.2())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141118.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;äº¤äºå¼ç­å¾ç»å¶&#34;&gt;äº¤äºå¼ç­å¾ç»å¶&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;d3heatmap&lt;/code&gt;åå¯ç¨äºçæäº¤äºå¼ç­å¾ç»å¶,å¯éè¿ä»¥ä¸ä»£ç çæï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (!require(&amp;quot;devtools&amp;quot;)) 
install.packages(&amp;quot;devtools&amp;quot;) 
devtools::install_github(&amp;quot;rstudio/d3heatmap&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Â å½æ°&lt;code&gt;d3heatmap()&lt;/code&gt;ç¨äºåå»ºäº¤äºå¼ç­å¾ï¼æä»¥ä¸åè½ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;å°é¼ æ æ¾å¨æå´è¶£ç­å¾ååæ ¼ä¸ä»¥æ¥çè¡ååç§°åç¸åºå¼&lt;/li&gt;
&lt;li&gt;å¯éæ©åºåè¿è¡ç¼©æ¾&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;library(d3heatmap)d3heatmap(df, colors = &amp;quot;RdBu&amp;quot;, k_row = 4, k_col = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;k_row&lt;/code&gt;ã&lt;code&gt;k_col&lt;/code&gt;åå«æå®ç¨äºå¯¹è¡åä¸­æ å½¢å¾åæ¯è¿è¡çè²æéç»æ°ãè¿ä¸æ­¥ä¿¡æ¯å¯&lt;code&gt;help(d3heatmap())&lt;/code&gt;è·åã&lt;/p&gt;
&lt;h2 id=&#34;ä½¿ç¨dendextendåå¢å¼ºç­å¾&#34;&gt;ä½¿ç¨&lt;code&gt;dendextend&lt;/code&gt;åå¢å¼ºç­å¾&lt;/h2&gt;
&lt;p&gt;è½¯ä»¶å&lt;code&gt;dendextend&lt;/code&gt;å¯ä»¥ç¨äºå¢å¼ºå¶ä»è½¯ä»¶åçåè½&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(dendextend)# order for rows
Rowv &amp;lt;- mtcars %&amp;gt;% scale %&amp;gt;% dist %&amp;gt;% 
hclust %&amp;gt;% as.dendrogram %&amp;gt;%
 set(&amp;quot;branches_k_color&amp;quot;, k = 3) %&amp;gt;% 
set(&amp;quot;branches_lwd&amp;quot;, 1.2) %&amp;gt;% ladderize# Order for columns# 
We must transpose the data
Colv &amp;lt;- mtcars %&amp;gt;% scale %&amp;gt;% t %&amp;gt;% dist %&amp;gt;% 
hclust %&amp;gt;% as.dendrogram %&amp;gt;%
 set(&amp;quot;branches_k_color&amp;quot;, k = 2, value = c(&amp;quot;orange&amp;quot;, &amp;quot;blue&amp;quot;)) %&amp;gt;% set(&amp;quot;branches_lwd&amp;quot;, 1.2) %&amp;gt;% ladderize
å¢å¼ºheatmap()å½æ°
---
heatmap(df, Rowv = Rowv, Colv = Colv, scale = &amp;quot;none&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141153.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¢å¼ºheatmap.2()å½æ°
heatmap.2(df, scale = &amp;quot;none&amp;quot;, col = bluered(100), Rowv = Rowv, Colv = Colv, trace = &amp;quot;none&amp;quot;, density.info = &amp;quot;none&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/2084719-e26e47cd2f8df3c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¢å¼ºäº¤äºå¼ç»å¾å½æ°
d2heatmap()d3heatmap(scale(mtcars), colors = &amp;quot;RdBu&amp;quot;, Rowv = Rowv, Colv = Colv)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ç»å¶å¤æç­å¾&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;ComplexHeatmap&lt;/code&gt;åæ¯&lt;code&gt;bioconductor&lt;/code&gt;åï¼ç¨äºç»å¶å¤æç­å¾ï¼å®æä¾äºä¸ä¸ªçµæ´»çè§£å³æ¹æ¡æ¥å®æåæ³¨éå¤ä¸ªç­å¾ãå®è¿åè®¸å¯è§åæ¥èªä¸åæ¥æºçä¸åæ°æ®ä¹é´çå³èç­å¾ãå¯éè¿ä»¥ä¸ä»£ç å®è£ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Â &#34;&gt;if (!require(&amp;quot;devtools&amp;quot;)) install.packages(&amp;quot;devtools&amp;quot;) 
devtools::install_github(&amp;quot;jokergoo/ComplexHeatmap&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;ComplexHeatmap&lt;/code&gt;åçä¸»è¦åè½å½æ°æ¯&lt;code&gt;Heatmap()&lt;/code&gt;,æ ¼å¼ä¸ºï¼&lt;code&gt;Heatmap(matrix, col, name)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;matrix&lt;/code&gt;ï¼ç©éµ&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col&lt;/code&gt;ï¼é¢è²åéï¼ç¦»æ£è²å½©æ å°ï¼æé¢è²æ å°å½æ°ï¼å¦æç©éµæ¯è¿ç»­æ°ï¼&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;ï¼ç­å¾åç§°&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;library(ComplexHeatmap)
Heatmap(df, name = &amp;quot;mtcars&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141219.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#èªè®¾ç½®é¢è²
library(circlize)
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = colorRamp2(c(-2, 0, 2), c(&amp;quot;green&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141236.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä½¿ç¨è°è²æ¿&#34;&gt;ä½¿ç¨è°è²æ¿&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;,col = colorRamp2(c(-2, 0, 2), brewer.pal(n=3, name=&amp;quot;RdBu&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141254.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#èªå®ä¹é¢è²
mycol &amp;lt;- colorRamp2(c(-2, 0, 2), c(&amp;quot;blue&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#ç­å¾åè¡åæ é¢è®¾ç½®&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, column_title = &amp;quot;Column title&amp;quot;, row_title = 
&amp;quot;Row title&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141310.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ³¨æï¼è¡æ é¢çé»è®¤ä½ç½®æ¯âleftâï¼åæ é¢çé»è®¤æ¯âtopâãå¯ä»¥ä½¿ç¨ä»¥ä¸éé¡¹æ´æ¹ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;row_title_side&lt;/code&gt;ï¼åè®¸çå¼ä¸ºâå·¦âæâå³âï¼ä¾å¦ï¼row_title_side =ârightâï¼&lt;/li&gt;
&lt;li&gt;&lt;code&gt;column_title_side&lt;/code&gt;ï¼åè®¸çå¼ä¸ºâtopâæâbottomâï¼ä¾å¦ï¼column_title_side =âbottomâï¼ ä¹å¯ä»¥ä½¿ç¨ä»¥ä¸éé¡¹ä¿®æ¹å­ä½åå¤§å°ï¼&lt;/li&gt;
&lt;li&gt;&lt;code&gt;row_title_gp&lt;/code&gt;ï¼ç¨äºç»å¶è¡ææ¬çå¾å½¢åæ°&lt;/li&gt;
&lt;li&gt;&lt;code&gt;column_title_gp&lt;/code&gt;ï¼ç¨äºç»å¶åææ¬çå¾å½¢åæ°&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, column_title = &amp;quot;Column title&amp;quot;, 
column_title_gp = gpar(fontsize = 14, fontface = &amp;quot;bold&amp;quot;), 
row_title = &amp;quot;Row title&amp;quot;, row_title_gp = gpar(fontsize = 14, fontface = &amp;quot;bold&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141327.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;å¨ä¸é¢çRä»£ç ä¸­ï¼&lt;code&gt;fontface&lt;/code&gt;çå¯è½å¼å¯ä»¥æ¯æ´æ°æå­ç¬¦ä¸²ï¼1 = plainï¼2 = boldï¼3 =æä½ï¼4 =ç²ä½æä½ãå¦ææ¯å­ç¬¦ä¸²ï¼åææå¼ä¸ºï¼âplainâï¼âboldâï¼âitalicâï¼âobliqueâåâbold.italicâã
æ¾ç¤ºè¡/ååç§°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;show_row_names&lt;/code&gt;ï¼æ¯å¦æ¾ç¤ºè¡åç§°ãé»è®¤å¼ä¸º&lt;code&gt;TRUE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show_column_names&lt;/code&gt;ï¼æ¯å¦æ¾ç¤ºååç§°ãé»è®¤å¼ä¸º&lt;code&gt;TRUE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;, show_row_names = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141342.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æ´æ¹èç±»å¤è§&#34;&gt;æ´æ¹èç±»å¤è§&lt;/h2&gt;
&lt;p&gt;é»è®¤æåµä¸ï¼è¡ååæ¯åå«å¨èç±»éçãå¯ä»¥ä½¿ç¨åæ°ä¿®æ¹ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cluster_rows = FALSE&lt;/code&gt;ãå¦æä¸º&lt;code&gt;TRUE&lt;/code&gt;ï¼åå¨è¡ä¸åå»ºéç¾¤&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cluster_columns = FALSE&lt;/code&gt;ãå¦æ&lt;code&gt;ä¸ºTRUE&lt;/code&gt;ï¼åå°åç½®äºç°ä¸&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# Inactivate cluster on rows
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, cluster_rows = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141403.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¦æè¦æ´æ¹åéç¾¤çé«åº¦æå®½åº¦ï¼å¯ä»¥ä½¿ç¨éé¡¹&lt;code&gt;column_dend_height&lt;/code&gt;
å&lt;code&gt;row_dend_width&lt;/code&gt;ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, column_dend_height = unit(2, &amp;quot;cm&amp;quot;), 
row_dend_width = unit(2, &amp;quot;cm&amp;quot;) )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141419.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æä»¬è¿å¯ä»¥å©ç¨&lt;code&gt;color_branches()&lt;/code&gt;èªå®ä¹æ ç¶å¾å¤è§&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(dendextend)
row_dend = hclust(dist(df)) # row clustering
col_dend = hclust(dist(t(df))) # column clustering
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, cluster_rows = 
color_branches(row_dend, k = 4), cluster_columns = color_branches(col_dend, k = 2))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141433.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¸åçèç±»è·ç¦»è®¡ç®æ¹å¼&#34;&gt;ä¸åçèç±»è·ç¦»è®¡ç®æ¹å¼&lt;/h2&gt;
&lt;p&gt;åæ°&lt;code&gt;clustering_distance_rows&lt;/code&gt;å&lt;code&gt;clustering_distance_columns&lt;/code&gt;
ç¨äºåå«æå®è¡ååèç±»çåº¦éæ åï¼åè®¸çå¼æâ&lt;code&gt;euclidean&lt;/code&gt;â, â&lt;code&gt;maximum&lt;/code&gt;â, â&lt;code&gt;manhattan&lt;/code&gt;â, â&lt;code&gt;canberra&lt;/code&gt;â, â&lt;code&gt;binary&lt;/code&gt;â, â&lt;code&gt;minkowski&lt;/code&gt;â, â&lt;code&gt;pearson&lt;/code&gt;â, â&lt;code&gt;spearman&lt;/code&gt;â, â&lt;code&gt;kendall&lt;/code&gt;âã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;, clustering_distance_rows = &amp;quot;pearson&amp;quot;, 
clustering_distance_columns = &amp;quot;pearson&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141452.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¹å¯ä»¥èªå®ä¹è·ç¦»è®¡ç®æ¹å¼
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, clustering_distance_rows = function(m) dist(m))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141511.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;, clustering_distance_rows = function(x, y) 1 - cor(x, y))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141535.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;è¯·æ³¨æï¼å¨ä¸é¢çRä»£ç ä¸­ï¼éå¸¸ä¸ºæå®è¡èç±»çåº¦éçåæ°  &lt;code&gt;clustering_distance_rows&lt;/code&gt;æ¾ç¤ºç¤ºä¾ãå»ºè®®å¯¹åæ°&lt;code&gt;clustering_distance_columns&lt;/code&gt;ï¼åèç±»çåº¦éæ åï¼ä½¿ç¨ç¸åçåº¦éæ åã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;# Clustering metric function
robust_dist = function(x, y) { 
qx = quantile(x, c(0.1, 0.9)) qy = quantile(y, c(0.1, 0.9)) l = x &amp;gt; qx[1] &amp;amp; x &amp;lt; qx[2] &amp;amp; y 
&amp;gt; qy[1] &amp;amp; y &amp;lt; qy[2] x = x[l] y = y[l] sqrt(sum((x - y)^2))}
# Heatmap
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, clustering_distance_rows = robust_dist, 
clustering_distance_columns = robust_dist, 
col = colorRamp2(c(-2, 0, 2), c(&amp;quot;purple&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;orange&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141606.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;èç±»æ¹æ³&#34;&gt;èç±»æ¹æ³&lt;/h2&gt;
&lt;p&gt;åæ°&lt;code&gt;clustering_method_rows&lt;/code&gt;å&lt;code&gt;clustering_method_columns&lt;/code&gt;å¯ç¨äºæå®è¿è¡å±æ¬¡èç±»çæ¹æ³ãåè®¸çå¼æ¯&lt;code&gt;hclust()&lt;/code&gt;å½æ°æ¯æçå¼ï¼åæ¬âward.Dâï¼âward.D2âï¼âsingleâï¼âcompleteâï¼âaverageâï¼â¦ï¼è§?hclustï¼ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Heatmap(df, name = &amp;quot;mtcars&amp;quot;, clustering_method_rows = &amp;quot;ward.D&amp;quot;, 
clustering_method_columns = &amp;quot;ward.D&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141623.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç­å¾æå&#34;&gt;ç­å¾æå&lt;/h2&gt;
&lt;p&gt;æå¾å¤æ¹æ³æ¥æåç­å¾ãä¸ä¸ªè§£å³æ¹æ¡æ¯åºç¨&lt;code&gt;k-means&lt;/code&gt;ä½¿ç¨åæ°&lt;code&gt;km&lt;/code&gt;ã
å¨æ§è¡&lt;code&gt;k-means&lt;/code&gt;æ¶ä½¿ç¨&lt;code&gt;set.seed()&lt;/code&gt;å½æ°å¾éè¦ï¼è¿æ ·å¯ä»¥å¨ç¨åç²¾ç¡®å°åç°ç»æ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set.seed(1122)
# split into 2 groupsHeatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, k = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141638.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# split by a vector specifying row classesï¼ æç¹ç±»ä¼¼äºggplot2éçåé¢
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, split = mtcars$cyl )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141655.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#splitä¹å¯ä»¥æ¯ä¸ä¸ªæ°æ®æ¡ï¼å¶ä¸­ä¸åçº§å«çç»åæåç­å¾çè¡ã
# Split by combining multiple variables
Heatmap(df, name =&amp;quot;mtcars&amp;quot;, col = mycol, split = data.frame(cyl = mtcars$cyl, am = mtcars$am))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141711.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Combine km and split
Heatmap(df, name =&amp;quot;mtcars&amp;quot;, col = mycol, km = 2, split = mtcars$cyl)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141725.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¹å¯ä»¥èªå®ä¹åå²
library(&amp;quot;cluster&amp;quot;)
set.seed(1122)
pa = pam(df, k = 3)Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, split = paste0(&amp;quot;pam&amp;quot;, 
pa$clustering))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141741.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;è¿å¯ä»¥å°ç¨æ·å®ä¹çæ å½¢å¾ååå²ç¸ç»åãå¨è¿ç§æåµä¸ï¼&lt;code&gt;split&lt;/code&gt;å¯ä»¥æå®ä¸ºåä¸ªæ°å­ï¼&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;row_dend = hclust(dist(df)) # row clusterin
grow_dend = color_branches(row_dend, k = 4)
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, cluster_rows = row_dend, split = 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141800.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç­å¾æ³¨é&#34;&gt;ç­å¾æ³¨é&lt;/h2&gt;
&lt;p&gt;å©ç¨&lt;code&gt;HeatmapAnnotation()&lt;/code&gt;å¯¹è¡æåæ³¨éãæ ¼å¼ä¸ºï¼Â &lt;code&gt;HeatmapAnnotation(df, name, col, show_legend)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dfï¼å¸¦æååçdata.frame&lt;/li&gt;
&lt;li&gt;nameï¼ç­å¾æ æ³¨çåç§°&lt;/li&gt;
&lt;li&gt;colï¼æ å°å°dfä¸­åçé¢è²åè¡¨&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# Transposedf &amp;lt;- t(df)
# Heatmap of the transposed data
Heatmap(df, name =&amp;quot;mtcars&amp;quot;, col = mycol)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141817.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Annotation data frame
annot_df &amp;lt;- data.frame(cyl = mtcars$cyl, am = mtcars$am, mpg = mtcars$mpg)
# Define colors for each levels of qualitative variables
# Define gradient color for continuous variable (mpg)
col = list(cyl = c(&amp;quot;4&amp;quot; = &amp;quot;green&amp;quot;, &amp;quot;6&amp;quot; = &amp;quot;gray&amp;quot;, &amp;quot;8&amp;quot; = &amp;quot;darkred&amp;quot;), am = c(&amp;quot;0&amp;quot; = &amp;quot;yellow&amp;quot;, 
&amp;quot;1&amp;quot; = &amp;quot;orange&amp;quot;), mpg = colorRamp2(c(17, 25), c(&amp;quot;lightblue&amp;quot;, &amp;quot;purple&amp;quot;)) )
# Create the heatmap annotation
ha &amp;lt;- HeatmapAnnotation(annot_df, col = col)
# Combine the heatmap and the annotation
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, top_annotation = ha)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141835.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯ä»¥ä½¿ç¨åæ°show_legend = FALSEæ¥éèæ³¨éå¾ä¾
ha &amp;lt;- HeatmapAnnotation(annot_df, col = col, show_legend = FALSE)
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, top_annotation = ha)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141851.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ³¨éåç§°å¯ä»¥ä½¿ç¨ä¸é¢çRä»£ç æ·»å 
library(&amp;quot;GetoptLong&amp;quot;)
# Combine Heatmap and annotation
ha &amp;lt;- HeatmapAnnotation(annot_df, col = col, show_legend = FALSE)
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, top_annotation = ha)
# Add annotation names on the right
for(an in colnames(annot_df)) { 
seekViewport(qq(&amp;quot;annotation_@{an}&amp;quot;)) 
grid.text(an, unit(1, &amp;quot;npc&amp;quot;) + unit(2, &amp;quot;mm&amp;quot;), 0.5, default.units = &amp;quot;npc&amp;quot;, just = &amp;quot;left&amp;quot;)}
#è¦å¨å·¦ä¾§æ·»å æ³¨éåç§°ï¼è¯·ä½¿ç¨ä»¥ä¸ä»£ç 
# Annotation names on the left
for(an in colnames(annot_df)) { seekViewport(qq(&amp;quot;annotation_@{an}&amp;quot;)) grid.text(an, 
unit(1, &amp;quot;npc&amp;quot;) - unit(2, &amp;quot;mm&amp;quot;), 0.5, default.units = &amp;quot;npc&amp;quot;, just = &amp;quot;left&amp;quot;)}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141909.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¤ææ³¨é&#34;&gt;å¤ææ³¨é&lt;/h2&gt;
&lt;p&gt;å°ç­å¾ä¸ä¸äºåºæ¬å¾å½¢ç»åèµ·æ¥è¿è¡æ³¨éï¼å©ç¨&lt;code&gt;anno_point()&lt;/code&gt;,&lt;code&gt;anno_barplot()&lt;/code&gt;
,&lt;code&gt;anno_boxplot()&lt;/code&gt;,&lt;code&gt;anno_density()&lt;/code&gt;å&lt;code&gt;anno_histogram()&lt;/code&gt;ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Define some graphics to display the distribution of columns
.hist = anno_histogram(df, gp = gpar(fill = &amp;quot;lightblue&amp;quot;))
.density = anno_density(df, type = &amp;quot;line&amp;quot;, gp = gpar(col = &amp;quot;blue&amp;quot;))
ha_mix_top = HeatmapAnnotation(hist = .hist, density = .density)
# Define some graphics to display the distribution of rows
.violin = anno_density(df, type = &amp;quot;violin&amp;quot;, gp = gpar(fill = &amp;quot;lightblue&amp;quot;), which = &amp;quot;row&amp;quot;)
.boxplot = anno_boxplot(df, which = &amp;quot;row&amp;quot;)
ha_mix_right = HeatmapAnnotation(violin = .violin, bxplt = .boxplot, which = &amp;quot;row&amp;quot;, 
width = unit(4, &amp;quot;cm&amp;quot;))
# Combine annotation with heatmap
Heatmap(df, name = &amp;quot;mtcars&amp;quot;, col = mycol, column_names_gp = gpar(fontsize = 8), 
top_annotation = ha_mix_top, top_annotation_height = unit(4, &amp;quot;cm&amp;quot;)) + ha_mix_right
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141927.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç­å¾ç»å&#34;&gt;ç­å¾ç»å&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Heatmap 1
ht1 = Heatmap(df, name = &amp;quot;ht1&amp;quot;, col = mycol, km = 2, column_names_gp = gpar(fontsize = 9))
# Heatmap 2
ht2 = Heatmap(df, name = &amp;quot;ht2&amp;quot;, col = colorRamp2(c(-2, 0, 2), c(&amp;quot;green&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;)), column_names_gp = gpar(fontsize = 9))
# Combine the two heatmaps
ht1 + ht2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141943.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;å¯ä»¥ä½¿ç¨éé¡¹width = unitï¼3ï¼âcmâï¼ï¼æ¥æ§å¶ç­å¾å¤§å°ãæ³¨æï¼å½ç»åå¤ä¸ªç­å¾æ¶ï¼ç¬¬ä¸ä¸ªç­å¾è¢«è§ä¸ºä¸»ç­å¾ãå©ä½ç­å¾çä¸äºè®¾ç½®æ ¹æ®ä¸»ç­å¾çè®¾ç½®èªå¨è°æ´ãè¿äºè®¾ç½®åæ¬ï¼å é¤è¡éç¾¤åæ é¢ï¼ä»¥åæ·»å æåç­ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;draw(ht1 + ht2, 
      # Titles 
     row_title = &amp;quot;Two heatmaps, row title&amp;quot;,
     row_title_gp = gpar(col = &amp;quot;red&amp;quot;), 
     column_title = &amp;quot;Two heatmaps, column title&amp;quot;, 
     column_title_side = &amp;quot;bottom&amp;quot;, 
      # Gap between heatmaps 
     gap = unit(0.5, &amp;quot;cm&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819141958.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¯ä»¥ä½¿ç¨åæ°&lt;code&gt;show_heatmap_legend = FALSE&lt;/code&gt;ï¼&lt;code&gt;show_annotation_legend = FALSE&lt;/code&gt;å é¤å¾ä¾ã&lt;/p&gt;
&lt;h2 id=&#34;åºå è¡¨è¾¾ç©éµ&#34;&gt;åºå è¡¨è¾¾ç©éµ&lt;/h2&gt;
&lt;p&gt;å¨åºå è¡¨è¾¾æ°æ®ä¸­ï¼è¡ä»£è¡¨åºå ï¼åæ¯æ ·åå¼ãå³äºåºå çæ´å¤ä¿¡æ¯å¯ä»¥å¨è¡¨è¾¾ç­å¾ä¹åéå ï¼ä¾å¦åºå é¿åº¦ååºå ç±»åã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;expr = readRDS(paste0(system.file(package = &amp;quot;ComplexHeatmap&amp;quot;), &amp;quot;/extdata/gene_expression.rds&amp;quot;))
mat = as.matrix(expr[, grep(&amp;quot;cell&amp;quot;, colnames(expr))])
type = gsub(&amp;quot;s\\d+_&amp;quot;, &amp;quot;&amp;quot;, colnames(mat))
ha = HeatmapAnnotation(df = data.frame(type = type))
Heatmap(mat, name = &amp;quot;expression&amp;quot;, km = 5, top_annotation = ha, top_annotation_height = unit(4, &amp;quot;mm&amp;quot;), 
show_row_names = FALSE, show_column_names = FALSE) +
Heatmap(expr$length, name = &amp;quot;length&amp;quot;, width = unit(5, &amp;quot;mm&amp;quot;), col = colorRamp2(c(0, 100000), c(&amp;quot;white&amp;quot;, &amp;quot;orange&amp;quot;))) +
Heatmap(expr$type, name = &amp;quot;type&amp;quot;, width = unit(5, &amp;quot;mm&amp;quot;)) +
Heatmap(expr$chr, name = &amp;quot;chr&amp;quot;, width = unit(5, &amp;quot;mm&amp;quot;), col = rand_color(length(unique(expr$chr))))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/2084719-076503522b98e6a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34; alt=&#34;&#34;&gt;
ä¹å¯ä»¥å¯è§ååºå ç»åååæ´åä¸åçåå­æ°´å¹³ï¼åºå è¡¨è¾¾ï¼DNAç²åºåï¼â¦ï¼&lt;/p&gt;
&lt;h2 id=&#34;å¯è§åç©éµä¸­åçåå¸&#34;&gt;å¯è§åç©éµä¸­åçåå¸&lt;/h2&gt;
&lt;p&gt;ä½¿ç¨å½æ°&lt;code&gt;densityHeatmap()&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;densityHeatmap(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819142019.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;infos&#34;&gt;Infos&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
## R version 3.3.3 (2017-03-06)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 8.1 x64 (build 9600)## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936 
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C 
## [5] LC_TIME=Chinese (Simplified)_China.936 ##
 ## attached base packages:
## [1] grid stats graphics grDevices utils datasets methods 
## [8] base 
## 
## other attached packages:
## [1] GetoptLong_0.1.6 cluster_2.0.5 circlize_0.3.10 
## [4] ComplexHeatmap_1.12.0 dendextend_1.4.0 d3heatmap_0.6.1.1
##[7] gplots_3.0.1 RColorBrewer_1.1-2 
## 
## loaded via a namespace (and not attached):
## [1] Rcpp_0.12.9 DEoptimR_1.0-8 plyr_1.8.4 
## [4] viridis_0.3.4 class_7.3-14 prabclus_2.2-6 
## [7] bitops_1.0-6 base64enc_0.1-3 tools_3.3.3 
## [10] digest_0.6.12 mclust_5.2.2 jsonlite_1.3 
## [13] evaluate_0.10 tibble_1.2 gtable_0.2.0 
## [16] lattice_0.20-34 png_0.1-7 yaml_2.1.14 
## [19] mvtnorm_1.0-6 gridExtra_2.2.1 trimcluster_0.1-2 
## [22] stringr_1.2.0 knitr_1.15.1 GlobalOptions_0.0.11
## [25] htmlwidgets_0.8 gtools_3.5.0 caTools_1.17.1 
## [28] fpc_2.1-10 diptest_0.75-7 nnet_7.3-12 
## [31] stats4_3.3.3 rprojroot_1.2 robustbase_0.92-7 
## [34] flexmix_2.3-13 rmarkdown_1.3.9002 gdata_2.17.0 
## [37] kernlab_0.9-25 ggplot2_2.2.1 magrittr_1.5 
## [40] whisker_0.3-2 backports_1.0.5 scales_0.4.1 
## [43] htmltools_0.3.5 modeltools_0.2-21 MASS_7.3-45
## [46] assertthat_0.1 shape_1.4.2 colorspace_1.3-2 
## [49] KernSmooth_2.23-15 stringi_1.1.2 lazyeval_0.2.0 
## [52] munsell_0.4.3 rjson_0.2.15
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ggplot2å­¦ä¹ ç¬è®°ç³»åä¹å©ç¨ggplot2ç»å¶æ£ç¹å¾</title>
      <link>https://taoyan.netlify.app/post/2017-06-11.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</link>
      <pubDate>Wed, 12 Jul 2017 07:47:05 +0000</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-11.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153139.png&#34; alt=&#34;&#34;&gt;
1Â ç®ä»
æ£ç¹å¾éå¸¸ç¨æ¥å»ç»ä¸¤ä¸ªè¿ç»­ååéä¹é´çå³ç³»ãç»å¶æ£ç¹å¾æ¶æ°æ®éä¸­çæ¯ä¸ä¸ªè§æµå¼é½ç±æ£ç¹å¾ä¸­çä¸ä¸ªç¹æ¥è¡¨ç¤ºãå©ç¨å&lt;strong&gt;ggplot2&lt;/strong&gt;å¯ä»¥ç»å¶ååæ¼äº®çæ£ç¹å¾ã å©ç¨&lt;strong&gt;ggplot2&lt;/strong&gt;ç»å¾ååç¡®ä¿æä»¬æä½¿ç¨çæ°æ®éæ¯&lt;strong&gt;data.frame&lt;/strong&gt;å½¢å¼ã&lt;strong&gt;ggplot2&lt;/strong&gt;ç»å¾å©ç¨æ å°å°æ°æ®èµäºç»åæ è½´ä¸è¿èæ·»å å ä½å¯¹è±¡å½¢æå¾å½¢ãç»å¾ååå è½½å&lt;strong&gt;ggplot2&lt;/strong&gt;Â å³&lt;strong&gt;library(ggplot2)&lt;/strong&gt;ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Load packages
library(ggplot2)#visualization
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å è½½å®åä¹åï¼æ¬æå©ç¨æ°æ®é&lt;strong&gt;mtcars&lt;/strong&gt;æ¥æ¼ç¤ºæ£ç¹å¾ç»å¶ã åæ¥çæ°æ®éçåå è¡æ¥äºè§£&lt;strong&gt;mtcars&lt;/strong&gt;æ°æ®éã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#check data
head(mtcars)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2Â ç»å¶ç®åçæ£ç¹å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg)) + geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153152.png&#34; alt=&#34;&#34;&gt;
2.1Â &lt;strong&gt;shape&lt;/strong&gt;åæ°ä¿®æ¹å¾å½¢çå½¢ç¶
&lt;strong&gt;å¯éç¹å¾å½¢å½¢ç¶&lt;/strong&gt;:Â 
&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153204.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg)) +geom_point(shape=17)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.2Â &lt;strong&gt;size&lt;/strong&gt;åæ°ä¿®æ¹ç¹çå¤§å°&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data = mtcars, aes(x=wt, y=mpg))+geom_point(size=5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153215.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.3Â &lt;strong&gt;color&lt;/strong&gt;åæ°ä¿®æ¹ç¹çé¢è²&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg))+geom_point(color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153227.png&#34; alt=&#34;&#34;&gt;
3Â ç»å¶åç»çæ£ç¹å¾
å¯å°åç»åéï¼å å­æå­ç¬¦åéï¼å¯éè¿**factor()**å¼ºå¶æ§å°éå å­åéè½¬ä¸ºå å­åéï¼èµå¼ç»é¢è²ææ§ç¶å±æ§ï¼å®ç°åç»æ£ç¹å¾çç»å¶ã
3.1Â é¦åå°æ°å¼ååé&lt;code&gt;cyl&lt;/code&gt;è½¬æ¢ä¸ºå å­ååé&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mtcars$cyl &amp;lt;- factor(mtcars$cyl)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.2Â åç»åéèµå¼ç»é¢è²å±æ§(åéèµå¼å¿é¡»å¨aeséé¢)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg, color=cyl))+geom_point(size=3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153238.png&#34; alt=&#34;&#34;&gt;
3.3Â åç»åéèµå¼ç»æ§ç¶å±æ§&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg, shape=cyl))+geom_point(size=3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153249.png&#34; alt=&#34;&#34;&gt;
å¦æå¯¹Rè¯­è¨é»è®¤çé¢è²æèå½¢ç¶ä¸æ»¡æï¼å¯ä»¥éè¿&lt;code&gt;scale_color_brewer()&lt;/code&gt;æè&lt;code&gt;scale_color_manual()&lt;/code&gt;å½æ°èªå®ä¹ç¹çé¢è²ä»¥å&lt;code&gt;scale_shape_manual()&lt;/code&gt;å½æ°èªå®ä¹ç¹çå½¢ç¶ã ä¸é¢æä»¬å°åç»åé&lt;strong&gt;cyl&lt;/strong&gt;åæ¶èµå¼ç»é¢è²åå½¢ç¶å±æ§ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg, color=cyl, shape= cyl))+
geom_point(size=3)+ scale_color_brewer(palette = &amp;quot;Accent&amp;quot;)+
scale_shape_manual(values = c(2, 9, 16))#Accentæ¯ä¸è°è²æ¿ï¼å¯éç¹çå½¢ç¶è§ä¸
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153300.png&#34; alt=&#34;&#34;&gt;
4Â å°è¿ç»­åéæ å°ç»é¢è²ãå¤§å°åå½¢ç¶ç­å±æ§
4.1Â å°è¿ç»­æ§åédispæ å°ç»é¢è²å±æ§&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg, color=disp))+geom_point(size=3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä»å¾ä¸­å¯ä»¥åç°å¼è¶å¤§å¯¹åºçé¢è²è¶æµï¼ä»¥ä¸æ¯éè¿äººä¸ºè®¾ç½®è²é¶ä½¿å¼å¤§å°ä¸é¢è²æ·±æµä¿æä¸è´&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg, color=disp))+
geom_point(size=3)+ scale_color_gradient(low=&amp;quot;lightblue&amp;quot;, high=&amp;quot;darkblue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153314.png&#34; alt=&#34;&#34;&gt;
4.2Â å°è¿ç»­æ§åédispæ å°ç»å¤§å°å±æ§&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=mtcars, aes(x=wt, y=mpg, size=disp))+geom_point(color=&amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153324.png&#34; alt=&#34;&#34;&gt;
5Â éå ç¹çå¤ç
å½æ°æ®ééå¸¸å¤§æ¶ï¼ä¼å¯¼è´æ°æ®éå ç¹éå¸¸ä¸¥éï¼å¯éè¿ä½¿ç¨åéæçç¹é¿åã&lt;strong&gt;alpha&lt;/strong&gt;åæ°æ§å¶ç¹çéæåº¦ãä¸é¢å©ç¨æ°æ®é&lt;strong&gt;diamonds&lt;/strong&gt;æ¥æ¼ç¤ºã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#check data
head(diamonds)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;#æªä½¿ç¨éæç¹å¤ç
ggplot(data=diamonds, aes(x=carat, y=price))+geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153336.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä½¿ç¨alphaåæ°è°æ´ç¹éæåº¦
ggplot(data=diamonds, aes(x=carat, y=price))+geom_point(alpha=0.1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153347.png&#34; alt=&#34;&#34;&gt;
6Â ä¸ºæ£ç¹å¾æ·»å æåæ²çº¿&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä½¿ç¨æ°æ®émtcars
ggplot(data=mtcars, aes(x=wt, y=mpg))+geom_point()+stat_smooth(method=&amp;quot;lm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153359.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¹å¯ä»¥å»é¤ææåæ²çº¿çç½®ä¿¡åºé´
ggplot(data=mtcars, aes(x=wt, y=mpg))+geom_point()+stat_smooth(method=&amp;quot;lm&amp;quot;, se=FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153412.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¹å¯ä»¥éå¯¹ä¸åç±»åçcylæ¥è¿è¡æå
ggplot(data=mtcars, aes(x=wt, y=mpg, color=cyl))+
geom_point()+stat_smooth(method=&amp;quot;lm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153423.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ggplot2å­¦ä¹ ç¬è®°ç³»åä¹ä¸»é¢ï¼themeï¼è®¾ç½®</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E4%B8%BB%E9%A2%98theme%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E4%B8%BB%E9%A2%98theme%E8%AE%BE%E7%BD%AE/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153552.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸æ¬¡æäºä¸&lt;code&gt;theme()&lt;/code&gt;,æ¬æå°ä¸é¨è®²è§£ä¸ä¸ãå¡æ¯ä¸æ°æ®æ å³çå¾å½¢è®¾ç½®å¯ä»¥å½ä¸ºä¸»é¢ç±»ï¼&lt;strong&gt;ggplot2&lt;/strong&gt;ä¸­ä¸»é¢è®¾ç½®ååå¤ï¼æ ¹æ¬ä¸å¯è½è®²è§£å®ï¼åªè½ç¨å¾®è®²ç¹ç®æ¯ï¼çµæ´»è¿ç¨ææ¯å³é®ï¼æ¬æåªæ¯æ»ä½ä¸ç¥ä½ä»ç»ãæ­£å¦Rè¯­è¨å¤§ç¥&lt;strong&gt;Hadley Wickham&lt;/strong&gt;æè®²çï¼&lt;strong&gt;ggplot2&lt;/strong&gt;åªæ¯æä¾äºä¸ä¸ªå¹³å°ï¼å¯ä»¥æ ¹æ®èªå·±çéè¦æ éåé ãçè®ºä¸æ¥è®²ï¼åªè¦è½æ³å°çå¾å½¢ï¼&lt;strong&gt;ggplot2&lt;/strong&gt;é½è½å®ç°ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggplot2)
#æä»¬åæ¥ççggplot2é»è®¤çä¸»é¢è®¾ç½®å½æ°theme_gray()çæºä»£ç 
theme_gray#å½æ°åä¸å æ¬å·å¯è·å¾å½æ°æºä»£ç 

## function (base_size = 11, base_family = &amp;quot;&amp;quot;) 
## {
## half_line &amp;lt;- base_size/2
## theme(line = element_line(colour = &amp;quot;black&amp;quot;, size = 0.5, linetype = 1, 
## lineend = &amp;quot;butt&amp;quot;), rect = element_rect(fill = &amp;quot;white&amp;quot;, 
## colour = &amp;quot;black&amp;quot;, size = 0.5, linetype = 1), text = element_text(family = base_family, 
## face = &amp;quot;plain&amp;quot;, colour = &amp;quot;black&amp;quot;, size = base_size, lineheight = 0.9, 
## hjust = 0.5, vjust = 0.5, angle = 0, margin = margin(), 
## debug = FALSE), axis.line = element_blank(), axis.line.x = NULL, 
## axis.line.y = NULL, axis.text = element_text(size = rel(0.8),
## colour = &amp;quot;grey30&amp;quot;), axis.text.x = element_text(margin = margin(t = 0.8 * 
## half_line/2), vjust = 1), axis.text.x.top = element_text(margin = margin(b = 0.8 * ## half_line/2), vjust = 0), axis.text.y = element_text(margin = margin(r = 0.8 * 
## half_line/2), hjust = 1), axis.text.y.right = element_text(margin = margin(l = 0.8 * ## half_line/2), hjust = 0), axis.ticks = element_line(colour = &amp;quot;grey20&amp;quot;), 
## axis.ticks.length = unit(half_line/2, &amp;quot;pt&amp;quot;), axis.title.x = element_text(margin = margin(t = half_line), 
## vjust = 1), axis.title.x.top = element_text(margin = margin(b = half_line), 
## vjust = 0), axis.title.y = element_text(angle = 90, 
## margin = margin(r = half_line), vjust = 1), axis.title.y.right = element_text(angle = -90, 
## margin = margin(l = half_line), vjust = 0), legend.background = element_rect(colour = NA), 
## legend.spacing = unit(0.4, &amp;quot;cm&amp;quot;), legend.spacing.x = NULL, 
## legend.spacing.y = NULL, legend.margin = margin(0.2, 
## 0.2, 0.2, 0.2, &amp;quot;cm&amp;quot;), legend.key = element_rect(fill = &amp;quot;grey95&amp;quot;, 
## colour = &amp;quot;white&amp;quot;), legend.key.size = unit(1.2, &amp;quot;lines&amp;quot;), 
## legend.key.height = NULL, legend.key.width = NULL, legend.text = element_text(size = rel(0.8)), 
## legend.text.align = NULL, legend.title = element_text(hjust = 0), 
## legend.title.align = NULL, legend.position = &amp;quot;right&amp;quot;, 
## legend.direction = NULL, legend.justification = &amp;quot;center&amp;quot;, 
## legend.box = NULL, legend.box.margin = margin(0, 0, 0, 
## 0, &amp;quot;cm&amp;quot;), legend.box.background = element_blank(),
## legend.box.spacing = unit(0.4, &amp;quot;cm&amp;quot;), panel.background = element_rect(fill = &amp;quot;grey92&amp;quot;, 
## colour = NA), panel.border = element_blank(), panel.grid.major = element_line(colour = &amp;quot;white&amp;quot;), 
## panel.grid.minor = element_line(colour = &amp;quot;white&amp;quot;, size = 0.25), 
## panel.spacing = unit(half_line, &amp;quot;pt&amp;quot;), panel.spacing.x = NULL, 
## panel.spacing.y = NULL, panel.ontop = FALSE, strip.background = element_rect(fill = &amp;quot;grey85&amp;quot;, 
## colour = NA), strip.text = element_text(colour = &amp;quot;grey10&amp;quot;, 
## size = rel(0.8)), strip.text.x = element_text(margin = margin(t = half_line, 
## b = half_line)), strip.text.y = element_text(angle = -90, 
## margin = margin(l = half_line, r = half_line)), strip.placement = &amp;quot;inside&amp;quot;, 
## strip.placement.x = NULL, strip.placement.y = NULL, strip.switch.pad.grid = unit(0.1, 
## &amp;quot;cm&amp;quot;), strip.switch.pad.wrap = unit(0.1, &amp;quot;cm&amp;quot;), plot.background = element_rect(colour = &amp;quot;white&amp;quot;), 
## plot.title = element_text(size = rel(1.2), hjust = 0, 
## vjust = 1, margin = margin(b = half_line * 1.2)), 
## plot.subtitle = element_text(size = rel(0.9), hjust = 0, 
## vjust = 1, margin = margin(b = half_line * 0.9)),
## plot.caption = element_text(size = rel(0.9), hjust = 1, 
## vjust = 1, margin = margin(t = half_line * 0.9)),
## plot.margin = margin(half_line, half_line, half_line, 
## half_line), complete = TRUE)
## }
## &amp;lt;environment: namespace:ggplot2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;å¯ä»¥çåºï¼æºä»£ç ä¸»è¦æ¯&lt;code&gt;theme()&lt;/code&gt;å½æ°ï¼è®¾ç½®ä¹å¾ç®åï¼&lt;code&gt;theme(..., complete = FALSE)&lt;/code&gt;,ä½æ¯å¶åå«çåæ°åååå¤ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153612.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153623.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å ä¹ææåç´ å¨&lt;code&gt;theme()&lt;/code&gt;éé½ä½¿ç¨&lt;code&gt;element_line&lt;/code&gt;ï¼&lt;code&gt;element_rect&lt;/code&gt;ï¼&lt;code&gt;element_text&lt;/code&gt;å&lt;code&gt;element_blank&lt;/code&gt;å½æ°è®¾ç½®. ä¸é¢å°±ä¸¾ä¾ç¨å¾®è®²è§£ä¸ä¸&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å©ç¨æ°æ®émtcarsæ¼ç¤ºhead(mtcars)
#ååå»ºpå¾å±
p&amp;lt;- ggplot(data=mtcars, aes(x=wt, y=mpg))+
geom_point(aes(color=factor(cyl)))#åè¯è¯å¾ä¾ä¿®æ¹
p+theme(legend.position = &amp;quot;none&amp;quot;)#æ å¾ä¾
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153635.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+theme(legend.position = &amp;quot;bottom&amp;quot;)#å¾ä¾å¨åºé¨
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153645.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¹å¯ä»¥èªå®ä¹
p+theme(legend.position = c(0.5, 0.7))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153658.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¸ºå¾ä¾å è¾¹ç
p+theme(legend.background = element_rect(color=&amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153709.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æèä¸ºå¾ä¾ä¸­çæ¯ä¸ªåç´ è¿è¡è®¾ç½®ï¼å¦å è¾¹ç
p+theme(legend.key =element_rect(color=&amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153718.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#è¿è¡å¡«å
p+theme(legend.key = element_rect(fill=&amp;quot;yellow&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153728.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¾ä¾åå®¹å­ä½å¤§å°ãé¢è²ãè§åº¦ç­è®¾ç½®
p+theme(legend.text = element_text(size=25, color=&amp;quot;darkred&amp;quot;, angle=45))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153739.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¸ºå¾ä¾æ é¢è®¾ç½®å­ä½ãé¢è²ãå¤§å°ç­
p+theme(legend.title = element_text(face=&amp;quot;italic&amp;quot;, size=25, color=&amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153749.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ¥ä¸æ¥æ¯åæ ä»¥åç½æ ¼ç­çèªå®ä¹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¿®æ¹èæ¯é¢è²
p+theme(panel.background = element_rect(fill=&amp;quot;black&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153800.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¿®æ¹è¾¹ççº¿ç±»åãé¢è²
p+theme(panel.border = element_rect(linetype = &amp;quot;dashed&amp;quot;, color=&amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153812.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¿®æ¹ç½æ ¼çº¿p+theme(panel.grid.major = element_line(color=&amp;quot;blue&amp;quot;, size= 3))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153821.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+theme(panel.grid.minor = element_line(linetype = &amp;quot;dotted&amp;quot;, color=&amp;quot;red&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153832.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;è¿å¯ä»¥ä¿®æ¹xãyè½´ç­ï¼è¿éæå¾è®²äºï¼æå´è¶£çå¯ä»¥èªå·±æ£é¼æ£é¼&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;äºè§£&lt;code&gt;theme&lt;/code&gt;ä¹åå°±å¯ä»¥èªå·±å®ä¹èªå·±çä¸»é¢ï¼ä»¥åä½å¾å°±ç´æ¥åæ ¼å¼å·ä¸æ ·å°±è¡&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¸é¢æ¯ææ¯è¾å¸¸ç¨çä¸»é¢ï¼ç»å¾æ¶å·ä¸ä¸å°±è¡äº
windowsFonts(CA=windowsFont(&amp;quot;Calibri&amp;quot;))
mytheme &amp;lt;- theme_bw()+
theme(legend.position = &#39;top&#39;, panel.border = element_blank(), 
panel.grid.major = element_line(linetype = &#39;dashed&#39;), panel.grid.minor = 
element_blank(), legend.text = element_text(size=9,color=&#39;#003087&#39;,family = &amp;quot;CA&amp;quot;), 
plot.title = element_text(size=15,color=&amp;quot;#003087&amp;quot;,family = &amp;quot;CA&amp;quot;), legend.key = 
element_blank(), axis.text = element_text(size=10,color=&#39;#003087&#39;,family = &amp;quot;CA&amp;quot;), 
strip.text = element_text(size=12,color=&amp;quot;#EF0808&amp;quot;,family = &amp;quot;CA&amp;quot;), 
strip.background = element_blank())
pie_theme &amp;lt;- mytheme+
theme(axis.text = element_blank(), axis.ticks = element_blank(), axis.title = 
element_blank(), panel.grid.major = element_blank())
myline_blue &amp;lt;- geom_line(color=&amp;quot;#085A9C&amp;quot;, size=2)
myline_red &amp;lt;- geom_line(color=&amp;quot;#EF0808&amp;quot;,size=2)
myarea &amp;lt;- geom_area(color=NA,fill=&amp;quot;#003087&amp;quot;,alpha=0.2)
mypoint &amp;lt;- geom_point(size=3,shape=21,color=&amp;quot;#003087&amp;quot;,fill=&amp;quot;white&amp;quot;)
mybar &amp;lt;- geom_bar(fill=&amp;quot;#0C8DC4&amp;quot;,stat = &amp;quot;identity&amp;quot;)
mycolor_3 &amp;lt;- scale_fill_manual(values = c(&amp;quot;#085A9C&amp;quot;,&amp;quot;#EF0808&amp;quot;,&amp;quot;#526373&amp;quot;))
mycolor_7 &amp;lt;- scale_fill_manual(values=c (&amp;quot;#085A9C&amp;quot;,&amp;quot;#EF0808&amp;quot;,&amp;quot;#526373&amp;quot;,&amp;quot;#FFFFE7&amp;quot;,&amp;quot;#FF9418&amp;quot;,&amp;quot;#219431&amp;quot;,&amp;quot;#9C52AD&amp;quot;))
mycolor_line_7 &amp;lt;- scale_color_manual(values=c (&amp;quot;#085A9C&amp;quot;,&amp;quot;#EF0808&amp;quot;,&amp;quot;#526373&amp;quot;,&amp;quot;#FFFFE7&amp;quot;,&amp;quot;#FF9418&amp;quot;,&amp;quot;#219431&amp;quot;,&amp;quot;#9C52AD&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;#å¯ä»¥æ¥å·ä¸å·#éä¾¿å»ºä¸ªæ°æ®é
x &amp;lt;-rep(1:5, each = 3)
y &amp;lt;-rep(c(&#39;A&#39;,&#39;B&#39;,&#39;C&#39;),times = 5)
set.seed(1111)
z &amp;lt;-round(runif(min = 10, max = 30, n = 15))
df &amp;lt;-data.frame(x = x, y = y, z = z)
head(df)
##   x   y   z
## 1 1   A   19
## 2 1   B   18
## 3 1   C   28
## 4 2   A   13
## 5 2   B   25
## 6 2   C   30

#æ±å½¢å¾
(p1 &amp;lt;- ggplot(data=df, aes(x=factor(x), y=z, fill=y))+
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;)+
ggtitle(&amp;quot;èªå®ä¹ä¸»é¢themeå¹¶åºç¨å®è·µ&amp;quot;))+
xlab(&amp;quot;éä¾¿å®ä¹äºä¸ªx&amp;quot;)+ylab(&amp;quot;éæºæ°&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153846.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p1+mytheme
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153857.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p1+mytheme+mycolor_7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153908.png&#34; alt=&#34;&#34;&gt;
è¿æçº¿å¾ãé¥¼å¾ç­æå´è¶£çä¹å¯ä»¥èªå·±å·ä¸å·ï¼ä½ ä¼åç°&lt;strong&gt;ggplot2&lt;/strong&gt;çé­åæå¨å°±æ¯å®æ¥ææ ç©·çå¯è½æ§ã&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ggplot2å­¦ä¹ ç¬è®°ç³»åä¹å©ç¨ggplot2ç»å¶è¯¯å·®æ£åæ¾èæ§æ è®°</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E8%AF%AF%E5%B7%AE%E6%A3%92%E5%8F%8A%E6%98%BE%E8%91%97%E6%80%A7%E6%A0%87%E8%AE%B0/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E8%AF%AF%E5%B7%AE%E6%A3%92%E5%8F%8A%E6%98%BE%E8%91%97%E6%80%A7%E6%A0%87%E8%AE%B0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145522.png&#34; alt=&#34;&#34;&gt;
ç»å¶å¸¦æè¯¯å·®æ£çæ¡å½¢å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggplot2)
#åå»ºæ°æ®é
df &amp;lt;- data.frame(treatment = factor(c(1, 1, 1, 2, 2, 2, 3, 3, 3)), 
                 response = c(2, 5, 4, 6, 9, 7, 3, 5, 8), 
                 group = factor(c(1, 2, 3, 1, 2, 3, 1, 2, 3)), 
                 se = c(0.4, 0.2, 0.4, 0.5, 0.3, 0.2, 0.4, 0.6, 0.7))
head(df) #æ¥çæ°æ®é

##   treatment response group  se
## 1    1         2       1    0.4
## 2    1         5       2    0.2
## 3    1         4       3    0.4
## 4    2         6       1    0.5
## 5    2         9       2    0.3
## 6    2         7       3    0.2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;# ä½¿ç¨geom_errorbar()ç»å¶å¸¦æè¯¯å·®æ£çæ¡å½¢å¾
# è¿éä¸å®è¦æ³¨æpositionè¦ä¸`geom_bar()`ä¿æä¸è´ï¼ç±äºç³»ç»é»è®¤dodgeæ¯0.9ï¼
# å æ­¤geom_errorbar()éé¢positionéè¦è®¾ç½®0.9ï¼widthè®¾ç½®è¯¯å·®æ£çå¤§å°
ggplot(data = df, aes(x = treatment, y = response, fill = group)) + 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) + 
geom_errorbar(aes(ymax = response + se, ymin = response -  se), 
position = position_dodge(0.9), width = 0.15) + 
scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145536.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç»å¶å¸¦ææ¾èæ§æ è®°çæ¡å½¢å¾&#34;&gt;ç»å¶å¸¦ææ¾èæ§æ è®°çæ¡å½¢å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;label &amp;lt;- c(&amp;quot;&amp;quot;, &amp;quot;*&amp;quot;, &amp;quot;**&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;**&amp;quot;, &amp;quot;*&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;*&amp;quot;) #è¿ééä¾¿è®¾ç½®çæ¾èæ§ï¼è¿æabcdefç­æ¾èæ§æ è®°ç¬¦å·ï¼åçä¸æ ·ï¼è¿éä¸åéå¤ã
# æ·»å æ¾èæ§æ è®°è·ä¸æ¬¡è®²çæ·»å æ°æ®æ ç­¾æ¯ä¸æ ·çï¼è¿éæä»¬åè®¾1æ¯å¯¹ç§
ggplot(data = df, aes(x = treatment, y = response, fill = group)) + 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) + 
geom_errorbar(aes(ymax = response + se, ymin = response -  se), 
position = position_dodge(0.9), width = 0.15) + 
geom_text(aes(y = response +  1.5 * se, label = label, group = group), 
position = position_dodge(0.9), size = 5, fontface = &amp;quot;bold&amp;quot;) + 
scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;) #è¿éçlabelå°±æ¯åæè®¾ç½®çï¼groupæ¯æ°æ®éä¸­çï¼fontfaceè®¾ç½®å­ä½ã
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145549.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç»å¶ä¸¤æ¡å½¢å¾ä¸­é´å¸¦ææå·çç»è®¡å¾&#34;&gt;ç»å¶ä¸¤æ¡å½¢å¾ä¸­é´å¸¦ææå·çç»è®¡å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;#åå»ºä¸ä¸ªç®åçæ°æ®é
Control &amp;lt;- c(2.0,2.5,2.2,2.4,2.1)
Treatment &amp;lt;- c(3.0,3.3,3.1,3.2,3.2)
mean &amp;lt;- c(mean(Control), mean(Treatment))
sd &amp;lt;- c(sd(Control), sd(Treatment))
df1 &amp;lt;- data.frame(V=c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment&amp;quot;), mean=mean, sd=sd)
df1$V &amp;lt;- factor(df1$V, levels=c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment&amp;quot;))
#å©ç¨geom_segment()ç»å¶å¾å½¢
ggplot(data=df1, aes(x=V, y=mean, fill=V))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;,position = position_dodge(0.9),color=&amp;quot;black&amp;quot;)+ 
geom_errorbar(aes(ymax=mean+sd, ymin=mean-sd), width=0.05)+ 
geom_segment(aes(x=1, y=2.5, xend=1, yend=3.8))+#ç»å¶controlç«¯çç«çº¿ 
geom_segment(aes(x=2, y=3.3, xend=2, yend=3.8))+#ç»å¶treatmentç«¯ç«çº¿ 
geom_segment(aes(x=1, y=3.8, xend=1.45, yend=3.8))+ 
geom_segment(aes(x=1.55, y=3.8, xend=2, yend=3.8))+#ç»å¶ä¸¤æ®µæ¨ªçº¿ 
annotate(&amp;quot;text&amp;quot;, x=1.5, y=3.8, label=&amp;quot;ã&amp;quot;, size=5)#annotateå½æ°ä¹å¯ä»¥æ·»å æ ç­¾
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145604.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¸ºå¾å½¢æ·»å æ é¢&#34;&gt;ä¸ºå¾å½¢æ·»å æ é¢&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;å¾å½¢æ é¢æå¾æ é¢ãåæ è½´æ é¢ãå¾ä¾æ é¢ç­&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggplot(data = df, aes(x = treatment, y = response, fill = group)) + 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) +
geom_errorbar(aes(ymax = response + se, ymin = response -  se),
position = position_dodge(0.9), width = 0.15) + 
scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;)# å©ç¨ggtitle()æ·»å å¾æ é¢,è¿ælabsï¼ï¼ä¹å¯ä»¥æ·»å æ é¢ï¼æåä¼æä¸ä¸ãï¼æä¸ä¸ªé®é¢å°±æ¯ggtitle()æ·»å çæ é¢æ»æ¯å·¦å¯¹é½ï¼
p + ggtitle(&amp;quot;å©ç¨ggtitle()æ·»å å¾æ é¢&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145618.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# å©ç¨xlab()\ylab()æ·»å /ä¿®æ¹åæ è½´æ é¢
p + ggtitle(&amp;quot;å©ç¨ggtitle()æ·»å å¾æ é¢&amp;quot;) + 
xlab(&amp;quot;ä¸åå¤ç&amp;quot;) + 
ylab(&amp;quot;response&amp;quot;) #æ é¢çåæ°ä¿®æ¹å¨themeéï¼themeæ¯ä¸ä¸ªå¾å¤§çå½æ°ï¼å ä¹å¯ä»¥å®ä¹ä¸åï¼ä¸æ¬¡ææ¶é´ä¼è®²è§£
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145632.png&#34; alt=&#34;&#34;&gt;
æååè®²è§£ä¸ä¸å¦ä½å°å¤å¯å¾è³äºä¸ä¸ªé¡µé¢ å©ç¨å&lt;strong&gt;gridExtra&lt;/strong&gt;ä¸­&lt;code&gt;grid.arrange()&lt;/code&gt;å½æ°å®ç°&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# å°åå¹å¾æ¾ç½®äºä¸ä¸ªé¡µé¢ä¸­
p &amp;lt;- ggplot(data = df, aes(x = treatment, y = response, fill = group)) + 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) + 
geom_errorbar(aes(ymax = response + se, ymin = response -  se), 
position = position_dodge(0.9), width = 0.15) + 
scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;)
p1 &amp;lt;- p + ggtitle(&amp;quot;å©ç¨ggtitle()æ·»å å¾æ é¢&amp;quot;)
p2 &amp;lt;- p + ggtitle(&amp;quot;å©ç¨ggtitle()æ·»å å¾æ é¢&amp;quot;) + xlab(&amp;quot;ä¸åå¤ç&amp;quot;) + ylab(&amp;quot;response&amp;quot;)
p3 &amp;lt;- ggplot(data = df, aes(x = treatment, y = response, fill = group)) + 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;) + 
geom_errorbar(aes(ymax = response + se, ymin = response -  se), 
position = position_dodge(0.9), width = 0.15) + 
geom_text(aes(y = response +  1.5 * se, label = label, group = group), 
position = position_dodge(0.9), size = 5, fontface = &amp;quot;bold&amp;quot;) + 
scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;)
library(gridExtra) #æ²¡æå®è£æ­¤ååç¨install.packages(&#39;gridExtra&#39;)å®è£
grid.arrange(p, p1, p2, p3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145650.png&#34; alt=&#34;&#34;&gt;
ä¸æ¬¡æäººé®åæ è½´æè½¬çå®ç°ï¼åæ è½´æè½¬ææ¶æ¯å¾æç¨çï¼ä¸é¢æ¯æçè¿çä¸ä¸ªä¾å­ï¼ç¨æ¥ä»ç»ä¸ä¸ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#åå è½½ä»çæ°æ®
url.world_ports &amp;lt;- url(&amp;quot;https://sharpsightlabs.com/wp-content/datasets/world_ports.RData&amp;quot;)
load(url.world_ports)
knitr::kable(df.world_ports[1:5,])#è¯¥æ°æ®æ¯å³äºä¸çä¸åä¸ªæ¸¯å£çæ°æ®æ±æ»
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(dplyr) #ç¨äºæ°æ®æä½ï¼ä¸ggplot2ä¸æ ·æ¯Rè¯­è¨å¿å­¦å#ç°å¨ç»å¶æ¡å½¢å¾(%&amp;gt;%ä¸æ¬¡è¯´è¿æ¯ç®¡éæä½ï¼ç¨äºè¿æ¥åä¸ªä»£ç ï¼ååæç¨)
df.world_ports%&amp;gt;%filter(year==2014)%&amp;gt;% #ç­é2014å¹´çæ°æ® 
ggplot(aes(x=reorder(port_label, desc(volume)), y=volume))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;, fill=&amp;quot;darkred&amp;quot;)+ 
labs(title=&amp;quot;Busiest container ports in the world&amp;quot;)+ 
labs(subtitle = &#39;2014, in order of shipping volume&#39;)+ #æ·»å å¯æ é¢ 
labs(x = &amp;quot;Port&amp;quot;, y = &amp;quot;Shipping\nVolume&amp;quot;)+ 
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .4))#è°æ´xè½´æ ç­¾ï¼angle=90è¡¨ç¤ºæ ç­¾æè½¬90åº¦ï¼ä»å¾ä¸­å¯ä»¥çåº
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ç°å¨æè½¬åæ è½´ï¼å¹¶ç­éæåå°äº25çæ¸¯å£ï¼å¹¶ä¸æ·»å æ°æ®æ ç­¾
df.world_ports %&amp;gt;% filter(year==2014, rank&amp;lt;=25) %&amp;gt;% #ç­é2014å¹´å¹¶ä¸rankå°äºç­äº25çæ°æ® 
ggplot(aes(x=reorder(port, volume), y=volume))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;, fill=&amp;quot;darkred&amp;quot;)+ 
labs(title=&amp;quot;Busiest container ports in the world&amp;quot;)+ 
labs(subtitle = &#39;2014, in order of shipping volume&#39;)+  
labs(x = &amp;quot;Port&amp;quot;, y = &amp;quot;Shipping\nVolume&amp;quot;)+ 
geom_text(aes(label=volume), hjust=1.2, color=&amp;quot;white&amp;quot;)+ 
coord_flip()#æè½¬åæ è½´
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145724.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¸¤å¾ç¸æ¯ï¼ææ¾ç¬¬äºå¹å¾å¥½ï¼ä¸æ¯å¯ä»¥æ·»å æ°æ®æ ç­¾ï¼äºæ¯ä¸ç¨æ­ªçèå­çã
æ¬æ¥æç®è®²è®²å¾ä¾çä½æ¯åç°åå®¹å¤ªå¤äºï¼å°±ä¸è®²äºï¼ä¸æ¬¡å§ï¼&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rè¯­è¨å¯è§åå­¦ä¹ ç¬è®°ä¹ggpubrå</title>
      <link>https://taoyan.netlify.app/post/2017-06-26.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bggpubr%E5%8C%85/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-26.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bggpubr%E5%8C%85/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144020.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://docs.ggplot2.org/current/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hadley Wickham&lt;/a&gt;åå»ºçå¯è§ååggplot2å¯ä»¥æµçå°è¿è¡ä¼ç¾çå¯è§åï¼ä½æ¯å¦æè¦éè¿ggplot2å®å¶ä¸å¥å¾å½¢ï¼å°¤å¶æ¯éç¨äºæå¿æåç­åºçç©çå¾å½¢ï¼å¯¹äºé£äºæ²¡ææ·±å¥äºè§£&lt;strong&gt;ggplot2&lt;/strong&gt;çäººæ¥è¯´å°±æç¹å°é¾äºï¼&lt;strong&gt;ggplot2&lt;/strong&gt;çé¨åè¯­æ³æ¯å¾æ¦æ¶©çãä¸ºæ­¤
&lt;a href=&#34;https://www.sthda.com/english/rpkgs/ggpubr/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Alboukadel Kassambara&lt;/a&gt;åå»ºäºåºäº&lt;strong&gt;ggplot2&lt;/strong&gt;çå¯è§åå&lt;strong&gt;ggpubr&lt;/strong&gt;ç¨äºç»å¶ç¬¦ååºçç©è¦æ±çå¾å½¢ã&lt;/p&gt;
&lt;h2 id=&#34;å®è£åå è½½ggpubrå&#34;&gt;å®è£åå è½½&lt;strong&gt;ggpubr&lt;/strong&gt;å&lt;/h2&gt;
&lt;p&gt;å®è£æ¹å¼æä¸¤ç§ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ç´æ¥ä»&lt;strong&gt;CRAN&lt;/strong&gt;å®è£ï¼&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;install.packages(&amp;quot;ggpubr&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;ä»&lt;strong&gt;GitHub&lt;/strong&gt;ä¸å®è£ææ°çæ¬ï¼&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;if(!require(devtools)) install.packages(&amp;quot;devtools&amp;quot;)
 devtools::install_github(&amp;quot;kassambara/ggpubr&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å®è£å®ä¹åç´æ¥å è½½å°±è¡ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggpubr)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ggpubrå¯ç»å¶å¾å½¢&#34;&gt;&lt;strong&gt;ggpubr&lt;/strong&gt;å¯ç»å¶å¾å½¢ï¼&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ggpubr&lt;/strong&gt;å¯ç»å¶å¤§é¨åæä»¬å¸¸ç¨çå¾å½¢ï¼ä¸é¢ä¸ä¸ä»ç»ã&lt;/p&gt;
&lt;h3 id=&#34;åå¸å¾distribution&#34;&gt;åå¸å¾(Distribution)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#æå»ºæ°æ®é
set.seed(1234)
df &amp;lt;- data.frame( sex=factor(rep(c(&amp;quot;f&amp;quot;, &amp;quot;M&amp;quot;), each=200)), 
weight=c(rnorm(200, 55), rnorm(200, 58)))
head(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   sex   weight
## 1  f   53.79293
## 2  f   55.27743
## 3  f   56.08444
## 4  f   52.65430
## 5  f   55.42912
## 6  f   55.50606
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;å¯åº¦åå¸å¾ä»¥åè¾¹éå°æ¯¯çº¿å¹¶æ·»å å¹³åå¼çº¿&#34;&gt;å¯åº¦åå¸å¾ä»¥åè¾¹éå°æ¯¯çº¿å¹¶æ·»å å¹³åå¼çº¿&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ggdensity(df, x=&amp;quot;weight&amp;quot;, add = &amp;quot;mean&amp;quot;, rug = TRUE, color = &amp;quot;sex&amp;quot;, fill = &amp;quot;sex&amp;quot;,
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144035.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;å¸¦æåå¼çº¿åè¾¹éå°æ¯¯çº¿çç´æ¹å¾&#34;&gt;å¸¦æåå¼çº¿åè¾¹éå°æ¯¯çº¿çç´æ¹å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;gghistogram(df, x=&amp;quot;weight&amp;quot;, add = &amp;quot;mean&amp;quot;, rug = TRUE, color = &amp;quot;sex&amp;quot;, fill = &amp;quot;sex&amp;quot;,
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144048.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ç®±çº¿å¾ä¸å°æç´å¾&#34;&gt;ç®±çº¿å¾ä¸å°æç´å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#å è½½æ°æ®éToothGrowth
data(&amp;quot;ToothGrowth&amp;quot;)
df1 &amp;lt;- ToothGrowth
head(df1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    len  supp  dose
## 1  4.2   VC    0.5
## 2  11.5  VC    0.5
## 3  7.3   VC    0.5
## 4  5.8   VC    0.5
## 5  6.4   VC    0.5
## 6  10.0  VC    0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggboxplot(df1, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;, 
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;), 
add = &amp;quot;jitter&amp;quot;, shape=&amp;quot;dose&amp;quot;)#å¢å äºjitterç¹ï¼ç¹shapeç±doseæ å°p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144100.png&#34; alt=&#34;&#34;&gt;
å¢å ä¸åç»é´çp-valueå¼ï¼å¯ä»¥èªå®ä¹éè¦æ æ³¨çç»é´æ¯è¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;my_comparisons &amp;lt;- list(c(&amp;quot;0.5&amp;quot;, &amp;quot;1&amp;quot;), c(&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;), c(&amp;quot;0.5&amp;quot;, &amp;quot;2&amp;quot;))
p+stat_compare_means(comparisons = my_comparisons)+#ä¸åç»é´çæ¯è¾
stat_compare_means(label.y = 50)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144114.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;åæç®±çº¿å¾çå°æç´å¾&#34;&gt;åæç®±çº¿å¾çå°æç´å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ggviolin(df1, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, fill = &amp;quot;dose&amp;quot;, 
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;), 
add = &amp;quot;boxplot&amp;quot;, add.params = list(fill=&amp;quot;white&amp;quot;))+ 
stat_compare_means(comparisons = my_comparisons, label = &amp;quot;p.signif&amp;quot;)+#labelè¿éè¡¨ç¤ºéæ©æ¾èæ§æ è®°ï¼æå·ï¼ 
stat_compare_means(label.y = 50)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144125.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;æ¡å½¢å¾&#34;&gt;æ¡å½¢å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;data(&amp;quot;mtcars&amp;quot;)
df2 &amp;lt;- mtcars
df2$cyl &amp;lt;- factor(df2$cyl)
df2$name &amp;lt;- rownames(df2)#æ·»å ä¸è¡name
head(df2[, c(&amp;quot;name&amp;quot;, &amp;quot;wt&amp;quot;, &amp;quot;mpg&amp;quot;, &amp;quot;cyl&amp;quot;)])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144135.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æä»å°å°å¤§é¡ºåºç»å¶æ¡å½¢å¾ï¼ä¸åç»æåºï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggbarplot(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg&amp;quot;, fill = &amp;quot;cyl&amp;quot;, color = &amp;quot;white&amp;quot;, 
palette = &amp;quot;jco&amp;quot;,#æå¿jcoçéè² 
sort.val = &amp;quot;desc&amp;quot;,#ä¸éæåº 
sort.by.groups=FALSE,#ä¸æç»æåº 
x.text.angle=60)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144150.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æç»è¿è¡æåº&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggbarplot(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg&amp;quot;, fill = &amp;quot;cyl&amp;quot;, color = &amp;quot;white&amp;quot;, 
palette = &amp;quot;jco&amp;quot;,#æå¿jcoçéè² 
sort.val = &amp;quot;asc&amp;quot;,#ä¸åæåº,åºå«äºdescï¼å·ä½çå¾æ¼ç¤º 
sort.by.groups=TRUE,#æç»æåº 
x.text.angle=90)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144208.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;åå·®å¾&#34;&gt;åå·®å¾&lt;/h3&gt;
&lt;p&gt;åå·®å¾å±ç¤ºäºä¸åèå¼ä¹é´çåå·®&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;df2$mpg_z &amp;lt;- (df2$mpg-mean(df2$mpg))/sd(df2$mpg)
df2$mpg_grp &amp;lt;- factor(ifelse(df2$mpg_z&amp;lt;0, &amp;quot;low&amp;quot;, &amp;quot;high&amp;quot;), levels = c(&amp;quot;low&amp;quot;, &amp;quot;high&amp;quot;))
head(df2[, c(&amp;quot;name&amp;quot;, &amp;quot;wt&amp;quot;, &amp;quot;mpg&amp;quot;, &amp;quot;mpg_grp&amp;quot;, &amp;quot;cyl&amp;quot;)])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144222.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ç»å¶æåºè¿çæ¡å½¢å¾&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggbarplot(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg_z&amp;quot;, fill = &amp;quot;mpg_grp&amp;quot;, color = &amp;quot;white&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, sort.val = &amp;quot;asc&amp;quot;, sort.by.groups = FALSE, x.text.angle=60, 
ylab = &amp;quot;MPG z-score&amp;quot;, xlab = FALSE, legend.title=&amp;quot;MPG Group&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144234.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;åæ è½´åæ¢&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggbarplot(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg_z&amp;quot;, fill = &amp;quot;mpg_grp&amp;quot;, color = &amp;quot;white&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, sort.val = &amp;quot;desc&amp;quot;, sort.by.groups = FALSE, 
x.text.angle=90, ylab = &amp;quot;MPG z-score&amp;quot;, xlab = FALSE, 
legend.title=&amp;quot;MPG Group&amp;quot;, rotate=TRUE, ggtheme = theme_minimal())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144248.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ç¹å¾dot-charts&#34;&gt;ç¹å¾(&lt;strong&gt;Dot charts&lt;/strong&gt;)&lt;/h3&gt;
&lt;h4 id=&#34;æ£æ£ç³å¾lollipop-chart&#34;&gt;æ£æ£ç³å¾(&lt;strong&gt;Lollipop chart&lt;/strong&gt;)&lt;/h4&gt;
&lt;p&gt;æ£æ£å¾å¯ä»¥ä»£æ¿æ¡å½¢å¾å±ç¤ºæ°æ®&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdotchart(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg&amp;quot;, color = &amp;quot;cyl&amp;quot;, 
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;), sorting = &amp;quot;ascending&amp;quot;, 
add = &amp;quot;segments&amp;quot;, ggtheme = theme_pubr())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144302.png&#34; alt=&#34;&#34;&gt;
å¯ä»¥èªè®¾ç½®åç§åæ°&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggdotchart(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg&amp;quot;, color = &amp;quot;cyl&amp;quot;, 
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;), sorting = &amp;quot;descending&amp;quot;, 
add = &amp;quot;segments&amp;quot;, rotate = TRUE, group = &amp;quot;cyl&amp;quot;, dot.size = 6, 
label = round(df2$mpg), font.label = list(color=&amp;quot;white&amp;quot;, size=9, vjust=0.5), 
ggtheme = theme_pubr())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144314.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;åå·®å¾-1&#34;&gt;åå·®å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ggdotchart(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg_z&amp;quot;, color = &amp;quot;cyl&amp;quot;, 
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;), sorting = &amp;quot;descending&amp;quot;, 
add = &amp;quot;segment&amp;quot;, add.params = list(color=&amp;quot;lightgray&amp;quot;, size=2), 
group = &amp;quot;cyl&amp;quot;, dot.size = 6, label = round(df2$mpg_z, 1), 
font.label = list(color=&amp;quot;white&amp;quot;, size=9, vjust=0.5), ggtheme = theme_pubr())+ 
geom_line(yintercept=0, linetype=2, color=&amp;quot;lightgray&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144330.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;clevelandç¹å¾&#34;&gt;&lt;strong&gt;Cleveland&lt;/strong&gt;ç¹å¾&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ggdotchart(df2, x=&amp;quot;name&amp;quot;, y=&amp;quot;mpg&amp;quot;, color = &amp;quot;cyl&amp;quot;, 
palette = c(&amp;quot;#00AFBB&amp;quot;, &amp;quot;#E7B800&amp;quot;, &amp;quot;#FC4E07&amp;quot;), sorting = &amp;quot;descending&amp;quot;, 
rotate = TRUE, dot.size = 2, y.text.col=TRUE, ggtheme = theme_pubr())+ 
theme_cleveland()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144343.png&#34; alt=&#34;&#34;&gt;Â &lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;&lt;strong&gt;SessionInfo&lt;/strong&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.4.0 (2017-04-21)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 8.1 x64 (build 9600)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936 
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C 
## [5] LC_TIME=Chinese (Simplified)_China.936 
## 
## attached base packages:
## [1] stats graphics grDevices utils datasets methods base 
## 
## other attached packages:
## [1] ggpubr_0.1.3 magrittr_1.5 ggplot2_2.2.1
## 
## loaded via a namespace (and not attached):
## [1] Rcpp_0.12.11 knitr_1.16 munsell_0.4.3 colorspace_1.3-2
## [5] R6_2.2.1 rlang_0.1.1 stringr_1.2.0 plyr_1.8.4 
## [9] dplyr_0.5.0 tools_3.4.0 grid_3.4.0 gtable_0.2.0 
## [13] DBI_0.6-1 htmltools_0.3.6 yaml_2.1.14 lazyeval_0.2.0 
## [17] rprojroot_1.2 digest_0.6.12 assertthat_0.2.0 tibble_1.3.3 
## [21] ggsignif_0.2.0 ggsci_2.4 purrr_0.2.2.2 evaluate_0.10 
## [25] rmarkdown_1.5 labeling_0.3 stringi_1.1.5 compiler_3.4.0 
## [29] scales_0.4.1 backports_1.1.0
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rè¯­è¨å¯è§åå­¦ä¹ ç¬è®°ä¹æ·»å p-valueåæ¾èæ§æ è®°</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%B7%BB%E5%8A%A0p-value%E5%92%8C%E6%98%BE%E8%91%97%E6%80%A7%E6%A0%87%E8%AE%B0/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%B7%BB%E5%8A%A0p-value%E5%92%8C%E6%98%BE%E8%91%97%E6%80%A7%E6%A0%87%E8%AE%B0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150115.png&#34; alt=&#34;&#34;&gt;
ä¸ç¯æç« ä¸­æäºä¸ä¸å¦ä½éè¿&lt;strong&gt;ggpubr&lt;/strong&gt;åä¸º&lt;code&gt;ggplot&lt;/code&gt;å¾æ·»å &lt;code&gt;p-value&lt;/code&gt;ä»¥åæ¾èæ§æ è®°,æ¬æå°è¯¦ç»ä»ç»ãå©ç¨æ°æ®é&lt;strong&gt;ToothGrowth&lt;/strong&gt;è¿è¡æ¼ç¤º&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#åå è½½å
library(ggpubr)
#å è½½æ°æ®éToothGrowth
data(&amp;quot;ToothGrowth&amp;quot;)
head(ToothGrowth)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    len  supp  dose
## 1  4.2   VC   0.5
## 2  11.5  VC   0.5
## 3  7.3   VC   0.5
## 4  5.8   VC   0.5
## 5  6.4   VC   0.5
## 6  10.0  VC   0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;æ¯è¾æ¹æ³&#34;&gt;æ¯è¾æ¹æ³&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;ä¸­å¸¸ç¨çæ¯è¾æ¹æ³ä¸»è¦æä¸é¢å ç§ï¼&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;æ¹æ³&lt;/th&gt;
&lt;th&gt;Rå½æ°&lt;/th&gt;
&lt;th&gt;æè¿°&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;T-test&lt;/td&gt;
&lt;td&gt;t.test()&lt;/td&gt;
&lt;td&gt;æ¯è¾ä¸¤ç»(åæ°)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wilcoxon test&lt;/td&gt;
&lt;td&gt;wilcox.test()&lt;/td&gt;
&lt;td&gt;æ¯è¾ä¸¤ç»(éåæ°)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ANOVA&lt;/td&gt;
&lt;td&gt;aov()æanova()&lt;/td&gt;
&lt;td&gt;æ¯è¾å¤ç»(åæ°)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kruskal-Wallis&lt;/td&gt;
&lt;td&gt;kruskal.test()&lt;/td&gt;
&lt;td&gt;æ¯è¾å¤ç»(éåæ°)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;åç§æ¯è¾æ¹æ³åç»­ææ¶é´ä¸ä¸è®²è§£ã&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;æ·»å p-value&#34;&gt;æ·»å &lt;code&gt;p-value&lt;/code&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;ä¸»è¦å©ç¨&lt;strong&gt;ggpubr&lt;/strong&gt;åä¸­çä¸¤ä¸ªå½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;compare_means()&lt;/code&gt;:å¯ä»¥è¿è¡ä¸ç»æå¤ç»é´çæ¯è¾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stat_compare_mean()&lt;/code&gt;:èªå¨æ·»å &lt;code&gt;p-value&lt;/code&gt;ãæ¾èæ§æ è®°å°&lt;strong&gt;ggplot&lt;/strong&gt;å¾ä¸­&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;compare_meanså½æ°&#34;&gt;**compare_means()**å½æ°&lt;/h2&gt;
&lt;p&gt;è¯¥å½æ°ä¸»è¦ç¨ç¨æ³å¦ä¸ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;compare_means(formula, data, method = &amp;quot;wilcox.test&amp;quot;, paired = FALSE,
  group.by = NULL, ref.group = NULL, ...)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ³¨éï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;formula&lt;/code&gt;:å½¢å¦&lt;code&gt;x~group&lt;/code&gt;ï¼å¶ä¸­xæ¯æ°å¼ååéï¼&lt;code&gt;group&lt;/code&gt;æ¯å å­ï¼å¯ä»¥æ¯ä¸ä¸ªæèå¤ä¸ª&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;ï¼æ°æ®é&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;:æ¯è¾çæ¹æ³ï¼é»è®¤ä¸º&lt;code&gt;&amp;quot;wilcox.test&amp;quot;&lt;/code&gt;, å¶ä»å¯éæ¹æ³ä¸ºï¼&lt;code&gt;&amp;quot;t.test&amp;quot;&lt;/code&gt;ã&lt;code&gt;&amp;quot;anova&amp;quot;&lt;/code&gt;ã&lt;code&gt;&amp;quot;kruskal.test&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;paired&lt;/code&gt;:æ¯å¦è¦è¿è¡&lt;code&gt;paired test&lt;/code&gt;(&lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group_by&lt;/code&gt;: æ¯è¾æ¶æ¯å¦è¦è¿è¡åç»&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ref.group&lt;/code&gt;: æ¯å¦éè¦æå®åèç»&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;stat_compare_meanså½æ°&#34;&gt;**stat_compare_means()**å½æ°&lt;/h2&gt;
&lt;p&gt;ä¸»è¦ç¨æ³ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;stat_compare_means(mapping = NULL, comparisons = NULL hide.ns = FALSE,
                   label = NULL,  label.x = NULL, label.y = NULL,  ...)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;æ³¨éï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mapping&lt;/code&gt;:ç±&lt;code&gt;aes()&lt;/code&gt;åå»ºçä¸å¥ç¾å­¦æ å°&lt;/li&gt;
&lt;li&gt;&lt;code&gt;comparisons&lt;/code&gt;:æå®éè¦è¿è¡æ¯è¾ä»¥åæ·»å &lt;code&gt;p-value&lt;/code&gt;ãæ¾èæ§æ è®°çç»&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hide.ns&lt;/code&gt;:æ¯å¦è¦æ¾ç¤ºæ¾èæ§æ è®°ns&lt;/li&gt;
&lt;li&gt;&lt;code&gt;label&lt;/code&gt;:æ¾èæ§æ è®°çç±»åï¼å¯éé¡¹ä¸ºï¼&lt;code&gt;p.signif&lt;/code&gt;(æ¾èæ§æ è®°)ã&lt;code&gt;p.format&lt;/code&gt;(æ¾ç¤º&lt;code&gt;p-value&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;label.x&lt;/code&gt;ã&lt;code&gt;label.y&lt;/code&gt;:æ¾èæ§æ ç­¾è°æ´&lt;/li&gt;
&lt;li&gt;&amp;hellip;:å¶ä»åæ°&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;æ¯è¾ç¬ç«çä¸¤ç»&#34;&gt;æ¯è¾ç¬ç«çä¸¤ç»&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;compare_means(len~supp, data=ToothGrowth)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150131.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ç»æè§£éï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.y&lt;/code&gt;:æµè¯ä¸­ä½¿ç¨çyåé&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt;:&lt;code&gt;p-value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p.adj&lt;/code&gt;:è°æ´åç&lt;code&gt;p-value&lt;/code&gt;ãé»è®¤ä¸º&lt;code&gt;p.adjust.method=&amp;quot;holm&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p.format&lt;/code&gt;:åèäºå¥åç&lt;code&gt;p-value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p.signif&lt;/code&gt;:æ¾èæ§æ°´å¹³&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;:ç¨äºç»è®¡æ£éªçæ¹æ³
##ç»å¶ç®±çº¿å¾&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;p &amp;lt;- ggboxplot(ToothGrowth, x=&amp;quot;supp&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;supp&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, add = &amp;quot;jitter&amp;quot;)#æ·»å p-valuep+stat_compare_means()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150143.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä½¿ç¨å¶ä»ç»è®¡æ£éªæ¹æ³
p+stat_compare_means(method = &amp;quot;t.test&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150153.png&#34; alt=&#34;&#34;&gt;
ä¸è¿°æ¾èæ§æ è®°å¯ä»¥éè¿&lt;code&gt;label.x&lt;/code&gt;ã&lt;code&gt;label.y&lt;/code&gt;ã&lt;code&gt;hjust&lt;/code&gt;å&lt;code&gt;vjust&lt;/code&gt;æ¥è°æ´
æ¾èæ§æ è®°å¯ä»¥éè¿&lt;code&gt;aes()&lt;/code&gt;æ å°æ¥æ´æ¹ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;aes(label=..p.format..)&lt;/code&gt;æ&lt;code&gt;aes(lebel=paste0(&amp;quot;p=&amp;quot;,..p.format..))&lt;/code&gt;:åªæ¾ç¤º&lt;code&gt;p-value&lt;/code&gt;ï¼ä¸æ¾ç¤ºç»è®¡æ£éªæ¹æ³&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aes(label=..p.signif..)&lt;/code&gt;:ä»æ¾ç¤ºæ¾èæ§æ°´å¹³&lt;/li&gt;
&lt;li&gt;&lt;code&gt;aes(label=paste0(..method..,&amp;quot;\n&amp;quot;, &amp;quot;p=&amp;quot;,..p.format..))&lt;/code&gt;:&lt;code&gt;p-value&lt;/code&gt;ä¸æ¾èæ§æ°´å¹³åè¡æ¾ç¤º&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ä¸¾ä¸ªæ å­ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+stat_compare_means(aes(label=..p.signif..), label.x = 1.5, label.y = 40)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150202.png&#34; alt=&#34;&#34;&gt;
ä¹å¯ä»¥å°æ ç­¾æå®ä¸ºå­ç¬¦åéï¼ä¸è¦æ å°ï¼åªéå°p.signifä¸¤ç«¯ç..å»æå³å¯&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;p+stat_compare_means(label = &amp;quot;p.signif&amp;quot;, label.x = 1.5, label.y = 40)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150214.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æ¯è¾ä¸¤ä¸ªpaired-sample&#34;&gt;æ¯è¾ä¸¤ä¸ªpaired sample&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;compare_means(len~supp, data=ToothGrowth, paired = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150224.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å©ç¨ggpairedè¿è¡å¯è§å&#34;&gt;å©ç¨ggpaired()è¿è¡å¯è§å&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;ggpaired(ToothGrowth, x=&amp;quot;supp&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;supp&amp;quot;, line.color = &amp;quot;gray&amp;quot;, 
line.size = 0.4, palette = &amp;quot;jco&amp;quot;)+ stat_compare_means(paired = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150235.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¤ç»æ¯è¾&#34;&gt;å¤ç»æ¯è¾&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;Global test&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;compare_means(len~dose, data=ToothGrowth, method = &amp;quot;anova&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150248.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¯è§å&#34;&gt;å¯è§å&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;, palette = &amp;quot;jco&amp;quot;)+
stat_compare_means()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150259.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä½¿ç¨å¶ä»çæ¹æ³
ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;, palette = &amp;quot;jco&amp;quot;)+ 
stat_compare_means(method = &amp;quot;anova&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150311.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pairwise comparisons:å¦æåç»åéä¸­åå«ä¸¤ä¸ªä»¥ä¸çæ°´å¹³ï¼é£ä¹ä¼èªå¨è¿è¡pairwise test,é»è®¤æ¹æ³ä¸º&amp;quot;wilcox.test&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;compare_means(len~dose, data=ToothGrowth)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150321.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯ä»¥æå®æ¯è¾åªäºç»
my_comparisons &amp;lt;- list(c(&amp;quot;0.5&amp;quot;, &amp;quot;1&amp;quot;), c(&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;), c(&amp;quot;0.5&amp;quot;, &amp;quot;2&amp;quot;))
ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;,palette = &amp;quot;jco&amp;quot;)+
stat_compare_means(comparisons=my_comparisons)+ # Add pairwise 
comparisons p-value stat_compare_means(label.y = 50) # Add global p-value
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150332.png&#34; alt=&#34;&#34;&gt;
å¯ä»¥éè¿ä¿®æ¹åæ°label.yæ¥æ´æ¹æ ç­¾çä½ç½®&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;,palette = &amp;quot;jco&amp;quot;)+
stat_compare_means(comparisons=my_comparisons, label.y = c(29, 35, 40))+ # Add pairwise comparisons p-value 
stat_compare_means(label.y = 45) # Add global p-value
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150343.png&#34; alt=&#34;&#34;&gt;
è³äºéè¿æ·»å çº¿æ¡æ¥è¿æ¥æ¯è¾çä¸¤ç»ï¼è¿ä¸åè½å·²ç±å
&lt;a href=&#34;https://github.com/Artjom-Metro/ggsignif&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggsignif&lt;/strong&gt;&lt;/a&gt;å®ç°&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;##è®¾å®åèç»
compare_means(len~dose, data=ToothGrowth, ref.group = &amp;quot;0.5&amp;quot;,  #ä»¥dose=0.5ç»ä¸ºåèç» 
method = &amp;quot;t.test&amp;quot; )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150354.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯è§å
ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;, palette = &amp;quot;jco&amp;quot;)+ 
stat_compare_means(method = &amp;quot;anova&amp;quot;, label.y = 40)+ # Add global p-value
stat_compare_means(label = &amp;quot;p.signif&amp;quot;, method = &amp;quot;t.test&amp;quot;, ref.group = &amp;quot;0.5&amp;quot;) # Pairwise comparison against reference
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150403.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;åèç»ä¹å¯ä»¥è®¾ç½®ä¸º.all.å³ææçå¹³åå¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;compare_means(len~dose, data=ToothGrowth, ref.group = &amp;quot;.all.&amp;quot;, method = &amp;quot;t.test&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819150420.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯è§å
ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;dose&amp;quot;, palette = &amp;quot;jco&amp;quot;)+
stat_compare_means(method = &amp;quot;anova&amp;quot;, label.y = 40)+# Add global p-value
stat_compare_means(label = &amp;quot;p.signif&amp;quot;, method = &amp;quot;t.test&amp;quot;, 
ref.group = &amp;quot;.all.&amp;quot;)#Pairwise comparison against all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151326.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ¥ä¸æ¥å©ç¨&lt;strong&gt;survminer&lt;/strong&gt;åä¸­çæ°æ®é&lt;strong&gt;myeloma&lt;/strong&gt;æ¥è®²è§£ä¸ä¸ä¸ºä»ä¹ææ¶åæä»¬éè¦å°ref.groupè®¾ç½®ä¸º.all.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(survminer)#æ²¡å®è£çåå®è£åå è½½
data(&amp;quot;myeloma&amp;quot;)
head(myeloma)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151340.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;æä»¬å°æ ¹æ®æ£èçåç»æ¥ç»å¶&lt;strong&gt;DEPDC1&lt;/strong&gt;åºå çè¡¨è¾¾è°±ï¼çä¸åç»ä¹é´æ¯å¦å­å¨æ¾èæ§çå·®å¼ï¼æä»¬å¯ä»¥å¨7ç»ä¹é´è¿è¡æ¯è¾ï¼ä½æ¯è¿æ ·çè¯ç»é´æ¯è¾çç»åå°±å¤ªå¤äºï¼å æ­¤æä»¬å¯ä»¥å°7ç»ä¸­æ¯ä¸ç»ä¸å¨é¨å¹³åå¼è¿è¡æ¯è¾ï¼çç&lt;strong&gt;DEPDC1&lt;/strong&gt;åºå å¨ä¸åçç»ä¸­æ¯å¦è¿è¡¨è¾¾è¿æ¯ä½è¡¨è¾¾ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;compare_means(DEPDC1~molecular_group, data = myeloma, ref.group = &amp;quot;.all.&amp;quot;, method = &amp;quot;t.test&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151352.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯è§åDEPDC1åºå è¡¨è¾¾è°±
ggboxplot(myeloma, x=&amp;quot;molecular_group&amp;quot;, y=&amp;quot;DEPDC1&amp;quot;, 
color = &amp;quot;molecular_group&amp;quot;, add = &amp;quot;jitter&amp;quot;, legend=&amp;quot;none&amp;quot;)+ 
rotate_x_text(angle = 45)+ 
geom_hline(yintercept = mean(myeloma$DEPDC1), linetype=2)+# Add horizontal line at base mean 
stat_compare_means(method = &amp;quot;anova&amp;quot;, label.y = 1600)+ # Add global annova p-value 
stat_compare_means(label = &amp;quot;p.signif&amp;quot;, method = &amp;quot;t.test&amp;quot;, ref.group = &amp;quot;.all.&amp;quot;)# Pairwise comparison against all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151403.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ä»å¾ä¸­å¯ä»¥çåºï¼DEPDC1åºå å¨Proliferationç»ä¸­æ¾èæ§å°è¿è¡¨è¾¾ï¼èå¨HyperdiploidåLow bone diseaseæ¾èæ§å°ä½è¡¨è¾¾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;æä»¬ä¹å¯ä»¥å°éæ¾èæ§æ è®°nså»æï¼åªéè¦å°åæ°hide.ns=TRUE&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggboxplot(myeloma, x=&amp;quot;molecular_group&amp;quot;, y=&amp;quot;DEPDC1&amp;quot;, 
color = &amp;quot;molecular_group&amp;quot;, add = &amp;quot;jitter&amp;quot;, legend=&amp;quot;none&amp;quot;)+
rotate_x_text(angle = 45)+ 
geom_hline(yintercept = mean(myeloma$DEPDC1), linetype=2)+# Add horizontal line at base mean 
stat_compare_means(method = &amp;quot;anova&amp;quot;, label.y = 1600)+ # Add global annova p-value 
stat_compare_means(label = &amp;quot;p.signif&amp;quot;, method = &amp;quot;t.test&amp;quot;, ref.group = &amp;quot;.all.&amp;quot;, hide.ns = TRUE)# Pairwise comparison against all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151418.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¤ä¸ªåç»åé&#34;&gt;å¤ä¸ªåç»åé&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;æå¦ä¸ä¸ªåéè¿è¡åç»ä¹åè¿è¡ç»è®¡æ£éªï¼æ¯å¦æåédoseè¿è¡åç»ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;compare_means(len~supp, data=ToothGrowth, group.by = &amp;quot;dose&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151428.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯è§å
p &amp;lt;- ggboxplot(ToothGrowth, x=&amp;quot;supp&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;supp&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, add = &amp;quot;jitter&amp;quot;, facet.by = &amp;quot;dose&amp;quot;, short.panel.labs = FALSE)#ædoseè¿è¡åé¢
#labelåªç»å¶
p-valuep+stat_compare_means(label = &amp;quot;p.format&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151438.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#labelç»å¶æ¾èæ§æ°´å¹³
p+stat_compare_means(label = &amp;quot;p.signif&amp;quot;, label.x = 1.5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151448.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å°ææç®±çº¿å¾ç»å¶å¨ä¸ä¸ªpanelä¸­
p &amp;lt;- ggboxplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;supp&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, add = &amp;quot;jitter&amp;quot;)
p+stat_compare_means(aes(group=supp))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151513.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#åªæ¾ç¤ºp-value
p+stat_compare_means(aes(group=supp), label = &amp;quot;p.format&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151523.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ¾ç¤ºæ¾èæ§æ°´å¹³
p+stat_compare_means(aes(group=supp), label = &amp;quot;p.signif&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151533.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;è¿è¡paired sampleæ£éª
compare_means(len~supp, data=ToothGrowth, group.by = &amp;quot;dose&amp;quot;, paired = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151544.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯è§å
p &amp;lt;- ggpaired(ToothGrowth, x=&amp;quot;supp&amp;quot;, y=&amp;quot;len&amp;quot;, color = &amp;quot;supp&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, line.color=&amp;quot;gray&amp;quot;, line.size=0.4, facet.by = &amp;quot;dose&amp;quot;, 
short.panel.labs = FALSE)#ædoseåé¢
#åªæ¾ç¤ºp-value
p+stat_compare_means(label = &amp;quot;p.format&amp;quot;, paired = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151554.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¶ä»å¾å½¢&#34;&gt;å¶ä»å¾å½¢&lt;/h2&gt;
&lt;h3 id=&#34;æ¡å½¢å¾ä¸çº¿å¾ä¸ä¸ªåç»åé&#34;&gt;æ¡å½¢å¾ä¸çº¿å¾ï¼ä¸ä¸ªåç»åéï¼&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#æè¯¯å·®æ£çæ¡å½¢å¾ï¼å®éä¸æä»¥åçæç« éæçº¯ç²¹ç¨ggplot2å®ç°
ggbarplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, add = &amp;quot;mean_se&amp;quot;)+ 
stat_compare_means()+ 
stat_compare_means(ref.group = &amp;quot;0.5&amp;quot;, label = &amp;quot;p.signif&amp;quot;, label.y = c(22, 29))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151605.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æè¯¯å·®æ£ççº¿å¾
ggline(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, add = &amp;quot;mean_se&amp;quot;)+
stat_compare_means()+ 
stat_compare_means(ref.group = &amp;quot;0.5&amp;quot;, label = &amp;quot;p.signif&amp;quot;, label.y = c(22, 29))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151619.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;æ¡å½¢å¾ä¸çº¿å¾ä¸¤ä¸ªåç»åé&#34;&gt;æ¡å½¢å¾ä¸çº¿å¾ï¼ä¸¤ä¸ªåç»åéï¼&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ggbarplot(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, add = &amp;quot;mean_se&amp;quot;, color = &amp;quot;supp&amp;quot;, 
palette = &amp;quot;jco&amp;quot;, position = position_dodge(0.8))+ 
stat_compare_means(aes(group=supp), label = &amp;quot;p.signif&amp;quot;, label.y = 29)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151632.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggline(ToothGrowth, x=&amp;quot;dose&amp;quot;, y=&amp;quot;len&amp;quot;, add = &amp;quot;mean_se&amp;quot;, color = &amp;quot;supp&amp;quot;, 
palette = &amp;quot;jco&amp;quot;)+ 
stat_compare_means(aes(group=supp), label = &amp;quot;p.signif&amp;quot;, label.y = c(16, 25, 29))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151647.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;Sessioninfo&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
## R version 3.4.0 (2017-04-21)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 8.1 x64 (build 9600)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936 
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C 
## [5] LC_TIME=Chinese (Simplified)_China.936 
## 
## attached base packages:
## [1] stats graphics grDevices utils datasets methods base 
## 
## other attached packages:
## [1] survminer_0.4.0 ggpubr_0.1.3 magrittr_1.5 ggplot2_2.2.1 
## 
## loaded via a namespace (and not attached):
## [1] Rcpp_0.12.11 compiler_3.4.0 plyr_1.8.4
## [4] tools_3.4.0 digest_0.6.12 evaluate_0.10 
## [7] tibble_1.3.3 gtable_0.2.0 nlme_3.1-131 
## [10] lattice_0.20-35 rlang_0.1.1 Matrix_1.2-10 
## [13] psych_1.7.5 ggsci_2.4 DBI_0.6-1 
## [16] cmprsk_2.2-7 yaml_2.1.14 parallel_3.4.0 
## [19] gridExtra_2.2.1 dplyr_0.5.0 stringr_1.2.0 
## [22] knitr_1.16 survMisc_0.5.4 rprojroot_1.2 
## [25] grid_3.4.0 data.table_1.10.4 KMsurv_0.1-5 
## [28] R6_2.2.1 km.ci_0.5-2 survival_2.41-3 
## [31] foreign_0.8-68 rmarkdown_1.5 reshape2_1.4.2 
## [34] tidyr_0.6.3 purrr_0.2.2.2 splines_3.4.0 
## [37] backports_1.1.0 scales_0.4.1 htmltools_0.3.6 
## [40] assertthat_0.2.0 mnormt_1.5-5 xtable_1.8-2 
## [43] colorspace_1.3-2 ggsignif_0.2.0 labeling_0.3 
## [46] stringi_1.1.5 lazyeval_0.2.0 munsell_0.4.3 
## [49] broom_0.4.2 zoo_1.8-0
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rè¯­è¨å¯è§åå­¦ä¹ ç¬è®°ä¹ç¸å³ç©éµå¯è§ååggcorrplot</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%9B%B8%E5%85%B3%E7%9F%A9%E9%98%B5%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8C%85ggcorrplot/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%9B%B8%E5%85%B3%E7%9F%A9%E9%98%B5%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8C%85ggcorrplot/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151730.png&#34; alt=&#34;&#34;&gt;
åºäº&lt;strong&gt;ggplot2&lt;/strong&gt;åä»¥å&lt;strong&gt;corrplot&lt;/strong&gt;åçç¸å³ç©éµå¯è§åå&lt;strong&gt;ggcorrplot&lt;/strong&gt;ï¼&lt;strong&gt;ggcorrplot&lt;/strong&gt;åæä¾å¯¹ç¸å³ç©éµéæåºä»¥åå¨ç¸å³å¾ä¸­å±ç¤ºæ¾èæ§æ°´å¹³çæ¹æ³ï¼åæ¶ä¹è½è®¡ç®ç¸å³æ§p-value&lt;/p&gt;
&lt;p&gt;å®è£æ¹æ³å°±ä¸æäºï¼ä¸æçå¯ä»¥æµè§æä»¥åç
&lt;a href=&#34;https://www.jianshu.com/p/678213d605a5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;æç« &lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggcorrplot)
#è®¡ç®ç¸å³ç©éµ(cor()è®¡ç®ç»æä¸æä¾p-value)
data(&amp;quot;mtcars&amp;quot;)
corr &amp;lt;- round(cor(mtcars), 1)
head(corr[, 1:6])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151744.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ç¨ggcorrplotåæä¾çå½æ°cor_pmat()
p.mat &amp;lt;- cor_pmat(mtcars)
head(p.mat[, 1:4])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151756.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¯è§åç¸å³æ§ç©éµ&#34;&gt;å¯è§åç¸å³æ§ç©éµ&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;ggcorrplot(corr)#methodé»è®¤ä¸ºsquare
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151810.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ¹æ³ä¸ºcircle
ggcorrplot(corr, method = &amp;quot;circle&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151820.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#éæç©éµï¼ä½¿ç¨åç­çº§èç±»
ggcorrplot(corr, hc.order = TRUE, outline.color = &amp;quot;white&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151833.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ§å¶ç©éµå½¢ç¶
ggcorrplot(corr, hc.order = TRUE, type = &amp;quot;lower&amp;quot;, outline.color = &amp;quot;white&amp;quot;)#ä¸ä¸è§å½¢
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151845.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¸ä¸è§å½¢
ggcorrplot(corr, hc.order = TRUE, type = &amp;quot;upper&amp;quot;, outline.color = &amp;quot;white&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151856.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ´æ¹é¢è²ä»¥åä¸»é¢
ggcorrplot(corr, hc.order = TRUE, type = &amp;quot;lower&amp;quot;, outline.color = &amp;quot;white&amp;quot;, 
ggtheme = ggplot2::theme_gray, colors = c(&amp;quot;#6D9EC1&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;#E46726&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151907.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ·»å ç¸å³ç³»æ°
ggcorrplot(corr, hc.order = TRUE, type = &amp;quot;lower&amp;quot;, lab = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151918.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¢å æ¾èæ§æ°´å¹³ï¼ä¸æ¾èçè¯å°±ä¸æ·»å äº
ggcorrplot(corr, hc.order = TRUE, type = &amp;quot;lower&amp;quot;, p.mat = p.mat)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151929.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å°ä¸æ¾èçè²åè®¾ç½®æç©ºç½
ggcorrplot(corr, p.mat = p.mat, hc.order=TRUE, type = &amp;quot;lower&amp;quot;, insig = &amp;quot;blank&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819151942.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rè¯­è¨å­¦ä¹ ç¬è®°ä¹ç¸å³æ§ç©éµåæåå¶å¯è§å</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%9B%B8%E5%85%B3%E6%80%A7%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90%E5%8F%8A%E5%85%B6%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E7%9B%B8%E5%85%B3%E6%80%A7%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90%E5%8F%8A%E5%85%B6%E5%8F%AF%E8%A7%86%E5%8C%96/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152129.png&#34; alt=&#34;&#34;&gt;
è®¡ç®ç¸å³ç©éµ&lt;/p&gt;
&lt;p&gt;Råç½®å½æ°&lt;code&gt;cor()&lt;/code&gt;å¯ä»¥ç¨æ¥è®¡ç®ç¸å³ç³»æ°ï¼&lt;code&gt;cor(x, method = c(&amp;quot;pearson&amp;quot;, &amp;quot;kendall&amp;quot;, &amp;quot;spearman&amp;quot;))&lt;/code&gt;ï¼å¦ææ°æ®æç¼ºå¤±å¼ï¼ç¨&lt;code&gt;cor(x, method = &amp;quot;pearson&amp;quot;, use = &amp;quot;complete.obs&amp;quot;)&lt;/code&gt;ã&lt;/p&gt;
&lt;h2 id=&#34;å¯¼å¥æ°æ®&#34;&gt;å¯¼å¥æ°æ®&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;å¦ææ°æ®æ ¼å¼æ¯txtï¼ç¨&lt;code&gt;my_data &amp;lt;- read.delim(file.choose())&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;csvåç¨&lt;code&gt;my_data &amp;lt;- read.csv(file.choose())&lt;/code&gt;å¯¼å¥ã 
è¿éæä»¬å©ç¨Råç½®æ°æ®é&lt;em&gt;mtcars&lt;/em&gt;ã&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;data(mtcars)#å è½½æ°æ®é
mydata &amp;lt;- mtcars[, c(1,3,4,5,6,7)]
head(mydata, 6)#æ¥çæ°æ®å6è¡
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152142.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;è®¡ç®ç¸å³ç³»æ°ç©éµ&#34;&gt;è®¡ç®ç¸å³ç³»æ°ç©éµ&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;res &amp;lt;- cor(mydata)
round(res, 2)#ä¿çä¸¤ä½å°æ°
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152151.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cor()&lt;/code&gt;åªè½è®¡ç®åºç¸å³ç³»æ°ï¼æ æ³ç»åºæ¾èæ§æ°´å¹³&lt;code&gt;p-value&lt;/code&gt;,&lt;strong&gt;Hmisc&lt;/strong&gt;
åéç&lt;code&gt;rcorr()&lt;/code&gt;å½æ°è½å¤åæ¶ç»åºç¸å³ç³»æ°ä»¥åæ¾èæ§æ°´å¹³&lt;code&gt;p-value&lt;/code&gt;ã&lt;code&gt;rcorr(x, type = c(âpearsonâ,âspearmanâ))&lt;/code&gt;ã&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The output of the function rcorr() is a list containing the following elements : - r : the correlation matrix - n : the matrix of the number of observations used in analyzing each pair of variables - P : the p-values corresponding to the significance levels of correlations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;library(Hmisc)#å è½½å
res2 &amp;lt;- rcorr(as.matrix(mydata))
res2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152203.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å¯ä»¥ç¨res2$rãres2$Pæ¥æåç¸å³ç³»æ°ä»¥åæ¾èæ§p-value
res2$r
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152215.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;res2$P
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152225.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;å¦ä½å°ç¸å³ç³»æ°ä»¥åæ¾èæ§æ°´å¹³p-valueæ´åè¿ä¸ä¸ªç©éµåï¼å¯ä»¥èªå®ä¹ä¸ä¸ªå½æ°&lt;code&gt;flattenCorrMatrix&lt;/code&gt;ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;# ++++++++++++++++++++++++++++
# flattenCorrMatrix
# ++++++++++++++++++++++++++++
# cormat : matrix of the correlation coefficients
# pmat : matrix of the correlation p-values
flattenCorrMatrix &amp;lt;- function(cormat, pmat) {
ut &amp;lt;- upper.tri(cormat) data.frame( row = rownames(cormat)[row(cormat)[ut]], 
column = rownames(cormat)[col(cormat)[ut]], cor =(cormat)[ut], p = pmat[ut] )
}
ä¸¾ä¸ªæ å­
---
res3 &amp;lt;- rcorr(as.matrix(mtcars[,1:7]))
flattenCorrMatrix(res3$r, res3$P)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152237.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¯è§åç¸å³ç³»æ°ç©éµ&#34;&gt;å¯è§åç¸å³ç³»æ°ç©éµ&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;æä¸åçæ¹æ³æ¥å¯è§åï¼ä¸»è¦æä¸é¢åç§ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;symnum()&lt;/em&gt;Â function&lt;/li&gt;
&lt;li&gt;&lt;em&gt;corrplot()&lt;/em&gt;Â function to plot a correlogram&lt;/li&gt;
&lt;li&gt;scatter plots&lt;/li&gt;
&lt;li&gt;heatmap&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;symnumfunction&#34;&gt;&lt;em&gt;symnum()&lt;/em&gt;Â function&lt;/h2&gt;
&lt;p&gt;ä¸»è¦ç¨æ³ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;symnum(x, cutpoints = c(0.3, 0.6, 0.8, 0.9, 0.95), symbols = c(&amp;quot; â,â.â,â,â,â+â,â*â,âBâ), 
abbr.colnames = TRUE) #å¾å¥½çè§£ï¼0-0.3ç¨ç©ºæ ¼è¡¨ç¤ºï¼ 0.3-0.6ç¨.è¡¨ç¤ºï¼ ä»¥æ­¤ç±»æ¨ã 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¸¾ä¸ªæ å­&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;symnum(res, abbr.colnames = FALSE)#abbr.colnamesç¨æ¥æ§å¶åå
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152251.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;corrplotfunction-to-plot-a-correlogram&#34;&gt;corrplot()Â function to plot a correlogram&lt;/h2&gt;
&lt;p&gt;è¿ä¸ªå½æ°æ¥èªäºåcorrplot()
,éè¿é¢è²æ·±æµæ¥æ¾èç¸å³ç¨åº¦ãåæ°ä¸»è¦æï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;type: âupperâ, âlowerâ, âfullâ,æ¾ç¤ºä¸ä¸è§è¿æ¯ä¸ä¸è§è¿æ¯å¨é¨&lt;/li&gt;
&lt;li&gt;order:ç¨ä»ä¹æ¹æ³ï¼è¿éæ¯&lt;em&gt;hclust&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;tl.col (for text label color) and tl.srt (for text label string rotation) :æ§å¶ææ¬é¢è²ä»¥åæè½¬è§åº¦&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;library(corrplot)#åå è½½å
corrplot(res, type = &amp;quot;upper&amp;quot;, order = &amp;quot;hclust&amp;quot;, tl.col = &amp;quot;black&amp;quot;, tl.srt = 45)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152302.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä¹å¯ä»¥ç»åæ¾èæ§ç»å¶&#34;&gt;ä¹å¯ä»¥ç»åæ¾èæ§ç»å¶&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Insignificant correlations are leaved blank
corrplot(res2$r, type=&amp;quot;upper&amp;quot;, order=&amp;quot;hclust&amp;quot;, p.mat = res2$P, sig.level = 0.01, insig = &amp;quot;blank&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152313.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;usechartcorrelation-draw-scatter-plots&#34;&gt;UseÂ &lt;em&gt;chart.Correlation()&lt;/em&gt;: Draw scatter plots&lt;/h2&gt;
&lt;p&gt;*chart.Correlation()*æ¥èªäºå&lt;strong&gt;PerformanceAnalytics&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(PerformanceAnalytics)#å è½½å
chart.Correlation(mydata, histogram=TRUE, pch=19)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152327.png&#34; alt=&#34;&#34;&gt;
è§£éä¸ä¸ä¸å¾ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;å¯¹è§çº¿ä¸æ¾ç¤ºçæ¯åå¸å¾&lt;/li&gt;
&lt;li&gt;å·¦ä¸é¨æ¾ç¤ºçæ¯å·ææåçº¿çååéæ£ç¹å¾&lt;/li&gt;
&lt;li&gt;å³ä¸é¨æ¾ç¤ºçæ¯ç¸å³ç³»æ°ä»¥åæ¾èæ§æ°´å¹³&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;heatmap&#34;&gt;heatmap()&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;col&amp;lt;- colorRampPalette(c(&amp;quot;blue&amp;quot;, &amp;quot;white&amp;quot;, &amp;quot;red&amp;quot;))(20)#è°ç¨é¢è²çèªå®ä¹é¢è²
heatmap(x = res, col = col, symm = TRUE)#symmè¡¨ç¤ºæ¯å¦å¯¹ç§°
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152339.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rè¯­è¨å­¦ä¹ ç¬è®°ä¹èç±»åæ</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152418.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä½¿ç¨&lt;code&gt;k-means&lt;/code&gt;èç±»æéçåï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;factoextra&lt;/li&gt;
&lt;li&gt;cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;å è½½å&#34;&gt;å è½½å&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;library(factoextra)
library(cluster)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;æ°æ®åå¤&#34;&gt;æ°æ®åå¤&lt;/h2&gt;
&lt;p&gt;ä½¿ç¨åç½®çRæ°æ®é&lt;code&gt;USArrests&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#load the dataset
data(&amp;quot;USArrests&amp;quot;)
#remove any missing value (i.e, NA values for not available)
#That might be present in the data
USArrests &amp;lt;- na.omit(USArrests)#view the first 6 rows of the data
head(USArrests, n=6)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152431.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;å¨æ­¤æ°æ®éä¸­ï¼åæ¯åéï¼è¡æ¯è§æµå¼&lt;/strong&gt;
å¨èç±»ä¹åæä»¬å¯ä»¥åè¿è¡ä¸äºå¿è¦çæ°æ®æ£æ¥å³æ°æ®æè¿°æ§ç»è®¡ï¼å¦å¹³åå¼ãæ åå·®ç­&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;desc_stats &amp;lt;- data.frame( Min=apply(USArrests, 2, min),#minimum
Med=apply(USArrests, 2, median),#median 
Mean=apply(USArrests, 2, mean),#mean 
SD=apply(USArrests, 2, sd),#Standard deviation 
Max=apply(USArrests, 2, max)#maximum
)
desc_stats &amp;lt;- round(desc_stats, 1)#ä¿çå°æ°ç¹åä¸ä½head(desc_stats)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152442.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;åéæå¾å¤§çæ¹å·®ååå¼æ¶éè¿è¡æ åå&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;df &amp;lt;- scale(USArrests)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;æ°æ®éç¾¤æ§è¯ä¼°&#34;&gt;æ°æ®éç¾¤æ§è¯ä¼°&lt;/h2&gt;
&lt;p&gt;ä½¿ç¨&lt;code&gt;get_clust_tendency()&lt;/code&gt;è®¡ç®&lt;code&gt;Hopkins&lt;/code&gt;ç»è®¡é&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;res &amp;lt;- get_clust_tendency(df, 40, graph = TRUE)
res$hopkins_stat
## [1] 0.3440875
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;#Visualize the dissimilarity matrix
res$plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152453.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hopkinsç»è®¡éçå¼&amp;lt;0.5ï¼è¡¨ææ°æ®æ¯é«åº¦å¯èåçãå¦å¤ï¼ä»å¾ä¸­ä¹å¯ä»¥çåºæ°æ®å¯èåã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;ä¼°è®¡èåç°æ°&#34;&gt;ä¼°è®¡èåç°æ°&lt;/h2&gt;
&lt;p&gt;ç±äºkåå¼èç±»éè¦æå®è¦çæçèç±»æ°éï¼å æ­¤æä»¬å°ä½¿ç¨å½æ°&lt;code&gt;clusGap()&lt;/code&gt;æ¥è®¡ç®ç¨äºä¼°è®¡æä¼èç±»æ°ãå½æ°&lt;code&gt;fviz_gap_stat()&lt;/code&gt;ç¨äºå¯è§åã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set.seed(123)
## Compute the gap statistic
gap_stat &amp;lt;- clusGap(df, FUN = kmeans, nstart = 25, K.max = 10, B = 500) 
# Plot the result
fviz_gap_stat(gap_stat)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152509.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;å¾ä¸­æ¾ç¤ºæä½³ä¸ºèæåç±»ï¼k=4ï¼&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;è¿è¡èç±»&#34;&gt;è¿è¡èç±»&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;set.seed(123)
km.res &amp;lt;- kmeans(df, 4, nstart = 25)
head(km.res$cluster, 20)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152521.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Visualize clusters using factoextra
fviz_cluster(km.res, USArrests)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152531.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æ£æ¥cluster-silhouetteå¾&#34;&gt;æ£æ¥&lt;code&gt;cluster silhouette&lt;/code&gt;å¾&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Recall that the silhouette measures (SiSi) how similar an object ii is to the the other objects in its own cluster versus those in the neighbor cluster. SiSi values range from 1 to - 1:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A value of SiSi close to 1 indicates that the object is well clustered. In the other words, the object ii is similar to the other objects in its group.&lt;/li&gt;
&lt;li&gt;A value of SiSi close to -1 indicates that the object is poorly clustered, and that assignment to some other cluster would probably improve the overall results.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sil &amp;lt;- silhouette(km.res$cluster, dist(df))
rownames(sil) &amp;lt;- rownames(USArrests)
head(sil[, 1:3])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152544.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#Visualize 
fviz_silhouette(sil)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152555.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152605.png&#34; alt=&#34;&#34;&gt;
å¾ä¸­å¯ä»¥çåºæè´å¼ï¼å¯ä»¥éè¿å½æ°&lt;code&gt;silhouette()&lt;/code&gt;ç¡®å®æ¯åªä¸ªè§æµå¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;neg_sil_index &amp;lt;- which(sil[, &amp;quot;sil_width&amp;quot;] &amp;lt; 0)
sil[neg_sil_index, , drop = FALSE]
##          cluster    neighbor     sil_width
## Missouri    3          2        -0.07318144
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;eclustå¢å¼ºçèç±»åæ&#34;&gt;&lt;strong&gt;eclust()&lt;/strong&gt;:å¢å¼ºçèç±»åæ&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;ä¸å¶ä»èç±»åæåç¸æ¯ï¼&lt;code&gt;eclust()&lt;/code&gt;æä»¥ä¸ä¼ç¹ï¼&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ç®åäºèç±»åæçå·¥ä½æµç¨&lt;/li&gt;
&lt;li&gt;å¯ä»¥ç¨äºè®¡ç®å±æ¬¡èç±»åååºèç±»&lt;/li&gt;
&lt;li&gt;eclust()èªå¨è®¡ç®æä½³èç±»ç°æ°ã&lt;/li&gt;
&lt;li&gt;èªå¨æä¾Silhouette plot&lt;/li&gt;
&lt;li&gt;å¯ä»¥ç»åggplot2ç»å¶ä¼ç¾çå¾å½¢&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ä½¿ç¨eclustçkåå¼èç±»&#34;&gt;ä½¿ç¨eclust()ç&lt;strong&gt;K&lt;/strong&gt;åå¼èç±»&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Compute k-means
res.km &amp;lt;- eclust(df, &amp;quot;kmeans&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152616.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Gap statistic plot
fviz_gap_stat(res.km$gap_stat)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152628.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Silhouette plotfviz_silhouette(res.km)

##    cluster size ave.sil.width
## 1     1     13      0.31
## 2     2     29      0.38
## 3     3      8      0.39
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152638.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ä½¿ç¨eclustçå±æ¬¡èç±»&#34;&gt;ä½¿ç¨**eclustï¼ï¼**çå±æ¬¡èç±»&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# Enhanced hierarchical clustering
res.hc &amp;lt;- eclust(df, &amp;quot;hclust&amp;quot;) # compute hclust
fviz_dend(res.hc, rect = TRUE) # dendrogam
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152649.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ä¸é¢çRä»£ç çæSilhouette plotååå±èç±»æ£ç¹å¾ã
fviz_silhouette(res.hc) # silhouette plot
##   cluster size ave.sil.width
## 1    1     19      0.26
## 2    2     19      0.28
## 3    3     12      0.43
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152702.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fviz_cluster(res.hc) # scatter plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152713.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;infos&#34;&gt;Infos&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;This analysis has been performed using R software (R version 3.3.2)&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>âRè¯­è¨å¯è§åå­¦ä¹ ç¬è®°ä¹ggrepelåâ</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bggrepel%E5%8C%85/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.r%E8%AF%AD%E8%A8%80%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8Bggrepel%E5%8C%85/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152751.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å½æä»¬å¨å¾å½¢ä¸­æ·»å æ ç­¾æ¶ï¼æ ç­¾ä¹é´å¾å®¹æç¸äºéå ï¼å
&lt;a href=&#34;https://github.com/slowkow/ggrepel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggrepel&lt;/strong&gt;&lt;/a&gt;å°±ä¸é¨ç¨æ¥è§£å³è¿ä¸ªé®é¢ï¼ é¦åæä»¬æ¥ççéè¿geom_text()æ·»å æ ç­¾æ¶çæå½¢ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggplot2)
#ä½¿ç¨æ°æ®émtcarsæ¼ç¤º
ggplot(mtcars)+ geom_point(aes(wt, mpg), color=&amp;quot;red&amp;quot;)+ 
geom_text(aes(wt, mpg, label=rownames(mtcars)))+ 
theme_classic(base_size = 16)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152803.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¯ä»¥çå°å¯è§åææä¸æ¯å¾å¥½ãæ¥ä¸æ¥ççå&lt;strong&gt;ggrepel&lt;/strong&gt;çææã
geom_text_repel()æ¯åºäºgeom_text()&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(ggrepel)
set.seed(42)
ggplot(mtcars)+ geom_point(aes(wt, mpg), color=&amp;quot;red&amp;quot;)+ 
geom_text_repel(aes(wt, mpg, label=rownames(mtcars)))+
theme_classic(base_size = 16)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152818.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;geom_label_repel&#34;&gt;geom_label_repel()&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;geom_label_repel()æ¯åºäºgeom_label(),å®å°æ ç­¾ç½®äºä¸ä¸ªå°æ¹æ¡ä¸­&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set.seed(42)
ggplot(mtcars)+ geom_point(aes(wt, mpg), color=&amp;quot;grey&amp;quot;, size=5)+
geom_label_repel(aes(wt, mpg, fill=factor(cyl), 
label=rownames(mtcars)), fontface=&amp;quot;bold&amp;quot;, color=&amp;quot;white&amp;quot;, 
box.padding=unit(0.35, &amp;quot;lines&amp;quot;), point.padding=unit(0.5, &amp;quot;lines&amp;quot;), 
segment.colour = &amp;quot;grey50&amp;quot;)+ theme_classic(base_size = 16)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152830.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;åæ°&#34;&gt;åæ°&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;å¤§é¨å&lt;code&gt;geom_text()&lt;/code&gt;çåæ°é½éç¨äº&lt;code&gt;geom_text_repel()&lt;/code&gt;,é¤äºä»¥ä¸å ä¸ªï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hjust&lt;/li&gt;
&lt;li&gt;vjust&lt;/li&gt;
&lt;li&gt;position&lt;/li&gt;
&lt;li&gt;check_overlap&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ggrepel&lt;/strong&gt;åä¸º&lt;code&gt;geom_text_repel()&lt;/code&gt;ä¸&lt;code&gt;geom_label_repel()&lt;/code&gt;æä¾äºç¹æçåæ°è®¾ç½®ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;segment.color:è¿æ¥ç¹ä¸æ ç­¾ççº¿æ®µçé¢è²&lt;/li&gt;
&lt;li&gt;segment.size:çº¿æ®µçç²ç»&lt;/li&gt;
&lt;li&gt;segment.alpha:çº¿æ®µçéæåº¦&lt;/li&gt;
&lt;li&gt;box.padding:ææ¬æ¡å¨è¾¹å¡«å&lt;/li&gt;
&lt;li&gt;point.padding:ç¹å¨å´å¡«å&lt;/li&gt;
&lt;li&gt;arrow:grid:arrowæä¾çç®­å¤´&lt;/li&gt;
&lt;li&gt;force:å¼ºå¶æ§å°éå ææ¬æ£å¼&lt;/li&gt;
&lt;li&gt;max.oter:æå¤§è¿­ä»£æ¬¡æ°&lt;/li&gt;
&lt;li&gt;nudge_x/y:æ ç­¾å¼å§ä½ç½®å¨åæ è½´çç§»å¨è·ç¦»&lt;/li&gt;
&lt;li&gt;direction:åè®¸æ ç­¾çæ¹åï¼xãy or both&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ä¸é¢ä¸¾ä¸ªæ å­æ¥è¯¦ç»äºè§£è¿äºåæ°çå¾å½¢ææ&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set.seed(42)
ggplot(mtcars)+ geom_point(aes(wt, mpg, color=factor(cyl)), size=3)+
geom_text_repel(aes(wt, mpg, color=factor(cyl), 
label=rownames(mtcars), angle=ifelse(mtcars$cyl==4, 90, 0)), 
size=4, family=&amp;quot;Times&amp;quot;, fontface=&amp;quot;bold&amp;quot;, 
box.padding=unit(0.5, &amp;quot;lines&amp;quot;), point.padding=unit(1.6, &amp;quot;lines&amp;quot;), 
segment.color = &amp;quot;#cccccc&amp;quot;, segment.size = 0.5, 
arrow = arrow(length=unit(0.01, &amp;quot;npc&amp;quot;)),force = 1, max.iter = 3e3, 
nudge_x = ifelse(mtcars$cyl==6, 2, 0), nudge_y = ifelse(mtcars$cyl==6, 9, 0))+ 
scale_color_discrete(name=&amp;quot;cyl&amp;quot;)+ 
scale_x_continuous(expand = c(0.5, 0))+ 
scale_y_continuous(expand = c(0.25, 0))+ 
theme_classic(base_size = 16)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152841.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;ä¹å¯ä»¥éè¿è®¾ç½®åæ°&lt;code&gt;point.padding=NA&lt;/code&gt;ä¸å¯¹ç¹è¿è¡&lt;strong&gt;repel&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set.seed(42)
mtcars$label &amp;lt;- rownames(mtcars)
ggplot(mtcars, aes(wt, mpg, label=label))+ 
geom_point(color=&amp;quot;red&amp;quot;)+ geom_text_repel(point.padding = NA)+
theme_classic(base_size = 16)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152856.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;éè¿èµå¼æäº&lt;strong&gt;label&lt;/strong&gt;ç©ºå­ç¬¦ââæ¥éèã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set.seed(42)
mtcars$label &amp;lt;- rownames(mtcars)
mtcars$label[1:15] &amp;lt;- &amp;quot;&amp;quot;
ggplot(mtcars, aes(wt, mpg))+ geom_point(aes(color=factor(cyl)), size=2)+
geom_text_repel(aes(color=factor(cyl), size=hp, label=label), 
point.padding = unit(0.25, &amp;quot;lines&amp;quot;), box.padding = unit(0.25, &amp;quot;lines&amp;quot;), 
nudge_y = 0.1)+ theme_classic(base_size = 16)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152907.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å°æ ç­¾æ§å¶å¨ç¹å®åºå&#34;&gt;å°æ ç­¾æ§å¶å¨ç¹å®åºå&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;éè¿è®¾ç½®åæ°xlimåylimæ¥éå¶labelçä½ç½®&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set.seed(42)
data &amp;lt;- mtcars
mu &amp;lt;- mean(data$wt)
left &amp;lt;- data[data$wt &amp;lt;mu, ]
right &amp;lt;- data[data$wt&amp;gt;=mu, ]
ggplot()+ geom_vline(xintercept = mu)+ 
geom_point(aes(wt, mpg), data=data)+ 
geom_text_repel(data=left, aes(wt, mpg, label=rownames(left), 
color=&amp;quot;Left half&amp;quot;), xlim=c(NA, mu))+ 
geom_text_repel(data=right, aes(wt, mpg, label=rownames(right), 
color=&amp;quot;Rigth half&amp;quot;), xlim=c(mu, NA))+ theme_classic(base_size = 16)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152930.png&#34; alt=&#34;&#34;&gt;
éè¿æ§å¶åæ°directionæ¥å³å®labelæ¯å·¦å³ç§»å¨è¿æ¯ä¸ä¸ç§»å¨ï¼ é»è®¤æ¯both&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;set.seed(42)
#direction=&amp;quot;x&amp;quot; å·¦å³ç§»å¨
ggplot(mtcars)+
  geom_point(aes(wt, mpg), color=&amp;quot;red&amp;quot;)+
  geom_text_repel(aes(wt, mpg, label=rownames(mtcars)), direction=&amp;quot;x&amp;quot;)+
  theme_classic(base_size = 16)+xlim(1, 6)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152944.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#direction=&amp;quot;x&amp;quot; ä¸ä¸ç§»å¨
ggplot(mtcars)+
  geom_point(aes(wt, mpg), color=&amp;quot;red&amp;quot;)+
  geom_text_repel(aes(wt, mpg, label=rownames(mtcars)), direction=&amp;quot;y&amp;quot;)+
  theme_classic(base_size = 16)+xlim(1, 6)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819152956.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;çº¿å¾&#34;&gt;çº¿å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;set.seed(42)
ggplot(Orange, aes(age, circumference, color=Tree))+
  geom_line()+
  coord_cartesian(xlim=c(min(Orange$age), max(Orange$age)+90))+
  geom_text_repel(data=subset(Orange, age==max(age)),
                  aes(label=paste(&amp;quot;Tree&amp;quot;, Tree)),size=6, nudge_x = 45, segment.color = NA)+
  theme_classic(base_size = 16)+
  theme(legend.position = &amp;quot;none&amp;quot;)+
  labs(title=&amp;quot;Orange Trees&amp;quot;, x=&amp;quot;Age(days)&amp;quot;, y=&amp;quot;Circumference(mm)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819153011.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
## R version 3.4.0 (2017-04-21)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 8.1 x64 (build 9600)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936 
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C 
## [5] LC_TIME=Chinese (Simplified)_China.936 
## 
## attached base packages:
## [1] stats graphics grDevices utils datasets methods base 
##
## other attached packages:
## [1] ggrepel_0.6.5 ggplot2_2.2.1
## 
## loaded via a namespace (and not attached):
## [1] Rcpp_0.12.11 digest_0.6.12 rprojroot_1.2 plyr_1.8.4 
## [5] grid_3.4.0 gtable_0.2.0 backports_1.1.0 magrittr_1.5 
## [9] evaluate_0.10 scales_0.4.1 rlang_0.1.1 stringi_1.1.5 
## [13] lazyeval_0.2.0 rmarkdown_1.5 labeling_0.3 tools_3.4.0 
## [17] stringr_1.2.0 munsell_0.4.3 yaml_2.1.14 compiler_3.4.0 
## [21] colorspace_1.3-2 htmltools_0.3.6 knitr_1.16 tibble_1.3.3
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>å¾åå¤çRåmagickå­¦ä¹ ç¬è®°</title>
      <link>https://taoyan.netlify.app/post/2017-09-03.%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86r%E5%8C%85magick%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-09-03.%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86r%E5%8C%85magick%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/a2jGAc87jB.gif?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç®ä»&#34;&gt;ç®ä»&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;æ¬æä¸»è¦ç®åä»ç»ä¸ä¸magickåï¼ä¸»è¦ç¨äºå¾åå¤ç&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#å®è£çè¯å°±ç´æ¥ä»CRANå®è£è¿è¡
install.packages(&amp;quot;magick&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Load the package
library(magick)
#æ¥çæ¯æåªäºæ ¼å¼
str(magick_config())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## List of 21
##  $ version           :Class &#39;numeric_version&#39;  hidden list of 1
##   ..$ : int [1:4] 6 9 9 9
##  $ modules           : logi FALSE
##  $ cairo             : logi TRUE
##  $ fontconfig        : logi FALSE
##  $ freetype          : logi TRUE
##  $ fftw              : logi TRUE
##  $ ghostscript       : logi TRUE
##  $ jpeg              : logi TRUE
##  $ lcms              : logi TRUE
##  $ libopenjp2        : logi FALSE
##  $ lzma              : logi TRUE
##  $ pangocairo        : logi TRUE
##  $ pango             : logi TRUE
##  $ png               : logi TRUE
##  $ rsvg              : logi TRUE
##  $ tiff              : logi TRUE
##  $ webp              : logi TRUE
##  $ wmf               : logi FALSE
##  $ x11               : logi FALSE
##  $ xml               : logi TRUE
##  $ zero-configuration: logi FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯ä»¥çåºå¤§é¨åæ ¼å¼é½æ¯æ¯æç&lt;/p&gt;
&lt;h2 id=&#34;è¯»åå¾å&#34;&gt;è¯»åå¾å&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;è¯»åçè¯å¯ä»¥ç´æ¥ä»æ¬å°è¯»åï¼ä¹å¯ä»¥è¯»åURLæ ¼å¼çå¾çï¼ä¸»è¦éè¿image_read()æ¥è¯»åï¼image_info()åå¯ä»¥æ¾ç¤ºå¾åçä¸äºå±æ§æ°æ®ã&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#è¯»åç½ä¸éä¾¿éçå¾ç
night_king &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/ha6Cchfk38.jpg?raw=true&amp;quot;)
image_info(night_king)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   format width height colorspace filesize
## 1   JPEG   189    267       sRGB     6449
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;#éè¿image_write()å¯ä»¥è®²å¾çä»¥ä»»ä½æ ¼å¼è¾åºï¼æ¯å¦å°åè¯»åçå¾çä»¥pngæ ¼å¼è¾åºã
image_write(night_king, path = &amp;quot;night_king.png&amp;quot;, format = &amp;quot;png&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;è½¬æ¢æ ¼å¼&#34;&gt;è½¬æ¢æ ¼å¼&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;éè¿image_convert()å¯ä»¥å°å¾çè½¬æ¢ä¸ºæä»¬éè¦çæ ¼å¼ï¼æ¯å¦è¿éæä»¬å¯ä»¥å°night_kingçæ ¼å¼è½¬æ¢ä¸ºpngæ ¼å¼&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;night_king.png &amp;lt;- image_convert(night_king, &amp;quot;png&amp;quot;)
image_info(night_king.png)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   format width height colorspace filesize
## 1    PNG   189    267       sRGB        0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;å¯ä»¥çå°è¿éçfilesizeä¸º0ï¼ç´å°è¢«æ¸²æï¼è¿éæ¶åå°ImageMagickæ¹é¢ï¼æä¸æ¯å¾æï¼ã&lt;/p&gt;
&lt;h2 id=&#34;é¢è§&#34;&gt;é¢è§&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;å¨RStudioä¸­å¯ä»¥æ¥çæä»¬è¯»åçå¾ç&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1kEj0h191l.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;è½¬æ¢transformations&#34;&gt;è½¬æ¢(transformations)&lt;/h2&gt;
&lt;p&gt;magickæä¾ä¸ç³»åå½æ°å¯¹å¾çè¿è¡è£åªä»¥åç¼è¾ï¼ä¸»è¦æä»¥ä¸å½æ°ï¼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;image_crop(image, &amp;ldquo;100x150+50&amp;rdquo;):è£åª&lt;/li&gt;
&lt;li&gt;image_scale(image, &amp;ldquo;200&amp;rdquo;):æå®½æ¯ä¾è¿è¡æ¾å¤§ç¼©å°&lt;/li&gt;
&lt;li&gt;image_scale(image, &amp;ldquo;x200&amp;rdquo;):æé«æ¯ä¾è¿è¡æ¾å¤§ç¼©å°&lt;/li&gt;
&lt;li&gt;image_fill(image, &amp;ldquo;blue&amp;rdquo;, &amp;ldquo;+100+200&amp;rdquo;):å¯¹ç¹å®é¨ä½çè²&lt;/li&gt;
&lt;li&gt;image_border(image, &amp;ldquo;red&amp;rdquo;, &amp;ldquo;20x10&amp;rdquo;):æ·»å è¾¹æ¡&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ä¸é¢æä»¬æ¥è¯è¯è¿äºå½æ°&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Example image
wolf &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/4h96Df21AI.png?raw=true&amp;quot;)
print(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/4h96Df21AI.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Add 20px left/right and 10px top/bottom
image_border(image_background(wolf, &amp;quot;hotpink&amp;quot;), &amp;quot;#000080&amp;quot;, &amp;quot;20x10&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/6LE8j4jECf.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#trim margins
image_trim(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/HB0lELbmhE.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#è£åª
image_crop(wolf, &amp;quot;500x300+50&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/f05HDcIG4d.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Resize
image_scale(wolf, &amp;quot;300&amp;quot;)#width:300px
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/KjfE0bhl7H.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Resize
image_scale(wolf, &amp;quot;x300&amp;quot;)#heigth:300px
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/0me686bm2e.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Rotate or mirror
image_rotate(wolf, 45)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/1H6D4bjKbm.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Flip
image_flip(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/4CGL43f8AK.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Flop
image_flop(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/Cg4hL5Hi72.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Paint 
image_fill(wolf, &amp;quot;red&amp;quot;, point = &amp;quot;+190+100&amp;quot;, fuzz = 4000)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/fd7IfD0m2a.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;è¿ä¸ªå½æ°æé¾ææ¡ï¼ææ¬æ¥æ¯æ³å°wolfçç¼çæ¸²ææçº¢è²ï¼ä½æ¯ä¸æ­è°æ´pointä»¥åfuzzé½æ²¡å¼æï¼æå´è¶£çå¯ä»¥èªå·±æ£é¼æ£é¼ã&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Add randomness
image_blur(wolf, 10, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/k5EF1DA9Lk.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å¯ä»¥éè¿è°æ´åæ°æ¥è®¾ç½®æ¨¡ç³åº¦&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;image_noise(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/D92FH0I3G1.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Silly filters
image_charcoal(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/KAEA3gIIF0.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;image_oilpaint(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/ACD0Fg5675.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;image_negate(wolf)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/kILkaEe9kl.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æå­æ³¨é&#34;&gt;æå­æ³¨é&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Add some text on the image
image_annotate(wolf, &amp;quot;I am the King of wolf&amp;quot;, size=25, gravity = &amp;quot;southeast&amp;quot;, color=&amp;quot;gold&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/dfc3iB0E3D.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;èªå®ä¹text&#34;&gt;èªå®ä¹text&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#customize the text
image_annotate(wolf, &amp;quot;I am the King&amp;quot;, size=30, color=&amp;quot;red&amp;quot;, boxcolor = &amp;quot;pink&amp;quot;, degrees = 45, location = &amp;quot;+30+30&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/59CEEa0gm0.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;è®¾ç½®å­ä½&#34;&gt;è®¾ç½®å­ä½&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;#Set the font times-new-roman
image_annotate(wolf, &amp;quot;I am the King&amp;quot;, size=30, color=&amp;quot;red&amp;quot;, boxcolor = &amp;quot;pink&amp;quot;, degrees = 45, location = &amp;quot;+30+30&amp;quot;, font = &#39;times-new-roman&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/BIbiF712bE.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç®¡éæä½&#34;&gt;ç®¡éæä½&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;ä½ æ²¡çéï¼magickæ¯æç®¡éæä½ï¼ä¸é¢è¯è¯&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;library(magrittr)
wolf%&amp;gt;%
  image_rotate(270)%&amp;gt;%
  image_background(&amp;quot;white&amp;quot;, flatten = TRUE)%&amp;gt;%
  image_border(&amp;quot;red&amp;quot;, &amp;quot;10x10&amp;quot;)%&amp;gt;%
  image_annotate(&amp;quot;I am the King&amp;quot;, color=&#39;red&#39;, size = 25, location = &amp;quot;+100+300&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/mEG1lL005b.png?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¾çåé&#34;&gt;å¾çåé&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;magické¤äºæ¯æç®¡éæä½å¤ï¼è¿æ¯æå¾å±å å ãæ¼å¾ä»¥åå¨å¾å¤çï¼æ¥ä¸ªç»å¸çå¨æå°ç&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;earth &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/a9CjAEGiC5.gif&amp;quot;)
length(earth)
print(earth)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/a9CjAEGiC5.gif?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;rev(earth) %&amp;gt;% 
  image_flip() %&amp;gt;% 
  image_annotate(&amp;quot;This is the Earth&amp;quot;, size = 20, color = &amp;quot;white&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ä¸ç¥ä»ä¹é¬¼ï¼å¾çç«ç¶æ¾ç¤ºåºæ¥ä¹±çï¼çµèæ¸£çè¯è¿æ¯å«æå¨ç»&lt;/p&gt;
&lt;h2 id=&#34;å¾å±&#34;&gt;å¾å±&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;bigdata &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/JclK3efbB3.jpg?raw=true&amp;quot;)
logo &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/JdjdB88CLm.png?raw=true&amp;quot;)
frink &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/E5fbmb1FIb.png?raw=true&amp;quot;)
img &amp;lt;- c(bigdata, logo, frink)
img &amp;lt;- image_scale(img, &amp;quot;300x300&amp;quot;)
image_mosaic(img)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/EE0CEL1K57.jpeg?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¨ç»&#34;&gt;å¨ç»&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;image_animate(image_scale(img, &amp;quot;200x200&amp;quot;), fps = 1, dispose = &amp;quot;previous&amp;quot;)#fpsæ§å¶æ¾æ éåº¦
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/0Bi5fCJBE5.gif?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;éå¾å¨å¾&#34;&gt;éå¾+å¨å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;éå¾å°±ç¨æä»¥åç»å¶è¿çï¼å·ä½å¯ç
&lt;a href=&#34;https://ytlogos.github.io/2017/08/24/ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%9B%BE%E5%BD%A2%E6%8E%92%E5%88%97/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;åå®¢&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;image1 &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/kLeL888DbI.png?raw=true&amp;quot;)
dance_man &amp;lt;- image_read(&amp;quot;https://github.com/YTLogos/Pic_blog/blob/master/86iEDe36lf.gif?raw=true&amp;quot;)
dance_man &amp;lt;- image_scale(dance_man, &amp;quot;200&amp;quot;)
#Background image
background &amp;lt;- image_background(image_scale(image1, &amp;quot;800&amp;quot;), &amp;quot;white&amp;quot;, flatten = TRUE)
#Combine and flatten frames
frames &amp;lt;- image_apply(dance_man, function(frame){
  image_composite(background, frame, offset = &amp;quot;+500+270&amp;quot;)
})
#Turn frames into animation
animation &amp;lt;- image_animate(frames, fps = 10)
print(animation)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://github.com/YTLogos/Pic_blog/blob/master/a2jGAc87jB.gif?raw=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;è¿æä¸äºæè¶£çåè½è¿éæå°±ä¸è®²äºï¼æå´è¶£çå¯ä»¥è¯è¯ï¼è¿æ¯å¾å¥½ç©çã&lt;/p&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;SessionInfo&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;sessionInfo()

## R version 3.4.1 (2017-06-30)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 10 x64 (build 15063)
## 
## Matrix products: default
## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936   
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C                              
## [5] LC_TIME=Chinese (Simplified)_China.936    
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
## [1] magrittr_1.5 magick_1.2  
## 
## loaded via a namespace (and not attached):
##  [1] compiler_3.4.1  backports_1.1.0 rprojroot_1.2   tools_3.4.1    
##  [5] htmltools_0.3.6 curl_2.8.1      yaml_2.1.14     Rcpp_0.12.12   
##  [9] stringi_1.1.5   rmarkdown_1.6   knitr_1.17      stringr_1.2.0  
## [13] digest_0.6.12   evaluate_0.10.1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ç¨circlizeåç»å¶circos-plot</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.%E7%94%A8circlize%E5%8C%85%E7%BB%98%E5%88%B6circos-plot/</link>
      <pubDate>Sun, 25 Jun 2017 12:34:08 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.%E7%94%A8circlize%E5%8C%85%E7%BB%98%E5%88%B6circos-plot/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145001.png&#34; alt=&#34;&#34;&gt;
&lt;code&gt;circlize&lt;/code&gt;å&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;circlize&lt;/code&gt;åå¨å¾·å½ççä¸­å¿çåäººåå£«Zuguang Guå¼åçï¼æå´è¶£çå¯ä»¥å»ççä»ç
&lt;a href=&#34;https://github.com/jokergoo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Githubä¸»é¡µ&lt;/a&gt;ãè¿ä¸ªåæä¸¤ä¸ªææ¡£ï¼ä¸ä¸ªæ¯ä»ç»åºæ¬åççç»å¶ç®å
&lt;a href=&#34;https://cran.r-project.org/web/packages/circlize/vignettes/circlize.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ååå¾&lt;/a&gt;çï¼ä¹æ¯æ¬æ¬¡è¦ä»ç»çãå¦å¤ä¸ä»½ææ¡£ä¸é¨ä»ç»åºå ç»æ°æ®ç»å¶ååå¾
&lt;a href=&#34;https://cran.r-project.org/web/packages/circlize/vignettes/genomic_plot.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Genomic Circos Plot&lt;/a&gt;,æèªå·±è¿æ²¡çå®ï¼ä¸æ¬¡åä»ç»ã
æ ¹æ®æçå­¦ä¹ åç°è¿ä¸ªåä¸&lt;code&gt;ggplot2&lt;/code&gt;å¾ç¸ä¼¼ï¼ä¹æ¯ååå»ºä¸ä¸ªå¾å±ï¼ç¶åä¸æ­çæ·»å å¾å½¢åç´ ï¼&lt;code&gt;point&lt;/code&gt;ã&lt;code&gt;line&lt;/code&gt;ã&lt;code&gt;bar&lt;/code&gt;ç­ï¼ï¼è¿äºç®åçå¾å½¢åç´ é½æ&lt;code&gt;circos.&lt;/code&gt;è¿ä¸ªåç¼è¿è¡ç»å¶ï¼æ¯å¦è¦ç»å¶ç¹ï¼åç¨&lt;code&gt;circos.points()&lt;/code&gt;ãå·ä½çä¸é¢ä¸ä¸ä»ç»ã&lt;/p&gt;
&lt;h2 id=&#34;ç¨circlizeç»å¶ååå¾&#34;&gt;ç¨&lt;code&gt;circlize&lt;/code&gt;ç»å¶ååå¾&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;ç§ä¾ï¼æ²¡æå®è£è¿ä¸ªåçåå®è£ï¼&lt;code&gt;install.packages(&amp;quot;circlize&amp;quot;)&lt;/code&gt;æè&lt;code&gt;devtools::install_github(&amp;quot;jokergoo/circlize&amp;quot;)&lt;/code&gt;ãç»å¾ç¬¬ä¸æ­¥æ¯ååå§å(&lt;code&gt;circos.initialize&lt;/code&gt;),æ¥ä¸æ¥ç»å¶&lt;code&gt;track&lt;/code&gt;ï¼åæ·»å åºæ¬åç´ ãéè¦æä¸ä¸çæ¯ï¼ç±äº&lt;code&gt;circlize&lt;/code&gt;ç»å¶å¾æ¯ä¸æ­å å çï¼å æ­¤å¦ææä»¬ä¸å¤§æ®µä»£ç ä¸æ¥æä»¬åªè½çå°æç»çå¾å½¢ï¼è¿éä¸ºäºæ¼ç¤ºæ¯ç«¯ä»£ç çç»æï¼æä»¥æ¯æ¬¡æé½å¾åå§åä»¥å&lt;code&gt;circlize.clear&lt;/code&gt;ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;library(circlize)
# ç®ååå»ºä¸ä¸ªæ°æ®é
set.seed(999)
n &amp;lt;- 1000
a &amp;lt;- data.frame(factors = sample(letters[1:8], n, replace = TRUE), x = rnorm(n), y = runif(n))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ç»å¶ç¬¬ä¸ä¸ªtrack&#34;&gt;ç»å¶ç¬¬ä¸ä¸ª&lt;code&gt;track&lt;/code&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)
circos.par(track.height = 0.1)
circos.initialize(factors = a$factors, x = a$x) #åå§åï¼factorsæ¥æ§å¶trackæ°ç®ï¼åå§åéåªæxï¼ æ²¡æyãè¿ä¸æ­¥ç¸å½äºggplot()
circos.trackPlotRegion(factors = a$factors, y = a$y, 
panel.fun = function(x, y) { 
circos.axis()})
col &amp;lt;- rep(c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00FF00&amp;quot;), 4) #èªå®ä¹ä¸ä¸é¢è²# è¿éåè§£éä¸ä¸ï¼ä¸ä¸ªtrackæå¥½å ä¸ªcellï¼å·ä½æ°ç®ç±factorså³å®çï¼åæ¬æ°æ®éä¸­factorsæå«ä¸ªï¼å æ­¤ç»å¶ä¸ä¸ªtrackï¼å¶åå«å«ä¸ªcellãå«æåç¼circos.trackçå½æ°ä¼å¨ææçceléæ·»å åºæ¬åç´ ï¼èåªæåç¼circos.çå½æ°å¯ä»¥å¨ç¹å®çtrackãcelléæ·»å åºæ¬åç´ ãå·ä½çä¸æ¼ç¤ºã
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5) #ææçcelléé½ç»å¶ç¹å¾
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1) #å¨track 1ä¸­çæ è®°ä¸ºaçcelléæ·»å 
textcircos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145016.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æ¥ä¸æ¥ç»å¶ç¬¬äºä¸ªtrack&#34;&gt;æ¥ä¸æ¥ç»å¶ç¬¬äºä¸ª&lt;code&gt;track&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;circos.trackHist&lt;/code&gt;æ·»å æ±ç¶å¾ï¼ç±äºæ±ç¶å¾ç¸å¯¹é«çº§ä¸ç¹ï¼å æ­¤&lt;code&gt;circos.trackHist&lt;/code&gt;ä¼èªå¨åå»ºä¸ä¸ª&lt;code&gt;track&lt;/code&gt;ï¼æ éæä»¬&lt;code&gt;circos.trackPlotRegion&lt;/code&gt;è¿è¡åå»ºã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)
circos.par(track.height = 0.1)
circos.initialize(factors = a$factors, x = a$x)
circos.trackPlotRegion(factors = a$factors, y = a$y, 
panel.fun = function(x, y) { 
circos.axis()})
col &amp;lt;- rep(c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00FF00&amp;quot;), 4)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
bg.col &amp;lt;- rep(c(&amp;quot;#EFEFEF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;), 4)
circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145031.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;åå»ºç¬¬ä¸ä¸ªtrack&#34;&gt;åå»ºç¬¬ä¸ä¸ª&lt;code&gt;track&lt;/code&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;è¿éåå¾æä¸ä¸ï¼å½æä»¬ç»å¶å¤ä¸ª&lt;code&gt;track&lt;/code&gt;æ¶ï¼æä»¬æ·»å åºæ¬åç´ æ¶è¦æå®æ·»å å°åªä¸ª&lt;code&gt;track&lt;/code&gt;(&lt;code&gt;track.index&lt;/code&gt;æå®)ãåªä¸ª&lt;code&gt;cell&lt;/code&gt;(&lt;code&gt;sector.index&lt;/code&gt;æå®)éï¼å¦æä¸æå®ï¼é£ä¹å°é»è®¤&lt;code&gt;track&lt;/code&gt;æ¯æä»¬åååå»ºçé£ä¸ªã&lt;code&gt;track.index&lt;/code&gt;ã&lt;code&gt;sector.index&lt;/code&gt;ç­åæ°å¯ä»¥éè¿&lt;code&gt;get.cell.meta.data&lt;/code&gt;å½æ°è·åã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)
circos.par(track.height = 0.1)
circos.initialize(factors = a$factors, x = a$x)
circos.trackPlotRegion(factors = a$factors, y = a$y,
 panel.fun = function(x, y) { 
circos.axis()})
col &amp;lt;- rep(c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00FF00&amp;quot;), 4)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
bg.col &amp;lt;- rep(c(&amp;quot;#EFEFEF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;), 4)
circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)
circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y, 
panel.fun = function(x, y) {
 grey = c(&amp;quot;#FFFFFF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;, &amp;quot;#999999&amp;quot;) 
sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;) #è¿ä¸ªæ¯ç¬¬ä¸ä¸ªtrackï¼å ä¸ºæä»¬åååå»ºï¼è¿éè¿ä¸æ­¥ä¸ç¨ä¹å¯ã
 xlim = get.cell.meta.data(&amp;quot;xlim&amp;quot;)
 ylim = get.cell.meta.data(&amp;quot;ylim&amp;quot;) 
circos.text(mean(xlim), mean(ylim), sector.index) 
circos.points(x[1:10], y[1:10], col = &amp;quot;red&amp;quot;, pch = 16, cex = 0.6) 
circos.points(x[11:20], y[11:20], col = &amp;quot;blue&amp;quot;, cex = 0.6)})
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145044.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;å®éæä½ä¸­æä»¬å¸¸å¸¸ä¼æ´æ°æ°æ®æèæ³æ´æ°å¾å½¢ï¼è¿æ¯å¯ä»¥éè¿&lt;code&gt;circos.updatePlotRegion&lt;/code&gt;å½æ°å¨ç¹å®ç&lt;code&gt;track&lt;/code&gt;ã&lt;code&gt;cell&lt;/code&gt;é(åå é¤åæ·»å )&lt;code&gt;update&lt;/code&gt;ï¼ä¸é¢æä»¬å°éè¿&lt;code&gt;circos.updatePlotRegion&lt;/code&gt;å½æ°åå é¤&lt;code&gt;track 2&lt;/code&gt;ã&lt;code&gt;sector d&lt;/code&gt;ä¸­çå¾å½¢åç´ åæ·»å ç¹å¾ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)
circos.par(track.height = 0.1)
circos.initialize(factors = a$factors, x = a$x)
circos.trackPlotRegion(factors = a$factors, y = a$y, 
panel.fun = function(x, y) { 
circos.axis()})col &amp;lt;- rep(c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00FF00&amp;quot;), 4)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
bg.col &amp;lt;- rep(c(&amp;quot;#EFEFEF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;), 4)
circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)
circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y,
 panel.fun = function(x, y) { 
grey = c(&amp;quot;#FFFFFF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;, &amp;quot;#999999&amp;quot;) 
sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;)
 xlim = get.cell.meta.data(&amp;quot;xlim&amp;quot;) 
ylim = get.cell.meta.data(&amp;quot;ylim&amp;quot;) 
circos.text(mean(xlim), mean(ylim), sector.index)
circos.points(x[1:10], y[1:10], col = &amp;quot;red&amp;quot;, pch = 16, cex = 0.6)
 circos.points(x[11:20], y[11:20], col = &amp;quot;blue&amp;quot;, cex = 0.6)})
# updateç¬¬2ä¸ªtrackä¸­æ è®°ä¸ºdçsector
circos.updatePlotRegion(sector.index = &amp;quot;d&amp;quot;, track.index = 2)
circos.points(x = -2:2, y = rep(0, 5))
xlim &amp;lt;- get.cell.meta.data(&amp;quot;xlim&amp;quot;)
ylim &amp;lt;- get.cell.meta.data(&amp;quot;ylim&amp;quot;)
circos.text(mean(xlim), mean(ylim), &amp;quot;updated&amp;quot;)
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145058.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;æ¥ä¸æ¥ç»å¶ç¬¬åä¸ªtrack&#34;&gt;æ¥ä¸æ¥ç»å¶ç¬¬åä¸ª&lt;code&gt;track&lt;/code&gt;&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)
circos.par(track.height = 0.1)
circos.initialize(factors = a$factors, x = a$x)
circos.trackPlotRegion(factors = a$factors, y = a$y,
 panel.fun = function(x, y) { circos.axis()})
col &amp;lt;- rep(c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00FF00&amp;quot;), 4)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
bg.col &amp;lt;- rep(c(&amp;quot;#EFEFEF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;), 4)
circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)
circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y, 
panel.fun = function(x, y) { 
grey = c(&amp;quot;#FFFFFF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;, &amp;quot;#999999&amp;quot;) 
sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;) 
xlim = get.cell.meta.data(&amp;quot;xlim&amp;quot;)
 ylim = get.cell.meta.data(&amp;quot;ylim&amp;quot;) 
circos.text(mean(xlim), mean(ylim), sector.index) 
circos.points(x[1:10], y[1:10], col = &amp;quot;red&amp;quot;, pch = 16, cex = 0.6) 
circos.points(x[11:20], y[11:20], col = &amp;quot;blue&amp;quot;, cex = 0.6)})
# updateç¬¬2ä¸ªtrackä¸­æ è®°ä¸ºdçsector
circos.updatePlotRegion(sector.index = &amp;quot;d&amp;quot;, track.index = 2)
circos.points(x = -2:2, y = rep(0, 5))
xlim &amp;lt;- get.cell.meta.data(&amp;quot;xlim&amp;quot;)
ylim &amp;lt;- get.cell.meta.data(&amp;quot;ylim&amp;quot;)
circos.text(mean(xlim), mean(ylim), &amp;quot;updated&amp;quot;)
circos.clear()
circos.trackPlotRegion(factors = a$factors, y = a$y)
circos.trackLines(a$factors[1:100], a$x[1:100], a$y[1:100], type = &amp;quot;h&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145113.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;æ¥ä¸æ¥æ·»å &lt;code&gt;links&lt;/code&gt;ï¼&lt;code&gt;links&lt;/code&gt;å¯ä»¥æ¯&lt;code&gt;point&lt;/code&gt;å°&lt;code&gt;point&lt;/code&gt;ã&lt;code&gt;point&lt;/code&gt;å°&lt;code&gt;interval&lt;/code&gt;ã&lt;code&gt;interval&lt;/code&gt;å°&lt;code&gt;interval&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;par(mar = c(1, 1, 1, 1), lwd = 0.1, cex = 0.6)
circos.par(track.height = 0.1)
circos.initialize(factors = a$factors, x = a$x)
circos.trackPlotRegion(factors = a$factors, y = a$y,
 panel.fun = function(x, y) { circos.axis()})
col &amp;lt;- rep(c(&amp;quot;#FF0000&amp;quot;, &amp;quot;#00FF00&amp;quot;), 4)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
circos.trackPoints(a$factors, a$x, a$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, &amp;quot;left&amp;quot;, sector.index = &amp;quot;a&amp;quot;, track.index = 1)
circos.text(1, 0.5, &amp;quot;right&amp;quot;, sector.index = &amp;quot;a&amp;quot;)
bg.col &amp;lt;- rep(c(&amp;quot;#EFEFEF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;), 4)
circos.trackHist(a$factors, a$x, bg.col = bg.col, col = NA)
circos.trackPlotRegion(factors = a$factors, x = a$x, y = a$y,
 panel.fun = function(x, y) {
 grey = c(&amp;quot;#FFFFFF&amp;quot;, &amp;quot;#CCCCCC&amp;quot;, &amp;quot;#999999&amp;quot;) 
sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;) 
xlim = get.cell.meta.data(&amp;quot;xlim&amp;quot;) 
ylim = get.cell.meta.data(&amp;quot;ylim&amp;quot;)
circos.text(mean(xlim), mean(ylim), sector.index) 
circos.points(x[1:10], y[1:10], col = &amp;quot;red&amp;quot;, pch = 16, cex = 0.6) 
circos.points(x[11:20], y[11:20], col = &amp;quot;blue&amp;quot;, cex = 0.6)})
# updateç¬¬2ä¸ªtrackä¸­æ è®°ä¸ºdçsector
circos.updatePlotRegion(sector.index = &amp;quot;d&amp;quot;, track.index = 2)
circos.points(x = -2:2, y = rep(0, 5))
xlim &amp;lt;- get.cell.meta.data(&amp;quot;xlim&amp;quot;)
ylim &amp;lt;- get.cell.meta.data(&amp;quot;ylim&amp;quot;)
circos.text(mean(xlim), mean(ylim), &amp;quot;updated&amp;quot;)
circos.clear()
circos.trackPlotRegion(factors = a$factors, y = a$y)
circos.trackLines(a$factors[1:100], a$x[1:100], a$y[1:100], type = &amp;quot;h&amp;quot;)
circos.link(&amp;quot;a&amp;quot;, 0, &amp;quot;b&amp;quot;, 0, h = 0.3) #point to point
circos.link(&amp;quot;c&amp;quot;, c(-0.5, 0.5), &amp;quot;d&amp;quot;, c(-0.5, 0.5), col = &amp;quot;red&amp;quot;, border = NA, h = 0.2) #intreval to interval
circos.link(&amp;quot;e&amp;quot;, 0, &amp;quot;g&amp;quot;, c(-1, 1), col = &amp;quot;green&amp;quot;, border = &amp;quot;black&amp;quot;, lwd = 2, lty = 2) #point to interval
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145127.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;circlizeè¯¦è¿°&#34;&gt;circlizeè¯¦è¿°&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;circlize&lt;/code&gt;çç»å¾è§åæ¯åå§å(&lt;code&gt;initialize&lt;/code&gt;)-åå»º&lt;code&gt;track&lt;/code&gt;-æ·»å å¾å½¢åç´ -åå»º&lt;code&gt;track&lt;/code&gt;-æ·»å å¾å½¢åç´ -â¦-&lt;code&gt;circos.clear&lt;/code&gt;ãå·ä½åæ°è®¾ç½®ä»¥åè§£éç±äºåå®¹å¤ªå¤ï¼æå´è¶£çå¯ä»¥èªå·±
&lt;a href=&#34;https://cran.r-project.org/web/packages/circlize/vignettes/circlize.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;åèææ¡£&lt;/a&gt;ã æè®¤ä¸ºæ¯è¾éè¦çæ¯è¦çè§£&lt;code&gt;track&lt;/code&gt;ã&lt;code&gt;sector&lt;/code&gt;ãç±äºåºæ¬ææçå¾å½¢åç´ æä»¬é½æ¯æ·»å å¨&lt;code&gt;sector&lt;/code&gt;
éé¢ï¼å æ­¤å°±éè¦æå®&lt;code&gt;track.index&lt;/code&gt;ä»¥å&lt;code&gt;sector.index&lt;/code&gt;ãæ¥ä¸æ¥å°±ç¨ä¸ªä¾å­æ¥è®²è§£ä¸ä¸å¦ä½æçºµ&lt;code&gt;track&lt;/code&gt;ã&lt;code&gt;sector&lt;/code&gt;ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;par(mar = c(1, 1, 1, 1))
factors &amp;lt;- letters[1:8]
circos.initialize(factors = factors, xlim = c(0, 1)) #åå§å# ç»å¶ä¸ä¸ªtrackï¼å¹¶æ¾ç¤ºå·ä½ä¿¡æ¯
for (i in 1:3) { 
circos.trackPlotRegion(ylim = c(0, 1))}
circos.info(plot = TRUE)
# éè¿draw.sector()æ¥é«äº®æä¸sectorï¼æ¯å¦aï¼
draw.sector(get.cell.meta.data(&amp;quot;cell.start.degree&amp;quot;, sector.index = &amp;quot;a&amp;quot;), 
get.cell.meta.data(&amp;quot;cell.end.degree&amp;quot;, sector.index = &amp;quot;a&amp;quot;), rou1 = 1, col = &amp;quot;blue&amp;quot;)
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145140.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;### é«äº®æä¸trackï¼ æ¯å¦ç¬¬ä¸ä¸ªtrackï¼
circos.initialize(factors = factors, xlim = c(0, 1))
for (i in 1:3) { 
circos.trackPlotRegion(ylim = c(0, 1))}
circos.info(plot = TRUE)
draw.sector(0, 360, rou1 = get.cell.meta.data(&amp;quot;cell.top.radius&amp;quot;, track.index = 1), 
rou2 = get.cell.meta.data(&amp;quot;cell.bottom.radius&amp;quot;, track.index = 1), col = &amp;quot;green&amp;quot;)
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145152.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# é«äº®æä¸trackæä¸sectorï¼æ¯å¦å°2ã3trackä¸­çeãf(sector)ï¼
circos.initialize(factors = factors, xlim = c(0, 1))
for (i in 1:3) { circos.trackPlotRegion(ylim = c(0, 1))}
circos.info(plot = TRUE)
draw.sector(get.cell.meta.data(&amp;quot;cell.start.degree&amp;quot;, sector.index = &amp;quot;e&amp;quot;), 
get.cell.meta.data(&amp;quot;cell.end.degree&amp;quot;, sector.index = &amp;quot;f&amp;quot;), 
get.cell.meta.data(&amp;quot;cell.top.radius&amp;quot;, track.index = 2), 
get.cell.meta.data(&amp;quot;cell.bottom.radius&amp;quot;, track.index = 3), col = &amp;quot;red&amp;quot;)
circos.clear() #åä¸å«å¿äºcircos.clearï¼ä¸ç¶ä¸æ¬¡æ æ³ç»å¾ã
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145239.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;æ¾å¤§æä¸ç¹å®åºå&#34;&gt;æ¾å¤§æä¸ç¹å®åºå&lt;/h3&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;df &amp;lt;- data.frame(factors = sample(letters[1:6], 100, replace = TRUE),
                          x = rnorm(100), 
                          y = rnorm(100), 
                          stringsAsFactors = FALSE)
# æ¾å¤§aï¼båºå
zoom_df &amp;lt;- df %&amp;gt;% dplyr::filter(factors %in% c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;))
zoom_df$factors &amp;lt;- paste0(&amp;quot;zoom_&amp;quot;, zoom_df$factors)
df2 &amp;lt;- rbind(df, zoom_df)
xrange &amp;lt;- tapply(df2$x, df2$factors, function(x) max(x) - min(x))
normal_sector_index &amp;lt;- unique(df$factors)
zoomed_sector_index &amp;lt;- unique(zoom_df$factors)
sector.width &amp;lt;- c(xrange[normal_sector_index]/sum(xrange[normal_sector_index]), 
xrange[zoomed_sector_index]/sum(xrange[zoomed_sector_index]))
# ç»å¾
par(mar = c(1, 1, 1, 1))
circos.par(start.degree = 90)
circos.initialize(df2$factors, x = df2$x, sector.width = sector.width)
circos.trackPlotRegion(df2$factors, x = df2$x, y = df2$y, 
panel.fun = function(x, y) { 
circos.points(x, y, col = &amp;quot;red&amp;quot;, pch = 16, cex = 0.5) 
xlim = get.cell.meta.data(&amp;quot;xlim&amp;quot;) 
ylim = get.cell.meta.data(&amp;quot;ylim&amp;quot;) 
sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;) 
circos.text(mean(xlim), mean(ylim), sector.index, niceFacing = TRUE)})
# æ·»å links
circos.link(&amp;quot;a&amp;quot;, get.cell.meta.data(&amp;quot;cell.xlim&amp;quot;, sector.index = &amp;quot;a&amp;quot;), &amp;quot;zoom_a&amp;quot;, 
get.cell.meta.data(&amp;quot;cell.xlim&amp;quot;, sector.index = &amp;quot;zoom_a&amp;quot;), border = NA, col = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145251.png&#34; alt=&#34;&#34;&gt;
circos.clear()&lt;/p&gt;
&lt;h2 id=&#34;ä¸¾ä¸ªæ å­&#34;&gt;ä¸¾ä¸ªæ å­&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;ååå¾+ç­å¾+è¿åæ &lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;set.seed(1234)
data &amp;lt;- matrix(rnorm(100 * 10), nrow = 10, ncol = 100)
col &amp;lt;- colorRamp2(c(-2, 0, 2), c(&amp;quot;green&amp;quot;, &amp;quot;black&amp;quot;, &amp;quot;red&amp;quot;))
factors &amp;lt;- rep(letters[1:2], times = c(30, 70))
data_list &amp;lt;- list(a = data[, factors == &amp;quot;a&amp;quot;], b = data[, factors == &amp;quot;b&amp;quot;])
dend_list &amp;lt;- list(a = as.dendrogram(hclust(dist(t(data_list[[&amp;quot;a&amp;quot;]])))), 
                  b = as.dendrogram(hclust(dist(t(data_list[[&amp;quot;b&amp;quot;]])))))
circos.par(cell.padding = c(0, 0, 0, 0), gap.degree = 5)
circos.initialize(factors = factors, xlim = cbind(c(0, 0), table(factors)))
circos.track(ylim = c(0, 10), bg.border = NA, 
panel.fun = function(x, y) {
 sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;) 
d = data_list[[sector.index]] 
dend = dend_list[[sector.index]] 
d2 = d[, order.dendrogram(dend)] 
col_data = col(d2)
nr = nrow(d2)
nc = ncol(d2) 
for (i in 1:nr) { 
circos.rect(1:nc - 1, rep(nr - i, nc), 1:nc, rep(nr - i + 1, nc),
border = col_data[i, ], col = col_data[i, ]) }})
max_height &amp;lt;- max(sapply(dend_list, function(x) attr(x, &amp;quot;height&amp;quot;)))
circos.track(ylim = c(0, max_height), 
bg.border = NA, track.height = 0.3,
panel.fun = function(x, y) { 
sector.index = get.cell.meta.data(&amp;quot;sector.index&amp;quot;)
dend = dend_list[[sector.index]]
circos.dendrogram(dend, max_height = max_height)})
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145302.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;å¤å¾æå&#34;&gt;å¤å¾æå&lt;/h2&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;ç´æ¥ç¨layoutè®¾ç½®&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;layout(matrix(1:9, 3, 3))
for (i in 1:9) {
 factors = letters[1:8] 
par(mar = c(0.5, 0.5, 0.5, 0.5)) 
circos.par(cell.padding = c(0, 0, 0, 0)) 
circos.initialize(factors = factors, xlim = c(0, 1)) 
circos.trackPlotRegion(ylim = c(0, 1), track.height = 0.05, 
bg.col = rand_color(8), bg.border = NA) 
# ç»å¶links 
for (i in 1:20) {
se = sample(letters[1:8], 2) 
circos.link(se[1], runif(2), se[2], runif(2),
col = rand_color(1, transparency = 0.4), border = NA) 
} 
circos.clear()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;sessioninfo&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145316.png&#34; alt=&#34;&#34;&gt;
sessionInfo&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;çè§£circlizeåçåçï¼ç»å¶åºå ç»æ°æ®çå¾å½¢ä¹æ¯ä¸æ ·çãææ¶é´ä¸æ¬¡ä»ç»(ä¸»è¦æ¯æèªå·±è¿æ²¡çå®ï¼çä¸å¤ªæ)&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819145332.png&#34; alt=&#34;&#34;&gt;ã
èè§ç©ï¼ç»åº&lt;code&gt;sessionInfo&lt;/code&gt;ã&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;sessionInfo()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## R version 3.4.0 (2017-04-21)
## Platform: x86_64-w64-mingw32/x64 (64-bit)
## Running under: Windows 8.1 x64 (build 9600)
## ## Matrix products: default## 
## locale:
## [1] LC_COLLATE=Chinese (Simplified)_China.936 
## [2] LC_CTYPE=Chinese (Simplified)_China.936 
## [3] LC_MONETARY=Chinese (Simplified)_China.936
## [4] LC_NUMERIC=C 
## [5] LC_TIME=Chinese (Simplified)_China.936 
## ## attached base packages:
## [1] stats graphics grDevices utils datasets methods base 
## ## other attached packages:
## [1] circlize_0.4.0 BiocInstaller_1.26.0 forcats_0.2.0
## [4] stringr_1.2.0 dplyr_0.5.0 purrr_0.2.2.2 
## [7] readr_1.1.1 tidyr_0.6.3 tibble_1.3.1
## [10] ggplot2_2.2.1 tidyverse_1.1.1.9000
#### loaded via a namespace (and not attached):
## [1] shape_1.4.2 clisymbols_1.2.0 reshape2_1.4.2 
## [4] haven_1.0.0 lattice_0.20-35 colorspace_1.3-2
## [7] htmltools_0.3.6 yaml_2.1.14 rlang_0.1.1 
## [10] foreign_0.8-68 DBI_0.6-1 modelr_0.1.0
## [13] readxl_1.0.0 plyr_1.8.4 munsell_0.4.3 
## [16] gtable_0.2.0 cellranger_1.1.0 rvest_0.3.2 
## [19] GlobalOptions_0.0.12 psych_1.7.5 evaluate_0.10 
## [22] knitr_1.16 parallel_3.4.0 broom_0.4.2 
## [25] Rcpp_0.12.11 scales_0.4.1 backports_1.1.0 
## [28] formatR_1.5 jsonlite_1.4 boxes_0.0.0.9000
## [31] mnormt_1.5-5 hms_0.3 digest_0.6.12 
## [34] stringi_1.1.5 grid_3.4.0 rprojroot_1.2
## [37] tools_3.4.0 magrittr_1.5 lazyeval_0.2.0 
## [40] crayon_1.3.2.9000 xml2_1.1.1 lubridate_1.6.0 
## [43] assertthat_0.2.0 rmarkdown_1.5 httr_1.2.1 
## [46] rstudioapi_0.6 R6_2.2.1 nlme_3.1-131
## [49] compiler_3.4.0
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ggplot2å­¦ä¹ ç¬è®°ç³»åä¹å©ç¨ggplot2ç»å¶æ¡å½¢å¾</title>
      <link>https://taoyan.netlify.app/post/2017-06-25.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E6%9D%A1%E5%BD%A2%E5%9B%BE/</link>
      <pubDate>Sun, 25 Jun 2017 09:23:05 -0500</pubDate>
      <guid>https://taoyan.netlify.app/post/2017-06-25.ggplot2%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E7%B3%BB%E5%88%97%E4%B9%8B%E5%88%A9%E7%94%A8ggplot2%E7%BB%98%E5%88%B6%E6%9D%A1%E5%BD%A2%E5%9B%BE/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144529.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç®ä»&#34;&gt;ç®ä»&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;æ¡å½¢å¾å¯ä»¥è¯´æ¯æä»¬æå¸¸ç¨çæ°æ®å¯è§åæ¹æ³äºï¼éå¸¸ç¨äºå±ç¤ºä¸ååç±»æ¡ä»¶ä¸ï¼å¨xè½´ä¸ï¼æä¸ªæ°å¼ååéçåå¼ï¼yè½´ä¸ï¼ãç»å¶æ¡å½¢å¾æ¶éè¦ç¹å«æ³¨æçä¸ä¸ªç»èæ¯æ¡å½¢å¾çæ¡å½¢é«åº¦ææ¶è¡¨ç¤ºçæ¯æ°æ®éä¸­åéçé¢æ°ï¼ææ¶è¡¨ç¤ºçåæ¯åéæ¬èº«ãæ¬æå°ä¼ä»ç»è¿ä¸¤ç±»æ¡å½¢å¾çç»å¾æå·§ã&lt;/p&gt;
&lt;h2 id=&#34;ç»å¶æ¡å½¢å¾&#34;&gt;ç»å¶æ¡å½¢å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;ä½¿ç¨&lt;code&gt;ggplot()&lt;/code&gt;å½æ°ä¸&lt;code&gt;geom_bar(stat=&amp;quot;identity&amp;quot;)&lt;/code&gt;ï¼ç»å¶æ¡å½¢å¾ï¼æä»¬å°å©ç¨&lt;strong&gt;gcookbook&lt;/strong&gt;åä¸­çæ°æ®è¿è¡ç»å¶ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#æ²¡å®è£åè¦åå®è£ågcookbookãggplot2ä»¥ådplyr
library(gcookbook)#å è½½gcookbookä»¥ä½¿ç¨å¶åå«çæ°æ®
library(ggplot2)#ç¨äºå¯è§å
library(dplyr)#ç¨äºæ°æ®å¤ç
è¿éæä»¬è°ç¨**gcookbook**éçæ°æ®éç»å¶æ¡å½¢å¾
head(pg_mean)#æ¥çæ°æ®é
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## group weigh
 1 ctrl 5.032
 2 trt1 4.661
 3 trt2 5.526
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=pg_mean, aes(x=group, y=weight))+#å°groupãweightåå«èµå¼ç»xãyè½´ 
geom_bar(stat = &amp;quot;identity&amp;quot;)#å¿é¡»å°geom_bar()ä¸­çstat(ç»è®¡åæ¢)åæ°è®¾ç½®
ä¸ºâidentityâï¼å³å¯¹åå§æ°æ®éä¸ä½ä»»ä½ç»è®¡åæ¢ï¼èè¯¥åæ°çé»è®¤å¼ä¸º&#39;count&#39;ï¼å³è§æµæ°éã
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144542.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;å½xæ¯è¿ç»­åï¼æ°å¼åï¼åéæ¶ï¼æ¡å½¢å¾ç¥æä¸åï¼éè¦ç¥ä½è°æ´ï¼å·ä½å¦ä¸ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;str(BOD)#æ¥çBODæ°æ®éå¯ä»¥åç°Timeåéæ¯æ°å¼å

## &#39;data.frame&#39;:  6 obs. of 2 variables: 
## $ Time : num 1 2 3 4 5 7
## $ demand: num 8.3 10.3 19 16 15.6 19.8
## - attr(*, &amp;quot;reference&amp;quot;)= chr &amp;quot;A1.4, p. 270&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=BOD, aes(x=Time, y=demand))+ geom_bar(stat = &amp;quot;identity&amp;quot;)#æ­¤æ¶Timeæ¯æ°å¼å
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144559.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=BOD, aes(x=factor(Time), y=demand))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;)#å°Timeè½¬æ¢ä¸ºå å­åï¼åç±»/ç¦»æ£åéï¼ï¼ä»ç»æ¯è¾ä¸¤å¾
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144616.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;æ¡å½¢å¾é¢è²æä¸¤é¨åï¼å¡«åé¢è²ï¼&lt;strong&gt;fill&lt;/strong&gt;ï¼ä»¥åè¾¹æ¡é¢è²ï¼&lt;strong&gt;color&lt;/strong&gt;ï¼ï¼å æ­¤è°æ´æ¡å½¢å¾é¢è²è¦è°ä¸¤é¨åï¼å·ä½å¦ä¸ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=BOD, aes(x=factor(Time), y=demand))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;, fill=&amp;quot;blue&amp;quot;, color=&amp;quot;black&amp;quot;)#å¯ä»¥èªå·±è®¾å®åå¥½çé¢è²
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144629.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç»å¶ç°ç¶æ¡å½¢å¾&#34;&gt;ç»å¶ç°ç¶æ¡å½¢å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;æ¹æ³ï¼å°åç±»åéæ å°å°fillåæ°ï¼è¿ç¨&lt;code&gt;geom_bar(position=&amp;quot;dodge&amp;quot;)&lt;/code&gt;ç»å¶ï¼å·ä½å¦ä¸ï¼&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;head(cabbage_exp)#æ¥çæ°æ®ï¼åç°å«æä¸¤ä¸ªåç±»åéï¼`Cultivar`å`Date`ä»¥åä¸ä¸ªè¿ç»­ååéWeight

##  Cultivar Date Weight   sd       n     se
## 1 c39     d16   3.18  0.9566144 10 0.30250803
## 2 c39     d20   2.80  0.2788867 10 0.08819171
## 3 c39     d21   2.74  0.9834181 10 0.31098410
## 4 c52     d16   2.26  0.4452215 10 0.14079141
## 5 c52     d20   3.11  0.7908505 10 0.25008887
## 6 c52     d21   1.47   0.2110819 10 0.06674995
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+#åå«å°Dateä¸Cultivaræ å°ç»xåfill 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;)#position = &amp;quot;dodge&amp;quot;è¡¨ç¤ºæ¡å½¢å¾åå¼ä¸éå (ç°å½¢å¾)ï¼é»è®¤çä¸ºstackï¼å å å¼ï¼,è¿æç¾åæ¯å å å¼(fill)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144653.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;stack&amp;quot;)#å å å¼
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144707.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;fill&amp;quot;)#ç¾åæ¯å å å¼
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144718.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;è®¾ç½®é¢è²æèè°ç¨è°è²æ¿&#34;&gt;è®¾ç½®é¢è²æèè°ç¨è°è²æ¿&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, color=&amp;quot;black&amp;quot;)+ 
scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;)#Set1ä¸ºè°è²æ¿ï¼åæå°ä¼ä¸é¨è®²è§£Colorè®¾ç½®
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144729.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, color=&amp;quot;black&amp;quot;)+ 
scale_fill_manual(values = c(&amp;quot;darkred&amp;quot;, &amp;quot;purple&amp;quot;))#èªè®¾ç½®é¢è²
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144741.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç»å¶é¢æ°æ¡å½¢å¾&#34;&gt;ç»å¶é¢æ°æ¡å½¢å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;head(diamonds,n=10)#æ¥çå10è¡æ°æ®

## # A tibble: 10 Ã 10
##   carat  cut     color clarity depth table  price   x    y     z
##   &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt;    &amp;lt;ord&amp;gt;  &amp;lt;ord&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1  0.23 Ideal      E     SI2    61.5   55    326   3.95  3.98 2.43
## 2  0.21 Premium    E     SI1    59.8   61    326   3.89  3.84 2.31
## 3  0.23 Good       E     VS1    56.9   65    327   4.05  4.07 2.31
## 4  0.29 Premium    I     VS2    62.4   58    334   4.20  4.23 2.63
## 5  0.31 Good       J     SI2    63.3   58    335   4.34  4.35 2.75
## 6  0.24 Very Good  J     VVS2   62.8   57    336   3.94  3.96 2.48
## 7  0.24 Very Good  I     VVS1   62.3   57    336   3.95  3.98 2.47
## 8  0.26 Very Good  H     SI1    61.9   55    337   4.07  4.11 2.53
## 9  0.22 Fair       E     VS2    65.1   61    337   3.87  3.78 2.49
## 10 0.23 Very Good  H     VS1    59.4   61    338   4.00  4.05 2.39
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ggplot(diamonds, aes(x=cut))+#æ­¤æ¶ä¸è¦æ å°ä»»ä½åéå°y 
geom_bar()#ç­ä»·äºgeom_bar(stat=&amp;quot;bin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144752.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ç»å¶yè½´æ­£è´è½´é½ææ°æ®çæ¡å½¢å¾&#34;&gt;ç»å¶yè½´æ­£è´è½´é½ææ°æ®çæ¡å½¢å¾&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;#é¦åååå»ºä¸ä¸æ°æ®é
set.seed(1111)#æ­¤å½ä»¤ä¿è¯æ°æ®ç»æå¯ä»¥éç°å¨ä»»ä½çµèä¸
x &amp;lt;- 1980+1:36#èµå¼x
y &amp;lt;- round(100*rnorm(36))#èµå¼y
mydata &amp;lt;- data.frame(x=x, y=y)#åå»ºæ°æ®émydata
head(mydata)#æ¥çæ°æ®é
##    x    y
## 1 1981  -9
## 2 1982  132
## 3 1983  64
## 4 1984  117
## 5 1985  12
## 6 1986 -293
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;mydata &amp;lt;- mydata%&amp;gt;%#%&amp;gt;%ç®¡éæä½ï¼ç»ådplyrä¸ºæ°æ®å¤çç¥å¨ 
mutate(judge=ifelse(y&amp;gt;=0,&amp;quot;Yes&amp;quot;, &amp;quot;No&amp;quot;))#åå»ºjudgeåéï¼å°yæ­£è´åç±»
head(mydata)#æ¥çæ°æ®
##    x    y   judge
## 1 1981  -9    No
## 2 1982  132   Yes
## 3 1983  64    Yes
## 4 1984  117   Yes
## 5 1985  12    Yes
## 6 1986 -293   No
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;æ¥ä¸æ¥ç»å¶æ¡å½¢å¾
ggplot(data=mydata, aes(x=x, y=y, fill=judge))+
 geom_bar(stat = &amp;quot;identity&amp;quot;,position = &amp;quot;identity&amp;quot;)+#è¿éposition=&amp;quot;identity&amp;quot;å¯ä»¥é¿åç³»ç»å¯¹è´å¼ç»å¶æ¡å½¢å¾ååºè­¦åä¿¡æ¯ 
scale_fill_manual(values = c(&amp;quot;purple&amp;quot;, &amp;quot;blue&amp;quot;), guide=FALSE)+xlab(&amp;quot;Year&amp;quot;)#guide=FALSEè¡¨ç¤ºä¸è¦å¾ä¾,xè½´æ é¢ä¸ºYear
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144802.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;éè¿widthæ¥è°æ´æ¡å½¢å®½åº¦ä»¥åæ¡å½¢è·ç¦»&#34;&gt;éè¿widthæ¥è°æ´æ¡å½¢å®½åº¦ä»¥åæ¡å½¢è·ç¦»&lt;/h2&gt;
&lt;hr&gt;
&lt;pre&gt;&lt;code&gt;head(diamonds)

## # A tibble: 6 Ã 10
##  carat  cut    color  clarity  depth    table   price   x     y     z
##  &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt;    &amp;lt;ord&amp;gt;   &amp;lt;ord&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 0.23  Ideal     E      SI2    61.5     55      326   3.95  3.98  2.43
## 2 0.21  Premium   E      SI1    59.8     61      326   3.89  3.84  2.31
## 3 0.23  Good      E      VS1    56.9     65      327   4.05  4.07  2.31
## 4 0.29  Premium   I      VS2    62.4     58      334   4.20  4.23  2.63
## 5 0.31  Good      J      SI2    63.3     58      335   4.34  4.35  2.75
## 6 0.24  Very Good J      VVS2    62.8    57      336   3.94  3.96  2.48
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data=diamonds, aes(x=color, y=price, fill=cut))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;, width = 0.6, position = position_dodge(0.8))+#è°æ´æ¡å½¢å®½åº¦ä»¥åæ¡å½¢è·ç¦» 
scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144813.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;geom_textæ·»å æ°æ®æ ç­¾&#34;&gt;&lt;code&gt;geom_text()&lt;/code&gt;æ·»å æ°æ®æ ç­¾&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;ä½¿ç¨&lt;code&gt;geom_text()&lt;/code&gt;ä¸ºæ¡å½¢å¾æ·»å æ ç­¾ï¼éè¦åå«æå®ä¸ä¸ªåéæ å°ç»xãyä»¥åæ ç­¾ï¼labelï¼ï¼&lt;code&gt;vjust&lt;/code&gt;å&lt;code&gt;hjust&lt;/code&gt;åå«è°æ´æ ç­¾çç«ç´åæ°´å¹³ä½ç½®ã&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;### æ ç­¾å¨æ¡å½¢å¾é¡¶ç«¯ä¸æ¹
ggplot(data=cabbage_exp, aes(x=interaction(Date, Cultivar), y=Weight))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;)+ 
geom_text(aes(label=Weight), vjust=1.5, color=&amp;quot;white&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144827.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;### æ ç­¾å¨æ¡å½¢å¾é¡¶ç«¯ä¸æ¹
ggplot(data=cabbage_exp, aes(x=interaction(Date, Cultivar), y=Weight))+ 
geom_bar(stat = &amp;quot;identity&amp;quot;)+ 
geom_text(aes(label=Weight), vjust=-0.3, color=&amp;quot;red&amp;quot;)#å¯ä»¥éè¿colorãsizeç­èªè¡è°æ´æ ç­¾å±æ§
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144844.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;å å å¾ä¹ä¸æ ·
ggplot(data=cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar))+ 
geom_bar(stat=&amp;quot;identity&amp;quot;, position = &amp;quot;stack&amp;quot;)+ 
geom_text(aes(label=Weight), size=5, color=&amp;quot;black&amp;quot;, vjust=3.5, hjust=0.5, 
position = position_stack())#è¿éçpositionè¦ä¸geom_bar()éé¢çä¿æä¸è´ï¼åç§åæ°å¤è°æ´æè½æææä½³
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/YTLogos/pic_link/master/img/20190819144901.png&#34; alt=&#34;&#34;&gt;
ä¸æ¬¡å°éç¹è®²è§£å¦ä½æ·»å è¯¯å·®æ£ãæ¾èæ§æ è®°ãåæ è½´æ é¢ãå¾æ é¢ä»¥åé¨åå°æå·§ç­ç­&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
